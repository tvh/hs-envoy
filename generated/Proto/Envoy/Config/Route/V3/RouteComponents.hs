{- This file was auto-generated from envoy/config/route/v3/route_components.proto by the proto-lens-protoc program. -}
{-# LANGUAGE ScopedTypeVariables, DataKinds, TypeFamilies, UndecidableInstances, GeneralizedNewtypeDeriving, MultiParamTypeClasses, FlexibleContexts, FlexibleInstances, PatternSynonyms, MagicHash, NoImplicitPrelude, DataKinds, BangPatterns, TypeApplications, OverloadedStrings, DerivingStrategies#-}
{-# OPTIONS_GHC -Wno-unused-imports#-}
{-# OPTIONS_GHC -Wno-duplicate-exports#-}
{-# OPTIONS_GHC -Wno-dodgy-exports#-}
module Proto.Envoy.Config.Route.V3.RouteComponents (
        CorsPolicy(), CorsPolicy'EnabledSpecifier(..),
        _CorsPolicy'FilterEnabled, Decorator(), DirectResponseAction(),
        FilterAction(), FilterConfig(), HeaderMatcher(),
        HeaderMatcher'HeaderMatchSpecifier(..), _HeaderMatcher'ExactMatch,
        _HeaderMatcher'SafeRegexMatch, _HeaderMatcher'RangeMatch,
        _HeaderMatcher'PresentMatch, _HeaderMatcher'PrefixMatch,
        _HeaderMatcher'SuffixMatch, _HeaderMatcher'ContainsMatch,
        HedgePolicy(), InternalRedirectPolicy(), NonForwardingAction(),
        QueryParameterMatcher(),
        QueryParameterMatcher'QueryParameterMatchSpecifier(..),
        _QueryParameterMatcher'StringMatch,
        _QueryParameterMatcher'PresentMatch, RateLimit(),
        RateLimit'Action(), RateLimit'Action'ActionSpecifier(..),
        _RateLimit'Action'SourceCluster',
        _RateLimit'Action'DestinationCluster',
        _RateLimit'Action'RequestHeaders',
        _RateLimit'Action'RemoteAddress', _RateLimit'Action'GenericKey',
        _RateLimit'Action'HeaderValueMatch',
        _RateLimit'Action'DynamicMetadata, _RateLimit'Action'Metadata,
        _RateLimit'Action'Extension, RateLimit'Action'DestinationCluster(),
        RateLimit'Action'DynamicMetaData(), RateLimit'Action'GenericKey(),
        RateLimit'Action'HeaderValueMatch(), RateLimit'Action'MetaData(),
        RateLimit'Action'MetaData'Source(..),
        RateLimit'Action'MetaData'Source(),
        RateLimit'Action'MetaData'Source'UnrecognizedValue,
        RateLimit'Action'RemoteAddress(),
        RateLimit'Action'RequestHeaders(),
        RateLimit'Action'SourceCluster(), RateLimit'Override(),
        RateLimit'Override'OverrideSpecifier(..),
        _RateLimit'Override'DynamicMetadata',
        RateLimit'Override'DynamicMetadata(), RedirectAction(),
        RedirectAction'SchemeRewriteSpecifier(..),
        RedirectAction'PathRewriteSpecifier(..),
        _RedirectAction'HttpsRedirect, _RedirectAction'SchemeRedirect,
        _RedirectAction'PathRedirect, _RedirectAction'PrefixRewrite,
        _RedirectAction'RegexRewrite,
        RedirectAction'RedirectResponseCode(..),
        RedirectAction'RedirectResponseCode(),
        RedirectAction'RedirectResponseCode'UnrecognizedValue,
        RetryPolicy(), RetryPolicy'RateLimitedRetryBackOff(),
        RetryPolicy'ResetHeader(), RetryPolicy'ResetHeaderFormat(..),
        RetryPolicy'ResetHeaderFormat(),
        RetryPolicy'ResetHeaderFormat'UnrecognizedValue,
        RetryPolicy'RetryBackOff(), RetryPolicy'RetryHostPredicate(),
        RetryPolicy'RetryHostPredicate'ConfigType(..),
        _RetryPolicy'RetryHostPredicate'TypedConfig,
        RetryPolicy'RetryPriority(),
        RetryPolicy'RetryPriority'ConfigType(..),
        _RetryPolicy'RetryPriority'TypedConfig, Route(), Route'Action(..),
        _Route'Route, _Route'Redirect, _Route'DirectResponse,
        _Route'FilterAction, _Route'NonForwardingAction,
        Route'TypedPerFilterConfigEntry(), RouteAction(),
        RouteAction'ClusterSpecifier(..),
        RouteAction'HostRewriteSpecifier(..), _RouteAction'Cluster,
        _RouteAction'ClusterHeader, _RouteAction'WeightedClusters,
        _RouteAction'ClusterSpecifierPlugin,
        _RouteAction'HostRewriteLiteral, _RouteAction'AutoHostRewrite,
        _RouteAction'HostRewriteHeader, _RouteAction'HostRewritePathRegex,
        RouteAction'ClusterNotFoundResponseCode(..),
        RouteAction'ClusterNotFoundResponseCode(),
        RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue,
        RouteAction'HashPolicy(),
        RouteAction'HashPolicy'PolicySpecifier(..),
        _RouteAction'HashPolicy'Header', _RouteAction'HashPolicy'Cookie',
        _RouteAction'HashPolicy'ConnectionProperties',
        _RouteAction'HashPolicy'QueryParameter',
        _RouteAction'HashPolicy'FilterState',
        RouteAction'HashPolicy'ConnectionProperties(),
        RouteAction'HashPolicy'Cookie(),
        RouteAction'HashPolicy'FilterState(),
        RouteAction'HashPolicy'Header(),
        RouteAction'HashPolicy'QueryParameter(),
        RouteAction'InternalRedirectAction(..),
        RouteAction'InternalRedirectAction(),
        RouteAction'InternalRedirectAction'UnrecognizedValue,
        RouteAction'MaxStreamDuration(), RouteAction'RequestMirrorPolicy(),
        RouteAction'UpgradeConfig(),
        RouteAction'UpgradeConfig'ConnectConfig(), RouteMatch(),
        RouteMatch'PathSpecifier(..), _RouteMatch'Prefix, _RouteMatch'Path,
        _RouteMatch'SafeRegex, _RouteMatch'ConnectMatcher',
        RouteMatch'ConnectMatcher(), RouteMatch'GrpcRouteMatchOptions(),
        RouteMatch'TlsContextMatchOptions(), Tracing(), VirtualCluster(),
        VirtualHost(), VirtualHost'TlsRequirementType(..),
        VirtualHost'TlsRequirementType(),
        VirtualHost'TlsRequirementType'UnrecognizedValue,
        VirtualHost'TypedPerFilterConfigEntry(), WeightedCluster(),
        WeightedCluster'ClusterWeight(),
        WeightedCluster'ClusterWeight'HostRewriteSpecifier(..),
        _WeightedCluster'ClusterWeight'HostRewriteLiteral,
        WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry()
    ) where
import qualified Data.ProtoLens.Runtime.Control.DeepSeq as Control.DeepSeq
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Prism as Data.ProtoLens.Prism
import qualified Data.ProtoLens.Runtime.Prelude as Prelude
import qualified Data.ProtoLens.Runtime.Data.Int as Data.Int
import qualified Data.ProtoLens.Runtime.Data.Monoid as Data.Monoid
import qualified Data.ProtoLens.Runtime.Data.Word as Data.Word
import qualified Data.ProtoLens.Runtime.Data.ProtoLens as Data.ProtoLens
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Bytes as Data.ProtoLens.Encoding.Bytes
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Growing as Data.ProtoLens.Encoding.Growing
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Parser.Unsafe as Data.ProtoLens.Encoding.Parser.Unsafe
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Encoding.Wire as Data.ProtoLens.Encoding.Wire
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Field as Data.ProtoLens.Field
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Message.Enum as Data.ProtoLens.Message.Enum
import qualified Data.ProtoLens.Runtime.Data.ProtoLens.Service.Types as Data.ProtoLens.Service.Types
import qualified Data.ProtoLens.Runtime.Lens.Family2 as Lens.Family2
import qualified Data.ProtoLens.Runtime.Lens.Family2.Unchecked as Lens.Family2.Unchecked
import qualified Data.ProtoLens.Runtime.Data.Text as Data.Text
import qualified Data.ProtoLens.Runtime.Data.Map as Data.Map
import qualified Data.ProtoLens.Runtime.Data.ByteString as Data.ByteString
import qualified Data.ProtoLens.Runtime.Data.ByteString.Char8 as Data.ByteString.Char8
import qualified Data.ProtoLens.Runtime.Data.Text.Encoding as Data.Text.Encoding
import qualified Data.ProtoLens.Runtime.Data.Vector as Data.Vector
import qualified Data.ProtoLens.Runtime.Data.Vector.Generic as Data.Vector.Generic
import qualified Data.ProtoLens.Runtime.Data.Vector.Unboxed as Data.Vector.Unboxed
import qualified Data.ProtoLens.Runtime.Text.Read as Text.Read
import qualified Proto.Envoy.Annotations.Deprecation
import qualified Proto.Envoy.Config.Core.V3.Base
import qualified Proto.Envoy.Config.Core.V3.Extension
import qualified Proto.Envoy.Config.Core.V3.ProxyProtocol
import qualified Proto.Envoy.Type.Matcher.V3.Regex
import qualified Proto.Envoy.Type.Matcher.V3.String
import qualified Proto.Envoy.Type.Metadata.V3.Metadata
import qualified Proto.Envoy.Type.Tracing.V3.CustomTag
import qualified Proto.Envoy.Type.V3.Percent
import qualified Proto.Envoy.Type.V3.Range
import qualified Proto.Google.Protobuf.Any
import qualified Proto.Google.Protobuf.Duration
import qualified Proto.Google.Protobuf.Wrappers
import qualified Proto.Udpa.Annotations.Migrate
import qualified Proto.Udpa.Annotations.Status
import qualified Proto.Udpa.Annotations.Versioning
import qualified Proto.Validate.Validate
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowOriginStringMatch' @:: Lens' CorsPolicy [Proto.Envoy.Type.Matcher.V3.String.StringMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'allowOriginStringMatch' @:: Lens' CorsPolicy (Data.Vector.Vector Proto.Envoy.Type.Matcher.V3.String.StringMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowMethods' @:: Lens' CorsPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowHeaders' @:: Lens' CorsPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.exposeHeaders' @:: Lens' CorsPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxAge' @:: Lens' CorsPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowCredentials' @:: Lens' CorsPolicy Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'allowCredentials' @:: Lens' CorsPolicy (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.shadowEnabled' @:: Lens' CorsPolicy Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'shadowEnabled' @:: Lens' CorsPolicy (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'enabledSpecifier' @:: Lens' CorsPolicy (Prelude.Maybe CorsPolicy'EnabledSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'filterEnabled' @:: Lens' CorsPolicy (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.filterEnabled' @:: Lens' CorsPolicy Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent@ -}
data CorsPolicy
  = CorsPolicy'_constructor {_CorsPolicy'allowOriginStringMatch :: !(Data.Vector.Vector Proto.Envoy.Type.Matcher.V3.String.StringMatcher),
                             _CorsPolicy'allowMethods :: !Data.Text.Text,
                             _CorsPolicy'allowHeaders :: !Data.Text.Text,
                             _CorsPolicy'exposeHeaders :: !Data.Text.Text,
                             _CorsPolicy'maxAge :: !Data.Text.Text,
                             _CorsPolicy'allowCredentials :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                             _CorsPolicy'shadowEnabled :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent),
                             _CorsPolicy'enabledSpecifier :: !(Prelude.Maybe CorsPolicy'EnabledSpecifier),
                             _CorsPolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show CorsPolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data CorsPolicy'EnabledSpecifier
  = CorsPolicy'FilterEnabled !Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField CorsPolicy "allowOriginStringMatch" [Proto.Envoy.Type.Matcher.V3.String.StringMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowOriginStringMatch
           (\ x__ y__ -> x__ {_CorsPolicy'allowOriginStringMatch = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField CorsPolicy "vec'allowOriginStringMatch" (Data.Vector.Vector Proto.Envoy.Type.Matcher.V3.String.StringMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowOriginStringMatch
           (\ x__ y__ -> x__ {_CorsPolicy'allowOriginStringMatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "allowMethods" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowMethods
           (\ x__ y__ -> x__ {_CorsPolicy'allowMethods = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "allowHeaders" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowHeaders
           (\ x__ y__ -> x__ {_CorsPolicy'allowHeaders = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "exposeHeaders" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'exposeHeaders
           (\ x__ y__ -> x__ {_CorsPolicy'exposeHeaders = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "maxAge" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'maxAge (\ x__ y__ -> x__ {_CorsPolicy'maxAge = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "allowCredentials" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowCredentials
           (\ x__ y__ -> x__ {_CorsPolicy'allowCredentials = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CorsPolicy "maybe'allowCredentials" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'allowCredentials
           (\ x__ y__ -> x__ {_CorsPolicy'allowCredentials = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "shadowEnabled" Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'shadowEnabled
           (\ x__ y__ -> x__ {_CorsPolicy'shadowEnabled = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField CorsPolicy "maybe'shadowEnabled" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'shadowEnabled
           (\ x__ y__ -> x__ {_CorsPolicy'shadowEnabled = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "maybe'enabledSpecifier" (Prelude.Maybe CorsPolicy'EnabledSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'enabledSpecifier
           (\ x__ y__ -> x__ {_CorsPolicy'enabledSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField CorsPolicy "maybe'filterEnabled" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'enabledSpecifier
           (\ x__ y__ -> x__ {_CorsPolicy'enabledSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (CorsPolicy'FilterEnabled x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap CorsPolicy'FilterEnabled y__))
instance Data.ProtoLens.Field.HasField CorsPolicy "filterEnabled" Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _CorsPolicy'enabledSpecifier
           (\ x__ y__ -> x__ {_CorsPolicy'enabledSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (CorsPolicy'FilterEnabled x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap CorsPolicy'FilterEnabled y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message CorsPolicy where
  messageName _ = Data.Text.pack "envoy.config.route.v3.CorsPolicy"
  packedMessageDescriptor _
    = "\n\
      \\n\
      \CorsPolicy\DC2_\n\
      \\EMallow_origin_string_match\CAN\v \ETX(\v2$.envoy.type.matcher.v3.StringMatcherR\SYNallowOriginStringMatch\DC2#\n\
      \\rallow_methods\CAN\STX \SOH(\tR\fallowMethods\DC2#\n\
      \\rallow_headers\CAN\ETX \SOH(\tR\fallowHeaders\DC2%\n\
      \\SOexpose_headers\CAN\EOT \SOH(\tR\rexposeHeaders\DC2\ETB\n\
      \\amax_age\CAN\ENQ \SOH(\tR\ACKmaxAge\DC2G\n\
      \\DC1allow_credentials\CAN\ACK \SOH(\v2\SUB.google.protobuf.BoolValueR\DLEallowCredentials\DC2W\n\
      \\SOfilter_enabled\CAN\t \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentH\NULR\rfilterEnabled\DC2U\n\
      \\SOshadow_enabled\CAN\n\
      \ \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\rshadowEnabledB\DC3\n\
      \\DC1enabled_specifier:$\154\197\136\RS\US\n\
      \\GSenvoy.api.v2.route.CorsPolicyJ\EOT\b\SOH\DLE\STXJ\EOT\b\b\DLE\tJ\EOT\b\a\DLE\bR\fallow_originR\DC2allow_origin_regexR\aenabled"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        allowOriginStringMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_origin_string_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.String.StringMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"allowOriginStringMatch")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        allowMethods__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_methods"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"allowMethods")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        allowHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_headers"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"allowHeaders")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        exposeHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "expose_headers"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"exposeHeaders")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        maxAge__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_age"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"maxAge")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        allowCredentials__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_credentials"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'allowCredentials")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        shadowEnabled__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "shadow_enabled"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'shadowEnabled")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
        filterEnabled__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "filter_enabled"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'filterEnabled")) ::
              Data.ProtoLens.FieldDescriptor CorsPolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 11, allowOriginStringMatch__field_descriptor),
           (Data.ProtoLens.Tag 2, allowMethods__field_descriptor),
           (Data.ProtoLens.Tag 3, allowHeaders__field_descriptor),
           (Data.ProtoLens.Tag 4, exposeHeaders__field_descriptor),
           (Data.ProtoLens.Tag 5, maxAge__field_descriptor),
           (Data.ProtoLens.Tag 6, allowCredentials__field_descriptor),
           (Data.ProtoLens.Tag 10, shadowEnabled__field_descriptor),
           (Data.ProtoLens.Tag 9, filterEnabled__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _CorsPolicy'_unknownFields
        (\ x__ y__ -> x__ {_CorsPolicy'_unknownFields = y__})
  defMessage
    = CorsPolicy'_constructor
        {_CorsPolicy'allowOriginStringMatch = Data.Vector.Generic.empty,
         _CorsPolicy'allowMethods = Data.ProtoLens.fieldDefault,
         _CorsPolicy'allowHeaders = Data.ProtoLens.fieldDefault,
         _CorsPolicy'exposeHeaders = Data.ProtoLens.fieldDefault,
         _CorsPolicy'maxAge = Data.ProtoLens.fieldDefault,
         _CorsPolicy'allowCredentials = Prelude.Nothing,
         _CorsPolicy'shadowEnabled = Prelude.Nothing,
         _CorsPolicy'enabledSpecifier = Prelude.Nothing,
         _CorsPolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          CorsPolicy
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Type.Matcher.V3.String.StringMatcher
             -> Data.ProtoLens.Encoding.Bytes.Parser CorsPolicy
        loop x mutable'allowOriginStringMatch
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'allowOriginStringMatch <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                            mutable'allowOriginStringMatch)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'allowOriginStringMatch")
                              frozen'allowOriginStringMatch
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        90
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "allow_origin_string_match"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'allowOriginStringMatch y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "allow_methods"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"allowMethods") y x)
                                  mutable'allowOriginStringMatch
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "allow_headers"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"allowHeaders") y x)
                                  mutable'allowOriginStringMatch
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "expose_headers"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"exposeHeaders") y x)
                                  mutable'allowOriginStringMatch
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "max_age"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"maxAge") y x)
                                  mutable'allowOriginStringMatch
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "allow_credentials"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"allowCredentials") y x)
                                  mutable'allowOriginStringMatch
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "shadow_enabled"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"shadowEnabled") y x)
                                  mutable'allowOriginStringMatch
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "filter_enabled"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"filterEnabled") y x)
                                  mutable'allowOriginStringMatch
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'allowOriginStringMatch
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'allowOriginStringMatch <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'allowOriginStringMatch)
          "CorsPolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage
                           _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'allowOriginStringMatch") _x))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"allowMethods") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8
                            _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"allowHeaders") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"exposeHeaders") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                               ((Prelude..)
                                  (\ bs
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                             (Prelude.fromIntegral (Data.ByteString.length bs)))
                                          (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                  Data.Text.Encoding.encodeUtf8
                                  _v))
                      ((Data.Monoid.<>)
                         (let
                            _v = Lens.Family2.view (Data.ProtoLens.Field.field @"maxAge") _x
                          in
                            if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                Data.Monoid.mempty
                            else
                                (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                  ((Prelude..)
                                     (\ bs
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                (Prelude.fromIntegral (Data.ByteString.length bs)))
                                             (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                     Data.Text.Encoding.encodeUtf8
                                     _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'allowCredentials") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage
                                         _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'shadowEnabled") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage
                                            _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'enabledSpecifier") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just (CorsPolicy'FilterEnabled v))
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage
                                               v))
                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                     (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))))
instance Control.DeepSeq.NFData CorsPolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_CorsPolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_CorsPolicy'allowOriginStringMatch x__)
                (Control.DeepSeq.deepseq
                   (_CorsPolicy'allowMethods x__)
                   (Control.DeepSeq.deepseq
                      (_CorsPolicy'allowHeaders x__)
                      (Control.DeepSeq.deepseq
                         (_CorsPolicy'exposeHeaders x__)
                         (Control.DeepSeq.deepseq
                            (_CorsPolicy'maxAge x__)
                            (Control.DeepSeq.deepseq
                               (_CorsPolicy'allowCredentials x__)
                               (Control.DeepSeq.deepseq
                                  (_CorsPolicy'shadowEnabled x__)
                                  (Control.DeepSeq.deepseq
                                     (_CorsPolicy'enabledSpecifier x__) ()))))))))
instance Control.DeepSeq.NFData CorsPolicy'EnabledSpecifier where
  rnf (CorsPolicy'FilterEnabled x__) = Control.DeepSeq.rnf x__
_CorsPolicy'FilterEnabled ::
  Data.ProtoLens.Prism.Prism' CorsPolicy'EnabledSpecifier Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent
_CorsPolicy'FilterEnabled
  = Data.ProtoLens.Prism.prism'
      CorsPolicy'FilterEnabled
      (\ p__
         -> case p__ of {
              (CorsPolicy'FilterEnabled p__val) -> Prelude.Just p__val })
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.operation' @:: Lens' Decorator Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.propagate' @:: Lens' Decorator Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'propagate' @:: Lens' Decorator (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@ -}
data Decorator
  = Decorator'_constructor {_Decorator'operation :: !Data.Text.Text,
                            _Decorator'propagate :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                            _Decorator'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show Decorator where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField Decorator "operation" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Decorator'operation
           (\ x__ y__ -> x__ {_Decorator'operation = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Decorator "propagate" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Decorator'propagate
           (\ x__ y__ -> x__ {_Decorator'propagate = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Decorator "maybe'propagate" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Decorator'propagate
           (\ x__ y__ -> x__ {_Decorator'propagate = y__}))
        Prelude.id
instance Data.ProtoLens.Message Decorator where
  messageName _ = Data.Text.pack "envoy.config.route.v3.Decorator"
  packedMessageDescriptor _
    = "\n\
      \\tDecorator\DC2%\n\
      \\toperation\CAN\SOH \SOH(\tR\toperationB\a\250B\EOTr\STX\DLE\SOH\DC28\n\
      \\tpropagate\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\tpropagate:#\154\197\136\RS\RS\n\
      \\FSenvoy.api.v2.route.Decorator"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        operation__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "operation"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"operation")) ::
              Data.ProtoLens.FieldDescriptor Decorator
        propagate__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "propagate"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'propagate")) ::
              Data.ProtoLens.FieldDescriptor Decorator
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, operation__field_descriptor),
           (Data.ProtoLens.Tag 2, propagate__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _Decorator'_unknownFields
        (\ x__ y__ -> x__ {_Decorator'_unknownFields = y__})
  defMessage
    = Decorator'_constructor
        {_Decorator'operation = Data.ProtoLens.fieldDefault,
         _Decorator'propagate = Prelude.Nothing,
         _Decorator'_unknownFields = []}
  parseMessage
    = let
        loop :: Decorator -> Data.ProtoLens.Encoding.Bytes.Parser Decorator
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "operation"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"operation") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "propagate"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"propagate") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Decorator"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"operation") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'propagate") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData Decorator where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_Decorator'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_Decorator'operation x__)
                (Control.DeepSeq.deepseq (_Decorator'propagate x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.status' @:: Lens' DirectResponseAction Data.Word.Word32@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.body' @:: Lens' DirectResponseAction Proto.Envoy.Config.Core.V3.Base.DataSource@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'body' @:: Lens' DirectResponseAction (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.DataSource)@ -}
data DirectResponseAction
  = DirectResponseAction'_constructor {_DirectResponseAction'status :: !Data.Word.Word32,
                                       _DirectResponseAction'body :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.DataSource),
                                       _DirectResponseAction'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show DirectResponseAction where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField DirectResponseAction "status" Data.Word.Word32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DirectResponseAction'status
           (\ x__ y__ -> x__ {_DirectResponseAction'status = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField DirectResponseAction "body" Proto.Envoy.Config.Core.V3.Base.DataSource where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DirectResponseAction'body
           (\ x__ y__ -> x__ {_DirectResponseAction'body = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField DirectResponseAction "maybe'body" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.DataSource) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _DirectResponseAction'body
           (\ x__ y__ -> x__ {_DirectResponseAction'body = y__}))
        Prelude.id
instance Data.ProtoLens.Message DirectResponseAction where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.DirectResponseAction"
  packedMessageDescriptor _
    = "\n\
      \\DC4DirectResponseAction\DC2\"\n\
      \\ACKstatus\CAN\SOH \SOH(\rR\ACKstatusB\n\
      \\250B\a*\ENQ\DLE\216\EOT(d\DC24\n\
      \\EOTbody\CAN\STX \SOH(\v2 .envoy.config.core.v3.DataSourceR\EOTbody:.\154\197\136\RS)\n\
      \'envoy.api.v2.route.DirectResponseAction"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        status__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "status"
              (Data.ProtoLens.ScalarField Data.ProtoLens.UInt32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Word.Word32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"status")) ::
              Data.ProtoLens.FieldDescriptor DirectResponseAction
        body__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "body"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.DataSource)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'body")) ::
              Data.ProtoLens.FieldDescriptor DirectResponseAction
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, status__field_descriptor),
           (Data.ProtoLens.Tag 2, body__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _DirectResponseAction'_unknownFields
        (\ x__ y__ -> x__ {_DirectResponseAction'_unknownFields = y__})
  defMessage
    = DirectResponseAction'_constructor
        {_DirectResponseAction'status = Data.ProtoLens.fieldDefault,
         _DirectResponseAction'body = Prelude.Nothing,
         _DirectResponseAction'_unknownFields = []}
  parseMessage
    = let
        loop ::
          DirectResponseAction
          -> Data.ProtoLens.Encoding.Bytes.Parser DirectResponseAction
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "status"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"status") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "body"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"body") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DirectResponseAction"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"status") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'body") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData DirectResponseAction where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_DirectResponseAction'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_DirectResponseAction'status x__)
                (Control.DeepSeq.deepseq (_DirectResponseAction'body x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.action' @:: Lens' FilterAction Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'action' @:: Lens' FilterAction (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@ -}
data FilterAction
  = FilterAction'_constructor {_FilterAction'action :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                               _FilterAction'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show FilterAction where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField FilterAction "action" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _FilterAction'action
           (\ x__ y__ -> x__ {_FilterAction'action = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField FilterAction "maybe'action" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _FilterAction'action
           (\ x__ y__ -> x__ {_FilterAction'action = y__}))
        Prelude.id
instance Data.ProtoLens.Message FilterAction where
  messageName _ = Data.Text.pack "envoy.config.route.v3.FilterAction"
  packedMessageDescriptor _
    = "\n\
      \\fFilterAction\DC2,\n\
      \\ACKaction\CAN\SOH \SOH(\v2\DC4.google.protobuf.AnyR\ACKaction:&\154\197\136\RS!\n\
      \\USenvoy.api.v2.route.FilterAction"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        action__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "action"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'action")) ::
              Data.ProtoLens.FieldDescriptor FilterAction
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, action__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _FilterAction'_unknownFields
        (\ x__ y__ -> x__ {_FilterAction'_unknownFields = y__})
  defMessage
    = FilterAction'_constructor
        {_FilterAction'action = Prelude.Nothing,
         _FilterAction'_unknownFields = []}
  parseMessage
    = let
        loop ::
          FilterAction -> Data.ProtoLens.Encoding.Bytes.Parser FilterAction
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "action"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"action") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "FilterAction"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'action") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData FilterAction where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_FilterAction'_unknownFields x__)
             (Control.DeepSeq.deepseq (_FilterAction'action x__) ())
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.config' @:: Lens' FilterConfig Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'config' @:: Lens' FilterConfig (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.isOptional' @:: Lens' FilterConfig Prelude.Bool@ -}
data FilterConfig
  = FilterConfig'_constructor {_FilterConfig'config :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                               _FilterConfig'isOptional :: !Prelude.Bool,
                               _FilterConfig'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show FilterConfig where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField FilterConfig "config" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _FilterConfig'config
           (\ x__ y__ -> x__ {_FilterConfig'config = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField FilterConfig "maybe'config" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _FilterConfig'config
           (\ x__ y__ -> x__ {_FilterConfig'config = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField FilterConfig "isOptional" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _FilterConfig'isOptional
           (\ x__ y__ -> x__ {_FilterConfig'isOptional = y__}))
        Prelude.id
instance Data.ProtoLens.Message FilterConfig where
  messageName _ = Data.Text.pack "envoy.config.route.v3.FilterConfig"
  packedMessageDescriptor _
    = "\n\
      \\fFilterConfig\DC2,\n\
      \\ACKconfig\CAN\SOH \SOH(\v2\DC4.google.protobuf.AnyR\ACKconfig\DC2\US\n\
      \\vis_optional\CAN\STX \SOH(\bR\n\
      \isOptional"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        config__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'config")) ::
              Data.ProtoLens.FieldDescriptor FilterConfig
        isOptional__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "is_optional"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"isOptional")) ::
              Data.ProtoLens.FieldDescriptor FilterConfig
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, config__field_descriptor),
           (Data.ProtoLens.Tag 2, isOptional__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _FilterConfig'_unknownFields
        (\ x__ y__ -> x__ {_FilterConfig'_unknownFields = y__})
  defMessage
    = FilterConfig'_constructor
        {_FilterConfig'config = Prelude.Nothing,
         _FilterConfig'isOptional = Data.ProtoLens.fieldDefault,
         _FilterConfig'_unknownFields = []}
  parseMessage
    = let
        loop ::
          FilterConfig -> Data.ProtoLens.Encoding.Bytes.Parser FilterConfig
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "config"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"config") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "is_optional"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"isOptional") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "FilterConfig"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'config") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"isOptional") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt
                            (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData FilterConfig where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_FilterConfig'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_FilterConfig'config x__)
                (Control.DeepSeq.deepseq (_FilterConfig'isOptional x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' HeaderMatcher Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.invertMatch' @:: Lens' HeaderMatcher Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'headerMatchSpecifier' @:: Lens' HeaderMatcher (Prelude.Maybe HeaderMatcher'HeaderMatchSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'exactMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.exactMatch' @:: Lens' HeaderMatcher Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'safeRegexMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.safeRegexMatch' @:: Lens' HeaderMatcher Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'rangeMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Proto.Envoy.Type.V3.Range.Int64Range)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.rangeMatch' @:: Lens' HeaderMatcher Proto.Envoy.Type.V3.Range.Int64Range@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'presentMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Prelude.Bool)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.presentMatch' @:: Lens' HeaderMatcher Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'prefixMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.prefixMatch' @:: Lens' HeaderMatcher Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'suffixMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.suffixMatch' @:: Lens' HeaderMatcher Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'containsMatch' @:: Lens' HeaderMatcher (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.containsMatch' @:: Lens' HeaderMatcher Data.Text.Text@ -}
data HeaderMatcher
  = HeaderMatcher'_constructor {_HeaderMatcher'name :: !Data.Text.Text,
                                _HeaderMatcher'invertMatch :: !Prelude.Bool,
                                _HeaderMatcher'headerMatchSpecifier :: !(Prelude.Maybe HeaderMatcher'HeaderMatchSpecifier),
                                _HeaderMatcher'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show HeaderMatcher where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data HeaderMatcher'HeaderMatchSpecifier
  = HeaderMatcher'ExactMatch !Data.Text.Text |
    HeaderMatcher'SafeRegexMatch !Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher |
    HeaderMatcher'RangeMatch !Proto.Envoy.Type.V3.Range.Int64Range |
    HeaderMatcher'PresentMatch !Prelude.Bool |
    HeaderMatcher'PrefixMatch !Data.Text.Text |
    HeaderMatcher'SuffixMatch !Data.Text.Text |
    HeaderMatcher'ContainsMatch !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField HeaderMatcher "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'name (\ x__ y__ -> x__ {_HeaderMatcher'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField HeaderMatcher "invertMatch" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'invertMatch
           (\ x__ y__ -> x__ {_HeaderMatcher'invertMatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'headerMatchSpecifier" (Prelude.Maybe HeaderMatcher'HeaderMatchSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'exactMatch" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'ExactMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'ExactMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "exactMatch" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'ExactMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'ExactMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'safeRegexMatch" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'SafeRegexMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'SafeRegexMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "safeRegexMatch" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'SafeRegexMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'SafeRegexMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'rangeMatch" (Prelude.Maybe Proto.Envoy.Type.V3.Range.Int64Range) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'RangeMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'RangeMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "rangeMatch" Proto.Envoy.Type.V3.Range.Int64Range where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'RangeMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'RangeMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'presentMatch" (Prelude.Maybe Prelude.Bool) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'PresentMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'PresentMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "presentMatch" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'PresentMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'PresentMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'prefixMatch" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'PrefixMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'PrefixMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "prefixMatch" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'PrefixMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'PrefixMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'suffixMatch" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'SuffixMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'SuffixMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "suffixMatch" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'SuffixMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'SuffixMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField HeaderMatcher "maybe'containsMatch" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (HeaderMatcher'ContainsMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap HeaderMatcher'ContainsMatch y__))
instance Data.ProtoLens.Field.HasField HeaderMatcher "containsMatch" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HeaderMatcher'headerMatchSpecifier
           (\ x__ y__ -> x__ {_HeaderMatcher'headerMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (HeaderMatcher'ContainsMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap HeaderMatcher'ContainsMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message HeaderMatcher where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.HeaderMatcher"
  packedMessageDescriptor _
    = "\n\
      \\rHeaderMatcher\DC2!\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2!\n\
      \\vexact_match\CAN\EOT \SOH(\tH\NULR\n\
      \exactMatch\DC2O\n\
      \\DLEsafe_regex_match\CAN\v \SOH(\v2#.envoy.type.matcher.v3.RegexMatcherH\NULR\SOsafeRegexMatch\DC2<\n\
      \\vrange_match\CAN\ACK \SOH(\v2\EM.envoy.type.v3.Int64RangeH\NULR\n\
      \rangeMatch\DC2%\n\
      \\rpresent_match\CAN\a \SOH(\bH\NULR\fpresentMatch\DC2,\n\
      \\fprefix_match\CAN\t \SOH(\tH\NULR\vprefixMatchB\a\250B\EOTr\STX\DLE\SOH\DC2,\n\
      \\fsuffix_match\CAN\n\
      \ \SOH(\tH\NULR\vsuffixMatchB\a\250B\EOTr\STX\DLE\SOH\DC20\n\
      \\SOcontains_match\CAN\f \SOH(\tH\NULR\rcontainsMatchB\a\250B\EOTr\STX\DLE\SOH\DC2!\n\
      \\finvert_match\CAN\b \SOH(\bR\vinvertMatchB\CAN\n\
      \\SYNheader_match_specifier:'\154\197\136\RS\"\n\
      \ envoy.api.v2.route.HeaderMatcherJ\EOT\b\STX\DLE\ETXJ\EOT\b\ETX\DLE\EOTJ\EOT\b\ENQ\DLE\ACKR\vregex_match"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        invertMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "invert_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"invertMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        exactMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "exact_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'exactMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        safeRegexMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "safe_regex_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'safeRegexMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        rangeMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "range_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.V3.Range.Int64Range)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rangeMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        presentMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "present_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'presentMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        prefixMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "prefix_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'prefixMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        suffixMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "suffix_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'suffixMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
        containsMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "contains_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'containsMatch")) ::
              Data.ProtoLens.FieldDescriptor HeaderMatcher
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 8, invertMatch__field_descriptor),
           (Data.ProtoLens.Tag 4, exactMatch__field_descriptor),
           (Data.ProtoLens.Tag 11, safeRegexMatch__field_descriptor),
           (Data.ProtoLens.Tag 6, rangeMatch__field_descriptor),
           (Data.ProtoLens.Tag 7, presentMatch__field_descriptor),
           (Data.ProtoLens.Tag 9, prefixMatch__field_descriptor),
           (Data.ProtoLens.Tag 10, suffixMatch__field_descriptor),
           (Data.ProtoLens.Tag 12, containsMatch__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _HeaderMatcher'_unknownFields
        (\ x__ y__ -> x__ {_HeaderMatcher'_unknownFields = y__})
  defMessage
    = HeaderMatcher'_constructor
        {_HeaderMatcher'name = Data.ProtoLens.fieldDefault,
         _HeaderMatcher'invertMatch = Data.ProtoLens.fieldDefault,
         _HeaderMatcher'headerMatchSpecifier = Prelude.Nothing,
         _HeaderMatcher'_unknownFields = []}
  parseMessage
    = let
        loop ::
          HeaderMatcher -> Data.ProtoLens.Encoding.Bytes.Parser HeaderMatcher
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "invert_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"invertMatch") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "exact_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"exactMatch") y x)
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "safe_regex_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"safeRegexMatch") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "range_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"rangeMatch") y x)
                        56
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "present_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"presentMatch") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "prefix_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"prefixMatch") y x)
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "suffix_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"suffixMatch") y x)
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "contains_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"containsMatch") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "HeaderMatcher"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"invertMatch") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt
                            (\ b -> if b then 1 else 0)
                            _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'headerMatchSpecifier") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just (HeaderMatcher'ExactMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8
                                v)
                      (Prelude.Just (HeaderMatcher'SafeRegexMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                v)
                      (Prelude.Just (HeaderMatcher'RangeMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                v)
                      (Prelude.Just (HeaderMatcher'PresentMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 56)
                             ((Prelude..)
                                Data.ProtoLens.Encoding.Bytes.putVarInt
                                (\ b -> if b then 1 else 0)
                                v)
                      (Prelude.Just (HeaderMatcher'PrefixMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8
                                v)
                      (Prelude.Just (HeaderMatcher'SuffixMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8
                                v)
                      (Prelude.Just (HeaderMatcher'ContainsMatch v))
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.Text.Encoding.encodeUtf8
                                v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData HeaderMatcher where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_HeaderMatcher'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_HeaderMatcher'name x__)
                (Control.DeepSeq.deepseq
                   (_HeaderMatcher'invertMatch x__)
                   (Control.DeepSeq.deepseq
                      (_HeaderMatcher'headerMatchSpecifier x__) ())))
instance Control.DeepSeq.NFData HeaderMatcher'HeaderMatchSpecifier where
  rnf (HeaderMatcher'ExactMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'SafeRegexMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'RangeMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'PresentMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'PrefixMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'SuffixMatch x__) = Control.DeepSeq.rnf x__
  rnf (HeaderMatcher'ContainsMatch x__) = Control.DeepSeq.rnf x__
_HeaderMatcher'ExactMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Data.Text.Text
_HeaderMatcher'ExactMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'ExactMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'ExactMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'SafeRegexMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher
_HeaderMatcher'SafeRegexMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'SafeRegexMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'SafeRegexMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'RangeMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Proto.Envoy.Type.V3.Range.Int64Range
_HeaderMatcher'RangeMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'RangeMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'RangeMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'PresentMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Prelude.Bool
_HeaderMatcher'PresentMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'PresentMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'PresentMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'PrefixMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Data.Text.Text
_HeaderMatcher'PrefixMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'PrefixMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'PrefixMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'SuffixMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Data.Text.Text
_HeaderMatcher'SuffixMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'SuffixMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'SuffixMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_HeaderMatcher'ContainsMatch ::
  Data.ProtoLens.Prism.Prism' HeaderMatcher'HeaderMatchSpecifier Data.Text.Text
_HeaderMatcher'ContainsMatch
  = Data.ProtoLens.Prism.prism'
      HeaderMatcher'ContainsMatch
      (\ p__
         -> case p__ of
              (HeaderMatcher'ContainsMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.initialRequests' @:: Lens' HedgePolicy Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'initialRequests' @:: Lens' HedgePolicy (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.additionalRequestChance' @:: Lens' HedgePolicy Proto.Envoy.Type.V3.Percent.FractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'additionalRequestChance' @:: Lens' HedgePolicy (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hedgeOnPerTryTimeout' @:: Lens' HedgePolicy Prelude.Bool@ -}
data HedgePolicy
  = HedgePolicy'_constructor {_HedgePolicy'initialRequests :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                              _HedgePolicy'additionalRequestChance :: !(Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent),
                              _HedgePolicy'hedgeOnPerTryTimeout :: !Prelude.Bool,
                              _HedgePolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show HedgePolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField HedgePolicy "initialRequests" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HedgePolicy'initialRequests
           (\ x__ y__ -> x__ {_HedgePolicy'initialRequests = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField HedgePolicy "maybe'initialRequests" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HedgePolicy'initialRequests
           (\ x__ y__ -> x__ {_HedgePolicy'initialRequests = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField HedgePolicy "additionalRequestChance" Proto.Envoy.Type.V3.Percent.FractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HedgePolicy'additionalRequestChance
           (\ x__ y__ -> x__ {_HedgePolicy'additionalRequestChance = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField HedgePolicy "maybe'additionalRequestChance" (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HedgePolicy'additionalRequestChance
           (\ x__ y__ -> x__ {_HedgePolicy'additionalRequestChance = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField HedgePolicy "hedgeOnPerTryTimeout" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _HedgePolicy'hedgeOnPerTryTimeout
           (\ x__ y__ -> x__ {_HedgePolicy'hedgeOnPerTryTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Message HedgePolicy where
  messageName _ = Data.Text.pack "envoy.config.route.v3.HedgePolicy"
  packedMessageDescriptor _
    = "\n\
      \\vHedgePolicy\DC2P\n\
      \\DLEinitial_requests\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\SIinitialRequestsB\a\250B\EOT*\STX(\SOH\DC2\\\n\
      \\EMadditional_request_chance\CAN\STX \SOH(\v2 .envoy.type.v3.FractionalPercentR\ETBadditionalRequestChance\DC26\n\
      \\CANhedge_on_per_try_timeout\CAN\ETX \SOH(\bR\DC4hedgeOnPerTryTimeout:%\154\197\136\RS \n\
      \\RSenvoy.api.v2.route.HedgePolicy"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        initialRequests__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "initial_requests"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'initialRequests")) ::
              Data.ProtoLens.FieldDescriptor HedgePolicy
        additionalRequestChance__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "additional_request_chance"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.V3.Percent.FractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'additionalRequestChance")) ::
              Data.ProtoLens.FieldDescriptor HedgePolicy
        hedgeOnPerTryTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "hedge_on_per_try_timeout"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"hedgeOnPerTryTimeout")) ::
              Data.ProtoLens.FieldDescriptor HedgePolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, initialRequests__field_descriptor),
           (Data.ProtoLens.Tag 2, additionalRequestChance__field_descriptor),
           (Data.ProtoLens.Tag 3, hedgeOnPerTryTimeout__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _HedgePolicy'_unknownFields
        (\ x__ y__ -> x__ {_HedgePolicy'_unknownFields = y__})
  defMessage
    = HedgePolicy'_constructor
        {_HedgePolicy'initialRequests = Prelude.Nothing,
         _HedgePolicy'additionalRequestChance = Prelude.Nothing,
         _HedgePolicy'hedgeOnPerTryTimeout = Data.ProtoLens.fieldDefault,
         _HedgePolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          HedgePolicy -> Data.ProtoLens.Encoding.Bytes.Parser HedgePolicy
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "initial_requests"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"initialRequests") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "additional_request_chance"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"additionalRequestChance") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "hedge_on_per_try_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hedgeOnPerTryTimeout") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "HedgePolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'initialRequests") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'additionalRequestChance") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"hedgeOnPerTryTimeout") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt
                               (\ b -> if b then 1 else 0)
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData HedgePolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_HedgePolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_HedgePolicy'initialRequests x__)
                (Control.DeepSeq.deepseq
                   (_HedgePolicy'additionalRequestChance x__)
                   (Control.DeepSeq.deepseq
                      (_HedgePolicy'hedgeOnPerTryTimeout x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxInternalRedirects' @:: Lens' InternalRedirectPolicy Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxInternalRedirects' @:: Lens' InternalRedirectPolicy (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.redirectResponseCodes' @:: Lens' InternalRedirectPolicy [Data.Word.Word32]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'redirectResponseCodes' @:: Lens' InternalRedirectPolicy (Data.Vector.Unboxed.Vector Data.Word.Word32)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.predicates' @:: Lens' InternalRedirectPolicy [Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'predicates' @:: Lens' InternalRedirectPolicy (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowCrossSchemeRedirect' @:: Lens' InternalRedirectPolicy Prelude.Bool@ -}
data InternalRedirectPolicy
  = InternalRedirectPolicy'_constructor {_InternalRedirectPolicy'maxInternalRedirects :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                                         _InternalRedirectPolicy'redirectResponseCodes :: !(Data.Vector.Unboxed.Vector Data.Word.Word32),
                                         _InternalRedirectPolicy'predicates :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig),
                                         _InternalRedirectPolicy'allowCrossSchemeRedirect :: !Prelude.Bool,
                                         _InternalRedirectPolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show InternalRedirectPolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "maxInternalRedirects" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'maxInternalRedirects
           (\ x__ y__
              -> x__ {_InternalRedirectPolicy'maxInternalRedirects = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "maybe'maxInternalRedirects" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'maxInternalRedirects
           (\ x__ y__
              -> x__ {_InternalRedirectPolicy'maxInternalRedirects = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "redirectResponseCodes" [Data.Word.Word32] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'redirectResponseCodes
           (\ x__ y__
              -> x__ {_InternalRedirectPolicy'redirectResponseCodes = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "vec'redirectResponseCodes" (Data.Vector.Unboxed.Vector Data.Word.Word32) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'redirectResponseCodes
           (\ x__ y__
              -> x__ {_InternalRedirectPolicy'redirectResponseCodes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "predicates" [Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'predicates
           (\ x__ y__ -> x__ {_InternalRedirectPolicy'predicates = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "vec'predicates" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'predicates
           (\ x__ y__ -> x__ {_InternalRedirectPolicy'predicates = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField InternalRedirectPolicy "allowCrossSchemeRedirect" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _InternalRedirectPolicy'allowCrossSchemeRedirect
           (\ x__ y__
              -> x__ {_InternalRedirectPolicy'allowCrossSchemeRedirect = y__}))
        Prelude.id
instance Data.ProtoLens.Message InternalRedirectPolicy where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.InternalRedirectPolicy"
  packedMessageDescriptor _
    = "\n\
      \\SYNInternalRedirectPolicy\DC2R\n\
      \\SYNmax_internal_redirects\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\DC4maxInternalRedirects\DC2@\n\
      \\ETBredirect_response_codes\CAN\STX \ETX(\rR\NAKredirectResponseCodesB\b\250B\ENQ\146\SOH\STX\DLE\ENQ\DC2J\n\
      \\n\
      \predicates\CAN\ETX \ETX(\v2*.envoy.config.core.v3.TypedExtensionConfigR\n\
      \predicates\DC2=\n\
      \\ESCallow_cross_scheme_redirect\CAN\EOT \SOH(\bR\CANallowCrossSchemeRedirect"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        maxInternalRedirects__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_internal_redirects"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxInternalRedirects")) ::
              Data.ProtoLens.FieldDescriptor InternalRedirectPolicy
        redirectResponseCodes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "redirect_response_codes"
              (Data.ProtoLens.ScalarField Data.ProtoLens.UInt32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Word.Word32)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Packed
                 (Data.ProtoLens.Field.field @"redirectResponseCodes")) ::
              Data.ProtoLens.FieldDescriptor InternalRedirectPolicy
        predicates__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "predicates"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"predicates")) ::
              Data.ProtoLens.FieldDescriptor InternalRedirectPolicy
        allowCrossSchemeRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_cross_scheme_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"allowCrossSchemeRedirect")) ::
              Data.ProtoLens.FieldDescriptor InternalRedirectPolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, maxInternalRedirects__field_descriptor),
           (Data.ProtoLens.Tag 2, redirectResponseCodes__field_descriptor),
           (Data.ProtoLens.Tag 3, predicates__field_descriptor),
           (Data.ProtoLens.Tag 4, allowCrossSchemeRedirect__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _InternalRedirectPolicy'_unknownFields
        (\ x__ y__ -> x__ {_InternalRedirectPolicy'_unknownFields = y__})
  defMessage
    = InternalRedirectPolicy'_constructor
        {_InternalRedirectPolicy'maxInternalRedirects = Prelude.Nothing,
         _InternalRedirectPolicy'redirectResponseCodes = Data.Vector.Generic.empty,
         _InternalRedirectPolicy'predicates = Data.Vector.Generic.empty,
         _InternalRedirectPolicy'allowCrossSchemeRedirect = Data.ProtoLens.fieldDefault,
         _InternalRedirectPolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          InternalRedirectPolicy
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Unboxed.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Word.Word32
                -> Data.ProtoLens.Encoding.Bytes.Parser InternalRedirectPolicy
        loop x mutable'predicates mutable'redirectResponseCodes
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'predicates <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'predicates)
                      frozen'redirectResponseCodes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                           mutable'redirectResponseCodes)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'predicates")
                              frozen'predicates
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'redirectResponseCodes")
                                 frozen'redirectResponseCodes
                                 x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_internal_redirects"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxInternalRedirects") y x)
                                  mutable'predicates
                                  mutable'redirectResponseCodes
                        16
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (Prelude.fmap
                                           Prelude.fromIntegral
                                           Data.ProtoLens.Encoding.Bytes.getVarInt)
                                        "redirect_response_codes"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'redirectResponseCodes y)
                                loop x mutable'predicates v
                        18
                          -> do y <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                        Data.ProtoLens.Encoding.Bytes.isolate
                                          (Prelude.fromIntegral len)
                                          ((let
                                              ploop qs
                                                = do packedEnd <- Data.ProtoLens.Encoding.Bytes.atEnd
                                                     if packedEnd then
                                                         Prelude.return qs
                                                     else
                                                         do !q <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                    (Prelude.fmap
                                                                       Prelude.fromIntegral
                                                                       Data.ProtoLens.Encoding.Bytes.getVarInt)
                                                                    "redirect_response_codes"
                                                            qs' <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                                     (Data.ProtoLens.Encoding.Growing.append
                                                                        qs q)
                                                            ploop qs'
                                            in ploop)
                                             mutable'redirectResponseCodes)
                                loop x mutable'predicates y
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "predicates"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'predicates y)
                                loop x v mutable'redirectResponseCodes
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "allow_cross_scheme_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"allowCrossSchemeRedirect") y x)
                                  mutable'predicates
                                  mutable'redirectResponseCodes
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'predicates
                                  mutable'redirectResponseCodes
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'predicates <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              mutable'redirectResponseCodes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                 Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'predicates
                mutable'redirectResponseCodes)
          "InternalRedirectPolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'maxInternalRedirects") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (let
                   p = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"vec'redirectResponseCodes") _x
                 in
                   if Data.Vector.Generic.null p then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            (Data.ProtoLens.Encoding.Bytes.runBuilder
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                                  p))))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage
                                 _v))
                      (Lens.Family2.view
                         (Data.ProtoLens.Field.field @"vec'predicates") _x))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view
                               (Data.ProtoLens.Field.field @"allowCrossSchemeRedirect") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0)
                                  _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData InternalRedirectPolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_InternalRedirectPolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_InternalRedirectPolicy'maxInternalRedirects x__)
                (Control.DeepSeq.deepseq
                   (_InternalRedirectPolicy'redirectResponseCodes x__)
                   (Control.DeepSeq.deepseq
                      (_InternalRedirectPolicy'predicates x__)
                      (Control.DeepSeq.deepseq
                         (_InternalRedirectPolicy'allowCrossSchemeRedirect x__) ()))))
{- | Fields :
      -}
data NonForwardingAction
  = NonForwardingAction'_constructor {_NonForwardingAction'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show NonForwardingAction where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message NonForwardingAction where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.NonForwardingAction"
  packedMessageDescriptor _
    = "\n\
      \\DC3NonForwardingAction"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _NonForwardingAction'_unknownFields
        (\ x__ y__ -> x__ {_NonForwardingAction'_unknownFields = y__})
  defMessage
    = NonForwardingAction'_constructor
        {_NonForwardingAction'_unknownFields = []}
  parseMessage
    = let
        loop ::
          NonForwardingAction
          -> Data.ProtoLens.Encoding.Bytes.Parser NonForwardingAction
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "NonForwardingAction"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData NonForwardingAction where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_NonForwardingAction'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' QueryParameterMatcher Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'queryParameterMatchSpecifier' @:: Lens' QueryParameterMatcher (Prelude.Maybe QueryParameterMatcher'QueryParameterMatchSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'stringMatch' @:: Lens' QueryParameterMatcher (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.String.StringMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.stringMatch' @:: Lens' QueryParameterMatcher Proto.Envoy.Type.Matcher.V3.String.StringMatcher@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'presentMatch' @:: Lens' QueryParameterMatcher (Prelude.Maybe Prelude.Bool)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.presentMatch' @:: Lens' QueryParameterMatcher Prelude.Bool@ -}
data QueryParameterMatcher
  = QueryParameterMatcher'_constructor {_QueryParameterMatcher'name :: !Data.Text.Text,
                                        _QueryParameterMatcher'queryParameterMatchSpecifier :: !(Prelude.Maybe QueryParameterMatcher'QueryParameterMatchSpecifier),
                                        _QueryParameterMatcher'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show QueryParameterMatcher where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data QueryParameterMatcher'QueryParameterMatchSpecifier
  = QueryParameterMatcher'StringMatch !Proto.Envoy.Type.Matcher.V3.String.StringMatcher |
    QueryParameterMatcher'PresentMatch !Prelude.Bool
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'name
           (\ x__ y__ -> x__ {_QueryParameterMatcher'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "maybe'queryParameterMatchSpecifier" (Prelude.Maybe QueryParameterMatcher'QueryParameterMatchSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'queryParameterMatchSpecifier
           (\ x__ y__
              -> x__
                   {_QueryParameterMatcher'queryParameterMatchSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "maybe'stringMatch" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.String.StringMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'queryParameterMatchSpecifier
           (\ x__ y__
              -> x__
                   {_QueryParameterMatcher'queryParameterMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (QueryParameterMatcher'StringMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap QueryParameterMatcher'StringMatch y__))
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "stringMatch" Proto.Envoy.Type.Matcher.V3.String.StringMatcher where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'queryParameterMatchSpecifier
           (\ x__ y__
              -> x__
                   {_QueryParameterMatcher'queryParameterMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (QueryParameterMatcher'StringMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap QueryParameterMatcher'StringMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "maybe'presentMatch" (Prelude.Maybe Prelude.Bool) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'queryParameterMatchSpecifier
           (\ x__ y__
              -> x__
                   {_QueryParameterMatcher'queryParameterMatchSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (QueryParameterMatcher'PresentMatch x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap QueryParameterMatcher'PresentMatch y__))
instance Data.ProtoLens.Field.HasField QueryParameterMatcher "presentMatch" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _QueryParameterMatcher'queryParameterMatchSpecifier
           (\ x__ y__
              -> x__
                   {_QueryParameterMatcher'queryParameterMatchSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (QueryParameterMatcher'PresentMatch x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap QueryParameterMatcher'PresentMatch y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message QueryParameterMatcher where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.QueryParameterMatcher"
  packedMessageDescriptor _
    = "\n\
      \\NAKQueryParameterMatcher\DC2\RS\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\n\
      \\250B\ar\ENQ\DLE\SOH(\128\b\DC2S\n\
      \\fstring_match\CAN\ENQ \SOH(\v2$.envoy.type.matcher.v3.StringMatcherH\NULR\vstringMatchB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2%\n\
      \\rpresent_match\CAN\ACK \SOH(\bH\NULR\fpresentMatchB!\n\
      \\USquery_parameter_match_specifier:/\154\197\136\RS*\n\
      \(envoy.api.v2.route.QueryParameterMatcherJ\EOT\b\ETX\DLE\EOTJ\EOT\b\EOT\DLE\ENQR\ENQvalueR\ENQregex"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor QueryParameterMatcher
        stringMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "string_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.String.StringMatcher)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'stringMatch")) ::
              Data.ProtoLens.FieldDescriptor QueryParameterMatcher
        presentMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "present_match"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'presentMatch")) ::
              Data.ProtoLens.FieldDescriptor QueryParameterMatcher
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 5, stringMatch__field_descriptor),
           (Data.ProtoLens.Tag 6, presentMatch__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _QueryParameterMatcher'_unknownFields
        (\ x__ y__ -> x__ {_QueryParameterMatcher'_unknownFields = y__})
  defMessage
    = QueryParameterMatcher'_constructor
        {_QueryParameterMatcher'name = Data.ProtoLens.fieldDefault,
         _QueryParameterMatcher'queryParameterMatchSpecifier = Prelude.Nothing,
         _QueryParameterMatcher'_unknownFields = []}
  parseMessage
    = let
        loop ::
          QueryParameterMatcher
          -> Data.ProtoLens.Encoding.Bytes.Parser QueryParameterMatcher
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "string_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"stringMatch") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "present_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"presentMatch") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueryParameterMatcher"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'queryParameterMatchSpecifier")
                       _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just (QueryParameterMatcher'StringMatch v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v)
                   (Prelude.Just (QueryParameterMatcher'PresentMatch v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                          ((Prelude..)
                             Data.ProtoLens.Encoding.Bytes.putVarInt
                             (\ b -> if b then 1 else 0)
                             v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData QueryParameterMatcher where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_QueryParameterMatcher'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_QueryParameterMatcher'name x__)
                (Control.DeepSeq.deepseq
                   (_QueryParameterMatcher'queryParameterMatchSpecifier x__) ()))
instance Control.DeepSeq.NFData QueryParameterMatcher'QueryParameterMatchSpecifier where
  rnf (QueryParameterMatcher'StringMatch x__)
    = Control.DeepSeq.rnf x__
  rnf (QueryParameterMatcher'PresentMatch x__)
    = Control.DeepSeq.rnf x__
_QueryParameterMatcher'StringMatch ::
  Data.ProtoLens.Prism.Prism' QueryParameterMatcher'QueryParameterMatchSpecifier Proto.Envoy.Type.Matcher.V3.String.StringMatcher
_QueryParameterMatcher'StringMatch
  = Data.ProtoLens.Prism.prism'
      QueryParameterMatcher'StringMatch
      (\ p__
         -> case p__ of
              (QueryParameterMatcher'StringMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_QueryParameterMatcher'PresentMatch ::
  Data.ProtoLens.Prism.Prism' QueryParameterMatcher'QueryParameterMatchSpecifier Prelude.Bool
_QueryParameterMatcher'PresentMatch
  = Data.ProtoLens.Prism.prism'
      QueryParameterMatcher'PresentMatch
      (\ p__
         -> case p__ of
              (QueryParameterMatcher'PresentMatch p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.stage' @:: Lens' RateLimit Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'stage' @:: Lens' RateLimit (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.disableKey' @:: Lens' RateLimit Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.actions' @:: Lens' RateLimit [RateLimit'Action]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'actions' @:: Lens' RateLimit (Data.Vector.Vector RateLimit'Action)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.limit' @:: Lens' RateLimit RateLimit'Override@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'limit' @:: Lens' RateLimit (Prelude.Maybe RateLimit'Override)@ -}
data RateLimit
  = RateLimit'_constructor {_RateLimit'stage :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                            _RateLimit'disableKey :: !Data.Text.Text,
                            _RateLimit'actions :: !(Data.Vector.Vector RateLimit'Action),
                            _RateLimit'limit :: !(Prelude.Maybe RateLimit'Override),
                            _RateLimit'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit "stage" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'stage (\ x__ y__ -> x__ {_RateLimit'stage = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit "maybe'stage" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'stage (\ x__ y__ -> x__ {_RateLimit'stage = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit "disableKey" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'disableKey
           (\ x__ y__ -> x__ {_RateLimit'disableKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit "actions" [RateLimit'Action] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'actions (\ x__ y__ -> x__ {_RateLimit'actions = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RateLimit "vec'actions" (Data.Vector.Vector RateLimit'Action) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'actions (\ x__ y__ -> x__ {_RateLimit'actions = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit "limit" RateLimit'Override where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'limit (\ x__ y__ -> x__ {_RateLimit'limit = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit "maybe'limit" (Prelude.Maybe RateLimit'Override) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'limit (\ x__ y__ -> x__ {_RateLimit'limit = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit where
  messageName _ = Data.Text.pack "envoy.config.route.v3.RateLimit"
  packedMessageDescriptor _
    = "\n\
      \\tRateLimit\DC2;\n\
      \\ENQstage\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\ENQstageB\a\250B\EOT*\STX\CAN\n\
      \\DC2\US\n\
      \\vdisable_key\CAN\STX \SOH(\tR\n\
      \disableKey\DC2K\n\
      \\aactions\CAN\ETX \ETX(\v2'.envoy.config.route.v3.RateLimit.ActionR\aactionsB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2?\n\
      \\ENQlimit\CAN\EOT \SOH(\v2).envoy.config.route.v3.RateLimit.OverrideR\ENQlimit\SUB\150\DC2\n\
      \\ACKAction\DC2^\n\
      \\SOsource_cluster\CAN\SOH \SOH(\v25.envoy.config.route.v3.RateLimit.Action.SourceClusterH\NULR\rsourceCluster\DC2m\n\
      \\DC3destination_cluster\CAN\STX \SOH(\v2:.envoy.config.route.v3.RateLimit.Action.DestinationClusterH\NULR\DC2destinationCluster\DC2a\n\
      \\SIrequest_headers\CAN\ETX \SOH(\v26.envoy.config.route.v3.RateLimit.Action.RequestHeadersH\NULR\SOrequestHeaders\DC2^\n\
      \\SOremote_address\CAN\EOT \SOH(\v25.envoy.config.route.v3.RateLimit.Action.RemoteAddressH\NULR\rremoteAddress\DC2U\n\
      \\vgeneric_key\CAN\ENQ \SOH(\v22.envoy.config.route.v3.RateLimit.Action.GenericKeyH\NULR\n\
      \genericKey\DC2h\n\
      \\DC2header_value_match\CAN\ACK \SOH(\v28.envoy.config.route.v3.RateLimit.Action.HeaderValueMatchH\NULR\DLEheaderValueMatch\DC2w\n\
      \\DLEdynamic_metadata\CAN\a \SOH(\v27.envoy.config.route.v3.RateLimit.Action.DynamicMetaDataH\NULR\SIdynamicMetadataB\DC1\CAN\SOH\146\199\134\216\EOT\ETX3.0\184\238\242\210\ENQ\SOH\DC2N\n\
      \\bmetadata\CAN\b \SOH(\v20.envoy.config.route.v3.RateLimit.Action.MetaDataH\NULR\bmetadata\DC2J\n\
      \\textension\CAN\t \SOH(\v2*.envoy.config.core.v3.TypedExtensionConfigH\NULR\textension\SUBI\n\
      \\rSourceCluster:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.SourceCluster\SUBS\n\
      \\DC2DestinationCluster:=\154\197\136\RS8\n\
      \6envoy.api.v2.route.RateLimit.Action.DestinationCluster\SUB\209\SOH\n\
      \\SORequestHeaders\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2.\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2$\n\
      \\SOskip_if_absent\CAN\ETX \SOH(\bR\fskipIfAbsent:9\154\197\136\RS4\n\
      \2envoy.api.v2.route.RateLimit.Action.RequestHeaders\SUBI\n\
      \\rRemoteAddress:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.RemoteAddress\SUB\158\SOH\n\
      \\n\
      \GenericKey\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2%\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKey:5\154\197\136\RS0\n\
      \.envoy.api.v2.route.RateLimit.Action.GenericKey\SUB\140\STX\n\
      \\DLEHeaderValueMatch\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2=\n\
      \\fexpect_match\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\vexpectMatch\DC2H\n\
      \\aheaders\CAN\ETX \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheadersB\b\250B\ENQ\146\SOH\STX\b\SOH:;\154\197\136\RS6\n\
      \4envoy.api.v2.route.RateLimit.Action.HeaderValueMatch\SUB\184\SOH\n\
      \\SIDynamicMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\SUB\180\STX\n\
      \\bMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\DC2Y\n\
      \\ACKsource\CAN\EOT \SOH(\SO27.envoy.config.route.v3.RateLimit.Action.MetaData.SourceR\ACKsourceB\b\250B\ENQ\130\SOH\STX\DLE\SOH\"&\n\
      \\ACKSource\DC2\v\n\
      \\aDYNAMIC\DLE\NUL\DC2\SI\n\
      \\vROUTE_ENTRY\DLE\SOHB\ETB\n\
      \\DLEaction_specifier\DC2\ETX\248B\SOH:*\154\197\136\RS%\n\
      \#envoy.api.v2.route.RateLimit.Action\SUB\242\SOH\n\
      \\bOverride\DC2f\n\
      \\DLEdynamic_metadata\CAN\SOH \SOH(\v29.envoy.config.route.v3.RateLimit.Override.DynamicMetadataH\NULR\SIdynamicMetadata\SUBc\n\
      \\SIDynamicMetadata\DC2P\n\
      \\fmetadata_key\CAN\SOH \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOHB\EM\n\
      \\DC2override_specifier\DC2\ETX\248B\SOH:#\154\197\136\RS\RS\n\
      \\FSenvoy.api.v2.route.RateLimit"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        stage__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "stage"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'stage")) ::
              Data.ProtoLens.FieldDescriptor RateLimit
        disableKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "disable_key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"disableKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit
        actions__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "actions"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"actions")) ::
              Data.ProtoLens.FieldDescriptor RateLimit
        limit__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "limit"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Override)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'limit")) ::
              Data.ProtoLens.FieldDescriptor RateLimit
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, stage__field_descriptor),
           (Data.ProtoLens.Tag 2, disableKey__field_descriptor),
           (Data.ProtoLens.Tag 3, actions__field_descriptor),
           (Data.ProtoLens.Tag 4, limit__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'_unknownFields
        (\ x__ y__ -> x__ {_RateLimit'_unknownFields = y__})
  defMessage
    = RateLimit'_constructor
        {_RateLimit'stage = Prelude.Nothing,
         _RateLimit'disableKey = Data.ProtoLens.fieldDefault,
         _RateLimit'actions = Data.Vector.Generic.empty,
         _RateLimit'limit = Prelude.Nothing, _RateLimit'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RateLimit'Action
             -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit
        loop x mutable'actions
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'actions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'actions)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'actions") frozen'actions x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "stage"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"stage") y x)
                                  mutable'actions
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "disable_key"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"disableKey") y x)
                                  mutable'actions
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "actions"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'actions y)
                                loop x v
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "limit"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"limit") y x)
                                  mutable'actions
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'actions
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'actions <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'actions)
          "RateLimit"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'stage") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"disableKey") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8
                            _v))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage
                                 _v))
                      (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'actions") _x))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'limit") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage
                                   _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData RateLimit where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'stage x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'disableKey x__)
                   (Control.DeepSeq.deepseq
                      (_RateLimit'actions x__)
                      (Control.DeepSeq.deepseq (_RateLimit'limit x__) ()))))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'actionSpecifier' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'ActionSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'sourceCluster' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'SourceCluster)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.sourceCluster' @:: Lens' RateLimit'Action RateLimit'Action'SourceCluster@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'destinationCluster' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'DestinationCluster)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.destinationCluster' @:: Lens' RateLimit'Action RateLimit'Action'DestinationCluster@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'requestHeaders' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'RequestHeaders)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeaders' @:: Lens' RateLimit'Action RateLimit'Action'RequestHeaders@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'remoteAddress' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'RemoteAddress)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.remoteAddress' @:: Lens' RateLimit'Action RateLimit'Action'RemoteAddress@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'genericKey' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'GenericKey)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.genericKey' @:: Lens' RateLimit'Action RateLimit'Action'GenericKey@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'headerValueMatch' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'HeaderValueMatch)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headerValueMatch' @:: Lens' RateLimit'Action RateLimit'Action'HeaderValueMatch@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'dynamicMetadata' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'DynamicMetaData)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.dynamicMetadata' @:: Lens' RateLimit'Action RateLimit'Action'DynamicMetaData@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadata' @:: Lens' RateLimit'Action (Prelude.Maybe RateLimit'Action'MetaData)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadata' @:: Lens' RateLimit'Action RateLimit'Action'MetaData@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'extension' @:: Lens' RateLimit'Action (Prelude.Maybe Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.extension' @:: Lens' RateLimit'Action Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig@ -}
data RateLimit'Action
  = RateLimit'Action'_constructor {_RateLimit'Action'actionSpecifier :: !(Prelude.Maybe RateLimit'Action'ActionSpecifier),
                                   _RateLimit'Action'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RateLimit'Action'ActionSpecifier
  = RateLimit'Action'SourceCluster' !RateLimit'Action'SourceCluster |
    RateLimit'Action'DestinationCluster' !RateLimit'Action'DestinationCluster |
    RateLimit'Action'RequestHeaders' !RateLimit'Action'RequestHeaders |
    RateLimit'Action'RemoteAddress' !RateLimit'Action'RemoteAddress |
    RateLimit'Action'GenericKey' !RateLimit'Action'GenericKey |
    RateLimit'Action'HeaderValueMatch' !RateLimit'Action'HeaderValueMatch |
    RateLimit'Action'DynamicMetadata !RateLimit'Action'DynamicMetaData |
    RateLimit'Action'Metadata !RateLimit'Action'MetaData |
    RateLimit'Action'Extension !Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'actionSpecifier" (Prelude.Maybe RateLimit'Action'ActionSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'sourceCluster" (Prelude.Maybe RateLimit'Action'SourceCluster) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'SourceCluster' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'SourceCluster' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "sourceCluster" RateLimit'Action'SourceCluster where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'SourceCluster' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'SourceCluster' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'destinationCluster" (Prelude.Maybe RateLimit'Action'DestinationCluster) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'DestinationCluster' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'DestinationCluster' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "destinationCluster" RateLimit'Action'DestinationCluster where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'DestinationCluster' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'DestinationCluster' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'requestHeaders" (Prelude.Maybe RateLimit'Action'RequestHeaders) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'RequestHeaders' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'RequestHeaders' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "requestHeaders" RateLimit'Action'RequestHeaders where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'RequestHeaders' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'RequestHeaders' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'remoteAddress" (Prelude.Maybe RateLimit'Action'RemoteAddress) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'RemoteAddress' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'RemoteAddress' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "remoteAddress" RateLimit'Action'RemoteAddress where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'RemoteAddress' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'RemoteAddress' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'genericKey" (Prelude.Maybe RateLimit'Action'GenericKey) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'GenericKey' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'GenericKey' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "genericKey" RateLimit'Action'GenericKey where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'GenericKey' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'GenericKey' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'headerValueMatch" (Prelude.Maybe RateLimit'Action'HeaderValueMatch) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'HeaderValueMatch' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'HeaderValueMatch' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "headerValueMatch" RateLimit'Action'HeaderValueMatch where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'HeaderValueMatch' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'HeaderValueMatch' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'dynamicMetadata" (Prelude.Maybe RateLimit'Action'DynamicMetaData) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'DynamicMetadata x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'DynamicMetadata y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "dynamicMetadata" RateLimit'Action'DynamicMetaData where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'DynamicMetadata x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'DynamicMetadata y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'metadata" (Prelude.Maybe RateLimit'Action'MetaData) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'Metadata x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'Metadata y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "metadata" RateLimit'Action'MetaData where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'Metadata x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'Metadata y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RateLimit'Action "maybe'extension" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Action'Extension x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Action'Extension y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action "extension" Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'actionSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Action'actionSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Action'Extension x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Action'Extension y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RateLimit'Action where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RateLimit.Action"
  packedMessageDescriptor _
    = "\n\
      \\ACKAction\DC2^\n\
      \\SOsource_cluster\CAN\SOH \SOH(\v25.envoy.config.route.v3.RateLimit.Action.SourceClusterH\NULR\rsourceCluster\DC2m\n\
      \\DC3destination_cluster\CAN\STX \SOH(\v2:.envoy.config.route.v3.RateLimit.Action.DestinationClusterH\NULR\DC2destinationCluster\DC2a\n\
      \\SIrequest_headers\CAN\ETX \SOH(\v26.envoy.config.route.v3.RateLimit.Action.RequestHeadersH\NULR\SOrequestHeaders\DC2^\n\
      \\SOremote_address\CAN\EOT \SOH(\v25.envoy.config.route.v3.RateLimit.Action.RemoteAddressH\NULR\rremoteAddress\DC2U\n\
      \\vgeneric_key\CAN\ENQ \SOH(\v22.envoy.config.route.v3.RateLimit.Action.GenericKeyH\NULR\n\
      \genericKey\DC2h\n\
      \\DC2header_value_match\CAN\ACK \SOH(\v28.envoy.config.route.v3.RateLimit.Action.HeaderValueMatchH\NULR\DLEheaderValueMatch\DC2w\n\
      \\DLEdynamic_metadata\CAN\a \SOH(\v27.envoy.config.route.v3.RateLimit.Action.DynamicMetaDataH\NULR\SIdynamicMetadataB\DC1\CAN\SOH\146\199\134\216\EOT\ETX3.0\184\238\242\210\ENQ\SOH\DC2N\n\
      \\bmetadata\CAN\b \SOH(\v20.envoy.config.route.v3.RateLimit.Action.MetaDataH\NULR\bmetadata\DC2J\n\
      \\textension\CAN\t \SOH(\v2*.envoy.config.core.v3.TypedExtensionConfigH\NULR\textension\SUBI\n\
      \\rSourceCluster:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.SourceCluster\SUBS\n\
      \\DC2DestinationCluster:=\154\197\136\RS8\n\
      \6envoy.api.v2.route.RateLimit.Action.DestinationCluster\SUB\209\SOH\n\
      \\SORequestHeaders\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2.\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2$\n\
      \\SOskip_if_absent\CAN\ETX \SOH(\bR\fskipIfAbsent:9\154\197\136\RS4\n\
      \2envoy.api.v2.route.RateLimit.Action.RequestHeaders\SUBI\n\
      \\rRemoteAddress:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.RemoteAddress\SUB\158\SOH\n\
      \\n\
      \GenericKey\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2%\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKey:5\154\197\136\RS0\n\
      \.envoy.api.v2.route.RateLimit.Action.GenericKey\SUB\140\STX\n\
      \\DLEHeaderValueMatch\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2=\n\
      \\fexpect_match\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\vexpectMatch\DC2H\n\
      \\aheaders\CAN\ETX \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheadersB\b\250B\ENQ\146\SOH\STX\b\SOH:;\154\197\136\RS6\n\
      \4envoy.api.v2.route.RateLimit.Action.HeaderValueMatch\SUB\184\SOH\n\
      \\SIDynamicMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\SUB\180\STX\n\
      \\bMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\DC2Y\n\
      \\ACKsource\CAN\EOT \SOH(\SO27.envoy.config.route.v3.RateLimit.Action.MetaData.SourceR\ACKsourceB\b\250B\ENQ\130\SOH\STX\DLE\SOH\"&\n\
      \\ACKSource\DC2\v\n\
      \\aDYNAMIC\DLE\NUL\DC2\SI\n\
      \\vROUTE_ENTRY\DLE\SOHB\ETB\n\
      \\DLEaction_specifier\DC2\ETX\248B\SOH:*\154\197\136\RS%\n\
      \#envoy.api.v2.route.RateLimit.Action"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        sourceCluster__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "source_cluster"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'SourceCluster)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'sourceCluster")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        destinationCluster__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "destination_cluster"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'DestinationCluster)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'destinationCluster")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        requestHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'RequestHeaders)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'requestHeaders")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        remoteAddress__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "remote_address"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'RemoteAddress)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'remoteAddress")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        genericKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "generic_key"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'GenericKey)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'genericKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        headerValueMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header_value_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'HeaderValueMatch)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'headerValueMatch")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        dynamicMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "dynamic_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'DynamicMetaData)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'dynamicMetadata")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        metadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'MetaData)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadata")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
        extension__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "extension"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'extension")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, sourceCluster__field_descriptor),
           (Data.ProtoLens.Tag 2, destinationCluster__field_descriptor),
           (Data.ProtoLens.Tag 3, requestHeaders__field_descriptor),
           (Data.ProtoLens.Tag 4, remoteAddress__field_descriptor),
           (Data.ProtoLens.Tag 5, genericKey__field_descriptor),
           (Data.ProtoLens.Tag 6, headerValueMatch__field_descriptor),
           (Data.ProtoLens.Tag 7, dynamicMetadata__field_descriptor),
           (Data.ProtoLens.Tag 8, metadata__field_descriptor),
           (Data.ProtoLens.Tag 9, extension__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'_unknownFields
        (\ x__ y__ -> x__ {_RateLimit'Action'_unknownFields = y__})
  defMessage
    = RateLimit'Action'_constructor
        {_RateLimit'Action'actionSpecifier = Prelude.Nothing,
         _RateLimit'Action'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "source_cluster"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"sourceCluster") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "destination_cluster"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"destinationCluster") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "request_headers"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"requestHeaders") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "remote_address"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"remoteAddress") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "generic_key"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"genericKey") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header_value_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"headerValueMatch") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "dynamic_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"dynamicMetadata") y x)
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadata") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "extension"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"extension") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Action"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'actionSpecifier") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just (RateLimit'Action'SourceCluster' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'DestinationCluster' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'RequestHeaders' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'RemoteAddress' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'GenericKey' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'HeaderValueMatch' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'DynamicMetadata v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'Metadata v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v)
                (Prelude.Just (RateLimit'Action'Extension v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RateLimit'Action where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'actionSpecifier x__) ())
instance Control.DeepSeq.NFData RateLimit'Action'ActionSpecifier where
  rnf (RateLimit'Action'SourceCluster' x__) = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'DestinationCluster' x__)
    = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'RequestHeaders' x__)
    = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'RemoteAddress' x__) = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'GenericKey' x__) = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'HeaderValueMatch' x__)
    = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'DynamicMetadata x__)
    = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'Metadata x__) = Control.DeepSeq.rnf x__
  rnf (RateLimit'Action'Extension x__) = Control.DeepSeq.rnf x__
_RateLimit'Action'SourceCluster' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'SourceCluster
_RateLimit'Action'SourceCluster'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'SourceCluster'
      (\ p__
         -> case p__ of
              (RateLimit'Action'SourceCluster' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'DestinationCluster' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'DestinationCluster
_RateLimit'Action'DestinationCluster'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'DestinationCluster'
      (\ p__
         -> case p__ of
              (RateLimit'Action'DestinationCluster' p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'RequestHeaders' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'RequestHeaders
_RateLimit'Action'RequestHeaders'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'RequestHeaders'
      (\ p__
         -> case p__ of
              (RateLimit'Action'RequestHeaders' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'RemoteAddress' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'RemoteAddress
_RateLimit'Action'RemoteAddress'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'RemoteAddress'
      (\ p__
         -> case p__ of
              (RateLimit'Action'RemoteAddress' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'GenericKey' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'GenericKey
_RateLimit'Action'GenericKey'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'GenericKey'
      (\ p__
         -> case p__ of
              (RateLimit'Action'GenericKey' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'HeaderValueMatch' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'HeaderValueMatch
_RateLimit'Action'HeaderValueMatch'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'HeaderValueMatch'
      (\ p__
         -> case p__ of
              (RateLimit'Action'HeaderValueMatch' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'DynamicMetadata ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'DynamicMetaData
_RateLimit'Action'DynamicMetadata
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'DynamicMetadata
      (\ p__
         -> case p__ of
              (RateLimit'Action'DynamicMetadata p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'Metadata ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier RateLimit'Action'MetaData
_RateLimit'Action'Metadata
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'Metadata
      (\ p__
         -> case p__ of
              (RateLimit'Action'Metadata p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RateLimit'Action'Extension ::
  Data.ProtoLens.Prism.Prism' RateLimit'Action'ActionSpecifier Proto.Envoy.Config.Core.V3.Extension.TypedExtensionConfig
_RateLimit'Action'Extension
  = Data.ProtoLens.Prism.prism'
      RateLimit'Action'Extension
      (\ p__
         -> case p__ of
              (RateLimit'Action'Extension p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data RateLimit'Action'DestinationCluster
  = RateLimit'Action'DestinationCluster'_constructor {_RateLimit'Action'DestinationCluster'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'DestinationCluster where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RateLimit'Action'DestinationCluster where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.DestinationCluster"
  packedMessageDescriptor _
    = "\n\
      \\DC2DestinationCluster:=\154\197\136\RS8\n\
      \6envoy.api.v2.route.RateLimit.Action.DestinationCluster"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'DestinationCluster'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'DestinationCluster'_unknownFields = y__})
  defMessage
    = RateLimit'Action'DestinationCluster'_constructor
        {_RateLimit'Action'DestinationCluster'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'DestinationCluster
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'DestinationCluster
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DestinationCluster"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RateLimit'Action'DestinationCluster where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'DestinationCluster'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorKey' @:: Lens' RateLimit'Action'DynamicMetaData Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadataKey' @:: Lens' RateLimit'Action'DynamicMetaData Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadataKey' @:: Lens' RateLimit'Action'DynamicMetaData (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.defaultValue' @:: Lens' RateLimit'Action'DynamicMetaData Data.Text.Text@ -}
data RateLimit'Action'DynamicMetaData
  = RateLimit'Action'DynamicMetaData'_constructor {_RateLimit'Action'DynamicMetaData'descriptorKey :: !Data.Text.Text,
                                                   _RateLimit'Action'DynamicMetaData'metadataKey :: !(Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey),
                                                   _RateLimit'Action'DynamicMetaData'defaultValue :: !Data.Text.Text,
                                                   _RateLimit'Action'DynamicMetaData'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'DynamicMetaData where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Action'DynamicMetaData "descriptorKey" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'DynamicMetaData'descriptorKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'DynamicMetaData'descriptorKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'DynamicMetaData "metadataKey" Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'DynamicMetaData'metadataKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'DynamicMetaData'metadataKey = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit'Action'DynamicMetaData "maybe'metadataKey" (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'DynamicMetaData'metadataKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'DynamicMetaData'metadataKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'DynamicMetaData "defaultValue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'DynamicMetaData'defaultValue
           (\ x__ y__
              -> x__ {_RateLimit'Action'DynamicMetaData'defaultValue = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Action'DynamicMetaData where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.DynamicMetaData"
  packedMessageDescriptor _
    = "\n\
      \\SIDynamicMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        descriptorKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'DynamicMetaData
        metadataKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata_key"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadataKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'DynamicMetaData
        defaultValue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "default_value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"defaultValue")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'DynamicMetaData
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, descriptorKey__field_descriptor),
           (Data.ProtoLens.Tag 2, metadataKey__field_descriptor),
           (Data.ProtoLens.Tag 3, defaultValue__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'DynamicMetaData'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'DynamicMetaData'_unknownFields = y__})
  defMessage
    = RateLimit'Action'DynamicMetaData'_constructor
        {_RateLimit'Action'DynamicMetaData'descriptorKey = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'DynamicMetaData'metadataKey = Prelude.Nothing,
         _RateLimit'Action'DynamicMetaData'defaultValue = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'DynamicMetaData'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'DynamicMetaData
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'DynamicMetaData
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_key"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorKey") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata_key"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadataKey") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "default_value"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"defaultValue") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DynamicMetaData"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"descriptorKey") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'metadataKey") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"defaultValue") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RateLimit'Action'DynamicMetaData where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'DynamicMetaData'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'DynamicMetaData'descriptorKey x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'Action'DynamicMetaData'metadataKey x__)
                   (Control.DeepSeq.deepseq
                      (_RateLimit'Action'DynamicMetaData'defaultValue x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorValue' @:: Lens' RateLimit'Action'GenericKey Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorKey' @:: Lens' RateLimit'Action'GenericKey Data.Text.Text@ -}
data RateLimit'Action'GenericKey
  = RateLimit'Action'GenericKey'_constructor {_RateLimit'Action'GenericKey'descriptorValue :: !Data.Text.Text,
                                              _RateLimit'Action'GenericKey'descriptorKey :: !Data.Text.Text,
                                              _RateLimit'Action'GenericKey'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'GenericKey where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Action'GenericKey "descriptorValue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'GenericKey'descriptorValue
           (\ x__ y__
              -> x__ {_RateLimit'Action'GenericKey'descriptorValue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'GenericKey "descriptorKey" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'GenericKey'descriptorKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'GenericKey'descriptorKey = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Action'GenericKey where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.GenericKey"
  packedMessageDescriptor _
    = "\n\
      \\n\
      \GenericKey\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2%\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKey:5\154\197\136\RS0\n\
      \.envoy.api.v2.route.RateLimit.Action.GenericKey"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        descriptorValue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorValue")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'GenericKey
        descriptorKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'GenericKey
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, descriptorValue__field_descriptor),
           (Data.ProtoLens.Tag 2, descriptorKey__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'GenericKey'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'GenericKey'_unknownFields = y__})
  defMessage
    = RateLimit'Action'GenericKey'_constructor
        {_RateLimit'Action'GenericKey'descriptorValue = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'GenericKey'descriptorKey = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'GenericKey'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'GenericKey
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'GenericKey
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_value"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorValue") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_key"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorKey") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GenericKey"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"descriptorValue") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"descriptorKey") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RateLimit'Action'GenericKey where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'GenericKey'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'GenericKey'descriptorValue x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'Action'GenericKey'descriptorKey x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorValue' @:: Lens' RateLimit'Action'HeaderValueMatch Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.expectMatch' @:: Lens' RateLimit'Action'HeaderValueMatch Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'expectMatch' @:: Lens' RateLimit'Action'HeaderValueMatch (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headers' @:: Lens' RateLimit'Action'HeaderValueMatch [HeaderMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'headers' @:: Lens' RateLimit'Action'HeaderValueMatch (Data.Vector.Vector HeaderMatcher)@ -}
data RateLimit'Action'HeaderValueMatch
  = RateLimit'Action'HeaderValueMatch'_constructor {_RateLimit'Action'HeaderValueMatch'descriptorValue :: !Data.Text.Text,
                                                    _RateLimit'Action'HeaderValueMatch'expectMatch :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                                                    _RateLimit'Action'HeaderValueMatch'headers :: !(Data.Vector.Vector HeaderMatcher),
                                                    _RateLimit'Action'HeaderValueMatch'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'HeaderValueMatch where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Action'HeaderValueMatch "descriptorValue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'HeaderValueMatch'descriptorValue
           (\ x__ y__
              -> x__ {_RateLimit'Action'HeaderValueMatch'descriptorValue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'HeaderValueMatch "expectMatch" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'HeaderValueMatch'expectMatch
           (\ x__ y__
              -> x__ {_RateLimit'Action'HeaderValueMatch'expectMatch = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit'Action'HeaderValueMatch "maybe'expectMatch" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'HeaderValueMatch'expectMatch
           (\ x__ y__
              -> x__ {_RateLimit'Action'HeaderValueMatch'expectMatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'HeaderValueMatch "headers" [HeaderMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'HeaderValueMatch'headers
           (\ x__ y__
              -> x__ {_RateLimit'Action'HeaderValueMatch'headers = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RateLimit'Action'HeaderValueMatch "vec'headers" (Data.Vector.Vector HeaderMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'HeaderValueMatch'headers
           (\ x__ y__
              -> x__ {_RateLimit'Action'HeaderValueMatch'headers = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Action'HeaderValueMatch where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.HeaderValueMatch"
  packedMessageDescriptor _
    = "\n\
      \\DLEHeaderValueMatch\DC22\n\
      \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2=\n\
      \\fexpect_match\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\vexpectMatch\DC2H\n\
      \\aheaders\CAN\ETX \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheadersB\b\250B\ENQ\146\SOH\STX\b\SOH:;\154\197\136\RS6\n\
      \4envoy.api.v2.route.RateLimit.Action.HeaderValueMatch"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        descriptorValue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorValue")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'HeaderValueMatch
        expectMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "expect_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'expectMatch")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'HeaderValueMatch
        headers__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HeaderMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"headers")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'HeaderValueMatch
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, descriptorValue__field_descriptor),
           (Data.ProtoLens.Tag 2, expectMatch__field_descriptor),
           (Data.ProtoLens.Tag 3, headers__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'HeaderValueMatch'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'HeaderValueMatch'_unknownFields = y__})
  defMessage
    = RateLimit'Action'HeaderValueMatch'_constructor
        {_RateLimit'Action'HeaderValueMatch'descriptorValue = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'HeaderValueMatch'expectMatch = Prelude.Nothing,
         _RateLimit'Action'HeaderValueMatch'headers = Data.Vector.Generic.empty,
         _RateLimit'Action'HeaderValueMatch'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'HeaderValueMatch
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld HeaderMatcher
             -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'HeaderValueMatch
        loop x mutable'headers
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'headers)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'headers") frozen'headers x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_value"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorValue") y x)
                                  mutable'headers
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "expect_match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"expectMatch") y x)
                                  mutable'headers
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'headers y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'headers
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'headers)
          "HeaderValueMatch"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"descriptorValue") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'expectMatch") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage
                                 _v))
                      (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'headers") _x))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RateLimit'Action'HeaderValueMatch where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'HeaderValueMatch'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'HeaderValueMatch'descriptorValue x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'Action'HeaderValueMatch'expectMatch x__)
                   (Control.DeepSeq.deepseq
                      (_RateLimit'Action'HeaderValueMatch'headers x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorKey' @:: Lens' RateLimit'Action'MetaData Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadataKey' @:: Lens' RateLimit'Action'MetaData Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadataKey' @:: Lens' RateLimit'Action'MetaData (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.defaultValue' @:: Lens' RateLimit'Action'MetaData Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.source' @:: Lens' RateLimit'Action'MetaData RateLimit'Action'MetaData'Source@ -}
data RateLimit'Action'MetaData
  = RateLimit'Action'MetaData'_constructor {_RateLimit'Action'MetaData'descriptorKey :: !Data.Text.Text,
                                            _RateLimit'Action'MetaData'metadataKey :: !(Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey),
                                            _RateLimit'Action'MetaData'defaultValue :: !Data.Text.Text,
                                            _RateLimit'Action'MetaData'source :: !RateLimit'Action'MetaData'Source,
                                            _RateLimit'Action'MetaData'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'MetaData where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Action'MetaData "descriptorKey" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'MetaData'descriptorKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'MetaData'descriptorKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'MetaData "metadataKey" Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'MetaData'metadataKey
           (\ x__ y__ -> x__ {_RateLimit'Action'MetaData'metadataKey = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit'Action'MetaData "maybe'metadataKey" (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'MetaData'metadataKey
           (\ x__ y__ -> x__ {_RateLimit'Action'MetaData'metadataKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'MetaData "defaultValue" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'MetaData'defaultValue
           (\ x__ y__ -> x__ {_RateLimit'Action'MetaData'defaultValue = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'MetaData "source" RateLimit'Action'MetaData'Source where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'MetaData'source
           (\ x__ y__ -> x__ {_RateLimit'Action'MetaData'source = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Action'MetaData where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RateLimit.Action.MetaData"
  packedMessageDescriptor _
    = "\n\
      \\bMetaData\DC2.\n\
      \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
      \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
      \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\DC2Y\n\
      \\ACKsource\CAN\EOT \SOH(\SO27.envoy.config.route.v3.RateLimit.Action.MetaData.SourceR\ACKsourceB\b\250B\ENQ\130\SOH\STX\DLE\SOH\"&\n\
      \\ACKSource\DC2\v\n\
      \\aDYNAMIC\DLE\NUL\DC2\SI\n\
      \\vROUTE_ENTRY\DLE\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        descriptorKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'MetaData
        metadataKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata_key"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadataKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'MetaData
        defaultValue__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "default_value"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"defaultValue")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'MetaData
        source__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "source"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Action'MetaData'Source)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"source")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'MetaData
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, descriptorKey__field_descriptor),
           (Data.ProtoLens.Tag 2, metadataKey__field_descriptor),
           (Data.ProtoLens.Tag 3, defaultValue__field_descriptor),
           (Data.ProtoLens.Tag 4, source__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'MetaData'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'MetaData'_unknownFields = y__})
  defMessage
    = RateLimit'Action'MetaData'_constructor
        {_RateLimit'Action'MetaData'descriptorKey = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'MetaData'metadataKey = Prelude.Nothing,
         _RateLimit'Action'MetaData'defaultValue = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'MetaData'source = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'MetaData'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'MetaData
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'MetaData
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_key"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorKey") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata_key"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadataKey") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "default_value"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"defaultValue") y x)
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "source"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"source") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "MetaData"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"descriptorKey") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'metadataKey") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"defaultValue") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v = Lens.Family2.view (Data.ProtoLens.Field.field @"source") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                                  Prelude.fromEnum
                                  _v))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData RateLimit'Action'MetaData where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'MetaData'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'MetaData'descriptorKey x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'Action'MetaData'metadataKey x__)
                   (Control.DeepSeq.deepseq
                      (_RateLimit'Action'MetaData'defaultValue x__)
                      (Control.DeepSeq.deepseq
                         (_RateLimit'Action'MetaData'source x__) ()))))
newtype RateLimit'Action'MetaData'Source'UnrecognizedValue
  = RateLimit'Action'MetaData'Source'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data RateLimit'Action'MetaData'Source
  = RateLimit'Action'MetaData'DYNAMIC |
    RateLimit'Action'MetaData'ROUTE_ENTRY |
    RateLimit'Action'MetaData'Source'Unrecognized !RateLimit'Action'MetaData'Source'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum RateLimit'Action'MetaData'Source where
  maybeToEnum 0 = Prelude.Just RateLimit'Action'MetaData'DYNAMIC
  maybeToEnum 1 = Prelude.Just RateLimit'Action'MetaData'ROUTE_ENTRY
  maybeToEnum k
    = Prelude.Just
        (RateLimit'Action'MetaData'Source'Unrecognized
           (RateLimit'Action'MetaData'Source'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum RateLimit'Action'MetaData'DYNAMIC = "DYNAMIC"
  showEnum RateLimit'Action'MetaData'ROUTE_ENTRY = "ROUTE_ENTRY"
  showEnum
    (RateLimit'Action'MetaData'Source'Unrecognized (RateLimit'Action'MetaData'Source'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "DYNAMIC"
    = Prelude.Just RateLimit'Action'MetaData'DYNAMIC
    | (Prelude.==) k "ROUTE_ENTRY"
    = Prelude.Just RateLimit'Action'MetaData'ROUTE_ENTRY
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded RateLimit'Action'MetaData'Source where
  minBound = RateLimit'Action'MetaData'DYNAMIC
  maxBound = RateLimit'Action'MetaData'ROUTE_ENTRY
instance Prelude.Enum RateLimit'Action'MetaData'Source where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum Source: " (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum RateLimit'Action'MetaData'DYNAMIC = 0
  fromEnum RateLimit'Action'MetaData'ROUTE_ENTRY = 1
  fromEnum
    (RateLimit'Action'MetaData'Source'Unrecognized (RateLimit'Action'MetaData'Source'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ RateLimit'Action'MetaData'ROUTE_ENTRY
    = Prelude.error
        "RateLimit'Action'MetaData'Source.succ: bad argument RateLimit'Action'MetaData'ROUTE_ENTRY. This value would be out of bounds."
  succ RateLimit'Action'MetaData'DYNAMIC
    = RateLimit'Action'MetaData'ROUTE_ENTRY
  succ (RateLimit'Action'MetaData'Source'Unrecognized _)
    = Prelude.error
        "RateLimit'Action'MetaData'Source.succ: bad argument: unrecognized value"
  pred RateLimit'Action'MetaData'DYNAMIC
    = Prelude.error
        "RateLimit'Action'MetaData'Source.pred: bad argument RateLimit'Action'MetaData'DYNAMIC. This value would be out of bounds."
  pred RateLimit'Action'MetaData'ROUTE_ENTRY
    = RateLimit'Action'MetaData'DYNAMIC
  pred (RateLimit'Action'MetaData'Source'Unrecognized _)
    = Prelude.error
        "RateLimit'Action'MetaData'Source.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault RateLimit'Action'MetaData'Source where
  fieldDefault = RateLimit'Action'MetaData'DYNAMIC
instance Control.DeepSeq.NFData RateLimit'Action'MetaData'Source where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
      -}
data RateLimit'Action'RemoteAddress
  = RateLimit'Action'RemoteAddress'_constructor {_RateLimit'Action'RemoteAddress'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'RemoteAddress where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RateLimit'Action'RemoteAddress where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.RemoteAddress"
  packedMessageDescriptor _
    = "\n\
      \\rRemoteAddress:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.RemoteAddress"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'RemoteAddress'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'RemoteAddress'_unknownFields = y__})
  defMessage
    = RateLimit'Action'RemoteAddress'_constructor
        {_RateLimit'Action'RemoteAddress'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'RemoteAddress
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'RemoteAddress
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RemoteAddress"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RateLimit'Action'RemoteAddress where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'RemoteAddress'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headerName' @:: Lens' RateLimit'Action'RequestHeaders Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.descriptorKey' @:: Lens' RateLimit'Action'RequestHeaders Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.skipIfAbsent' @:: Lens' RateLimit'Action'RequestHeaders Prelude.Bool@ -}
data RateLimit'Action'RequestHeaders
  = RateLimit'Action'RequestHeaders'_constructor {_RateLimit'Action'RequestHeaders'headerName :: !Data.Text.Text,
                                                  _RateLimit'Action'RequestHeaders'descriptorKey :: !Data.Text.Text,
                                                  _RateLimit'Action'RequestHeaders'skipIfAbsent :: !Prelude.Bool,
                                                  _RateLimit'Action'RequestHeaders'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'RequestHeaders where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Action'RequestHeaders "headerName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'RequestHeaders'headerName
           (\ x__ y__
              -> x__ {_RateLimit'Action'RequestHeaders'headerName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'RequestHeaders "descriptorKey" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'RequestHeaders'descriptorKey
           (\ x__ y__
              -> x__ {_RateLimit'Action'RequestHeaders'descriptorKey = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Action'RequestHeaders "skipIfAbsent" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Action'RequestHeaders'skipIfAbsent
           (\ x__ y__
              -> x__ {_RateLimit'Action'RequestHeaders'skipIfAbsent = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Action'RequestHeaders where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.RequestHeaders"
  packedMessageDescriptor _
    = "\n\
      \\SORequestHeaders\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2.\n\
      \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2$\n\
      \\SOskip_if_absent\CAN\ETX \SOH(\bR\fskipIfAbsent:9\154\197\136\RS4\n\
      \2envoy.api.v2.route.RateLimit.Action.RequestHeaders"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        headerName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"headerName")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'RequestHeaders
        descriptorKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "descriptor_key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"descriptorKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'RequestHeaders
        skipIfAbsent__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "skip_if_absent"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"skipIfAbsent")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Action'RequestHeaders
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, headerName__field_descriptor),
           (Data.ProtoLens.Tag 2, descriptorKey__field_descriptor),
           (Data.ProtoLens.Tag 3, skipIfAbsent__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'RequestHeaders'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'RequestHeaders'_unknownFields = y__})
  defMessage
    = RateLimit'Action'RequestHeaders'_constructor
        {_RateLimit'Action'RequestHeaders'headerName = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'RequestHeaders'descriptorKey = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'RequestHeaders'skipIfAbsent = Data.ProtoLens.fieldDefault,
         _RateLimit'Action'RequestHeaders'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'RequestHeaders
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'RequestHeaders
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "header_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"headerName") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "descriptor_key"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"descriptorKey") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "skip_if_absent"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"skipIfAbsent") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RequestHeaders"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view (Data.ProtoLens.Field.field @"headerName") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view
                         (Data.ProtoLens.Field.field @"descriptorKey") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8
                            _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"skipIfAbsent") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt
                               (\ b -> if b then 1 else 0)
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RateLimit'Action'RequestHeaders where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'RequestHeaders'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Action'RequestHeaders'headerName x__)
                (Control.DeepSeq.deepseq
                   (_RateLimit'Action'RequestHeaders'descriptorKey x__)
                   (Control.DeepSeq.deepseq
                      (_RateLimit'Action'RequestHeaders'skipIfAbsent x__) ())))
{- | Fields :
      -}
data RateLimit'Action'SourceCluster
  = RateLimit'Action'SourceCluster'_constructor {_RateLimit'Action'SourceCluster'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Action'SourceCluster where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RateLimit'Action'SourceCluster where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Action.SourceCluster"
  packedMessageDescriptor _
    = "\n\
      \\rSourceCluster:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RateLimit.Action.SourceCluster"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Action'SourceCluster'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Action'SourceCluster'_unknownFields = y__})
  defMessage
    = RateLimit'Action'SourceCluster'_constructor
        {_RateLimit'Action'SourceCluster'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Action'SourceCluster
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Action'SourceCluster
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "SourceCluster"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RateLimit'Action'SourceCluster where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Action'SourceCluster'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'overrideSpecifier' @:: Lens' RateLimit'Override (Prelude.Maybe RateLimit'Override'OverrideSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'dynamicMetadata' @:: Lens' RateLimit'Override (Prelude.Maybe RateLimit'Override'DynamicMetadata)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.dynamicMetadata' @:: Lens' RateLimit'Override RateLimit'Override'DynamicMetadata@ -}
data RateLimit'Override
  = RateLimit'Override'_constructor {_RateLimit'Override'overrideSpecifier :: !(Prelude.Maybe RateLimit'Override'OverrideSpecifier),
                                     _RateLimit'Override'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Override where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RateLimit'Override'OverrideSpecifier
  = RateLimit'Override'DynamicMetadata' !RateLimit'Override'DynamicMetadata
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RateLimit'Override "maybe'overrideSpecifier" (Prelude.Maybe RateLimit'Override'OverrideSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Override'overrideSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Override'overrideSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RateLimit'Override "maybe'dynamicMetadata" (Prelude.Maybe RateLimit'Override'DynamicMetadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Override'overrideSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Override'overrideSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RateLimit'Override'DynamicMetadata' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RateLimit'Override'DynamicMetadata' y__))
instance Data.ProtoLens.Field.HasField RateLimit'Override "dynamicMetadata" RateLimit'Override'DynamicMetadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Override'overrideSpecifier
           (\ x__ y__ -> x__ {_RateLimit'Override'overrideSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RateLimit'Override'DynamicMetadata' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RateLimit'Override'DynamicMetadata' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RateLimit'Override where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RateLimit.Override"
  packedMessageDescriptor _
    = "\n\
      \\bOverride\DC2f\n\
      \\DLEdynamic_metadata\CAN\SOH \SOH(\v29.envoy.config.route.v3.RateLimit.Override.DynamicMetadataH\NULR\SIdynamicMetadata\SUBc\n\
      \\SIDynamicMetadata\DC2P\n\
      \\fmetadata_key\CAN\SOH \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOHB\EM\n\
      \\DC2override_specifier\DC2\ETX\248B\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        dynamicMetadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "dynamic_metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit'Override'DynamicMetadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'dynamicMetadata")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Override
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, dynamicMetadata__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Override'_unknownFields
        (\ x__ y__ -> x__ {_RateLimit'Override'_unknownFields = y__})
  defMessage
    = RateLimit'Override'_constructor
        {_RateLimit'Override'overrideSpecifier = Prelude.Nothing,
         _RateLimit'Override'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Override
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Override
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "dynamic_metadata"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"dynamicMetadata") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Override"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'overrideSpecifier") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just (RateLimit'Override'DynamicMetadata' v))
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RateLimit'Override where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Override'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Override'overrideSpecifier x__) ())
instance Control.DeepSeq.NFData RateLimit'Override'OverrideSpecifier where
  rnf (RateLimit'Override'DynamicMetadata' x__)
    = Control.DeepSeq.rnf x__
_RateLimit'Override'DynamicMetadata' ::
  Data.ProtoLens.Prism.Prism' RateLimit'Override'OverrideSpecifier RateLimit'Override'DynamicMetadata
_RateLimit'Override'DynamicMetadata'
  = Data.ProtoLens.Prism.prism'
      RateLimit'Override'DynamicMetadata'
      (\ p__
         -> case p__ of {
              (RateLimit'Override'DynamicMetadata' p__val)
                -> Prelude.Just p__val })
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadataKey' @:: Lens' RateLimit'Override'DynamicMetadata Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadataKey' @:: Lens' RateLimit'Override'DynamicMetadata (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)@ -}
data RateLimit'Override'DynamicMetadata
  = RateLimit'Override'DynamicMetadata'_constructor {_RateLimit'Override'DynamicMetadata'metadataKey :: !(Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey),
                                                     _RateLimit'Override'DynamicMetadata'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RateLimit'Override'DynamicMetadata where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RateLimit'Override'DynamicMetadata "metadataKey" Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Override'DynamicMetadata'metadataKey
           (\ x__ y__
              -> x__ {_RateLimit'Override'DynamicMetadata'metadataKey = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RateLimit'Override'DynamicMetadata "maybe'metadataKey" (Prelude.Maybe Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RateLimit'Override'DynamicMetadata'metadataKey
           (\ x__ y__
              -> x__ {_RateLimit'Override'DynamicMetadata'metadataKey = y__}))
        Prelude.id
instance Data.ProtoLens.Message RateLimit'Override'DynamicMetadata where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RateLimit.Override.DynamicMetadata"
  packedMessageDescriptor _
    = "\n\
      \\SIDynamicMetadata\DC2P\n\
      \\fmetadata_key\CAN\SOH \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        metadataKey__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata_key"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Metadata.V3.Metadata.MetadataKey)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadataKey")) ::
              Data.ProtoLens.FieldDescriptor RateLimit'Override'DynamicMetadata
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, metadataKey__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RateLimit'Override'DynamicMetadata'_unknownFields
        (\ x__ y__
           -> x__ {_RateLimit'Override'DynamicMetadata'_unknownFields = y__})
  defMessage
    = RateLimit'Override'DynamicMetadata'_constructor
        {_RateLimit'Override'DynamicMetadata'metadataKey = Prelude.Nothing,
         _RateLimit'Override'DynamicMetadata'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RateLimit'Override'DynamicMetadata
          -> Data.ProtoLens.Encoding.Bytes.Parser RateLimit'Override'DynamicMetadata
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata_key"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadataKey") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "DynamicMetadata"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'metadataKey") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RateLimit'Override'DynamicMetadata where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RateLimit'Override'DynamicMetadata'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RateLimit'Override'DynamicMetadata'metadataKey x__) ())
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostRedirect' @:: Lens' RedirectAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.portRedirect' @:: Lens' RedirectAction Data.Word.Word32@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseCode' @:: Lens' RedirectAction RedirectAction'RedirectResponseCode@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.stripQuery' @:: Lens' RedirectAction Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'schemeRewriteSpecifier' @:: Lens' RedirectAction (Prelude.Maybe RedirectAction'SchemeRewriteSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'httpsRedirect' @:: Lens' RedirectAction (Prelude.Maybe Prelude.Bool)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.httpsRedirect' @:: Lens' RedirectAction Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'schemeRedirect' @:: Lens' RedirectAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.schemeRedirect' @:: Lens' RedirectAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'pathRewriteSpecifier' @:: Lens' RedirectAction (Prelude.Maybe RedirectAction'PathRewriteSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'pathRedirect' @:: Lens' RedirectAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.pathRedirect' @:: Lens' RedirectAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'prefixRewrite' @:: Lens' RedirectAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.prefixRewrite' @:: Lens' RedirectAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'regexRewrite' @:: Lens' RedirectAction (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.regexRewrite' @:: Lens' RedirectAction Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute@ -}
data RedirectAction
  = RedirectAction'_constructor {_RedirectAction'hostRedirect :: !Data.Text.Text,
                                 _RedirectAction'portRedirect :: !Data.Word.Word32,
                                 _RedirectAction'responseCode :: !RedirectAction'RedirectResponseCode,
                                 _RedirectAction'stripQuery :: !Prelude.Bool,
                                 _RedirectAction'schemeRewriteSpecifier :: !(Prelude.Maybe RedirectAction'SchemeRewriteSpecifier),
                                 _RedirectAction'pathRewriteSpecifier :: !(Prelude.Maybe RedirectAction'PathRewriteSpecifier),
                                 _RedirectAction'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RedirectAction where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RedirectAction'SchemeRewriteSpecifier
  = RedirectAction'HttpsRedirect !Prelude.Bool |
    RedirectAction'SchemeRedirect !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
data RedirectAction'PathRewriteSpecifier
  = RedirectAction'PathRedirect !Data.Text.Text |
    RedirectAction'PrefixRewrite !Data.Text.Text |
    RedirectAction'RegexRewrite !Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RedirectAction "hostRedirect" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'hostRedirect
           (\ x__ y__ -> x__ {_RedirectAction'hostRedirect = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "portRedirect" Data.Word.Word32 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'portRedirect
           (\ x__ y__ -> x__ {_RedirectAction'portRedirect = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "responseCode" RedirectAction'RedirectResponseCode where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'responseCode
           (\ x__ y__ -> x__ {_RedirectAction'responseCode = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "stripQuery" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'stripQuery
           (\ x__ y__ -> x__ {_RedirectAction'stripQuery = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'schemeRewriteSpecifier" (Prelude.Maybe RedirectAction'SchemeRewriteSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'schemeRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'schemeRewriteSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'httpsRedirect" (Prelude.Maybe Prelude.Bool) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'schemeRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'schemeRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RedirectAction'HttpsRedirect x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RedirectAction'HttpsRedirect y__))
instance Data.ProtoLens.Field.HasField RedirectAction "httpsRedirect" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'schemeRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'schemeRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RedirectAction'HttpsRedirect x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RedirectAction'HttpsRedirect y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'schemeRedirect" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'schemeRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'schemeRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RedirectAction'SchemeRedirect x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RedirectAction'SchemeRedirect y__))
instance Data.ProtoLens.Field.HasField RedirectAction "schemeRedirect" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'schemeRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'schemeRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RedirectAction'SchemeRedirect x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RedirectAction'SchemeRedirect y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'pathRewriteSpecifier" (Prelude.Maybe RedirectAction'PathRewriteSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'pathRedirect" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RedirectAction'PathRedirect x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RedirectAction'PathRedirect y__))
instance Data.ProtoLens.Field.HasField RedirectAction "pathRedirect" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RedirectAction'PathRedirect x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RedirectAction'PathRedirect y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'prefixRewrite" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RedirectAction'PrefixRewrite x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RedirectAction'PrefixRewrite y__))
instance Data.ProtoLens.Field.HasField RedirectAction "prefixRewrite" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RedirectAction'PrefixRewrite x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RedirectAction'PrefixRewrite y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RedirectAction "maybe'regexRewrite" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RedirectAction'RegexRewrite x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RedirectAction'RegexRewrite y__))
instance Data.ProtoLens.Field.HasField RedirectAction "regexRewrite" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RedirectAction'pathRewriteSpecifier
           (\ x__ y__ -> x__ {_RedirectAction'pathRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RedirectAction'RegexRewrite x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RedirectAction'RegexRewrite y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RedirectAction where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RedirectAction"
  packedMessageDescriptor _
    = "\n\
      \\SORedirectAction\DC2'\n\
      \\SOhttps_redirect\CAN\EOT \SOH(\bH\NULR\rhttpsRedirect\DC2)\n\
      \\SIscheme_redirect\CAN\a \SOH(\tH\NULR\SOschemeRedirect\DC20\n\
      \\rhost_redirect\CAN\SOH \SOH(\tR\fhostRedirectB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2#\n\
      \\rport_redirect\CAN\b \SOH(\rR\fportRedirect\DC22\n\
      \\rpath_redirect\CAN\STX \SOH(\tH\SOHR\fpathRedirectB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC24\n\
      \\SOprefix_rewrite\CAN\ENQ \SOH(\tH\SOHR\rprefixRewriteB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2U\n\
      \\rregex_rewrite\CAN\t \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteH\SOHR\fregexRewrite\DC2i\n\
      \\rresponse_code\CAN\ETX \SOH(\SO2:.envoy.config.route.v3.RedirectAction.RedirectResponseCodeR\fresponseCodeB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2\US\n\
      \\vstrip_query\CAN\ACK \SOH(\bR\n\
      \stripQuery\"w\n\
      \\DC4RedirectResponseCode\DC2\NAK\n\
      \\DC1MOVED_PERMANENTLY\DLE\NUL\DC2\t\n\
      \\ENQFOUND\DLE\SOH\DC2\r\n\
      \\tSEE_OTHER\DLE\STX\DC2\SYN\n\
      \\DC2TEMPORARY_REDIRECT\DLE\ETX\DC2\SYN\n\
      \\DC2PERMANENT_REDIRECT\DLE\EOTB\SUB\n\
      \\CANscheme_rewrite_specifierB\CAN\n\
      \\SYNpath_rewrite_specifier:(\154\197\136\RS#\n\
      \!envoy.api.v2.route.RedirectAction"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        hostRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"hostRedirect")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        portRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "port_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.UInt32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Word.Word32)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"portRedirect")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        responseCode__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_code"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor RedirectAction'RedirectResponseCode)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"responseCode")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        stripQuery__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "strip_query"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"stripQuery")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        httpsRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "https_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'httpsRedirect")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        schemeRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "scheme_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'schemeRedirect")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        pathRedirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "path_redirect"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'pathRedirect")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        prefixRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "prefix_rewrite"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'prefixRewrite")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
        regexRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "regex_rewrite"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'regexRewrite")) ::
              Data.ProtoLens.FieldDescriptor RedirectAction
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, hostRedirect__field_descriptor),
           (Data.ProtoLens.Tag 8, portRedirect__field_descriptor),
           (Data.ProtoLens.Tag 3, responseCode__field_descriptor),
           (Data.ProtoLens.Tag 6, stripQuery__field_descriptor),
           (Data.ProtoLens.Tag 4, httpsRedirect__field_descriptor),
           (Data.ProtoLens.Tag 7, schemeRedirect__field_descriptor),
           (Data.ProtoLens.Tag 2, pathRedirect__field_descriptor),
           (Data.ProtoLens.Tag 5, prefixRewrite__field_descriptor),
           (Data.ProtoLens.Tag 9, regexRewrite__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RedirectAction'_unknownFields
        (\ x__ y__ -> x__ {_RedirectAction'_unknownFields = y__})
  defMessage
    = RedirectAction'_constructor
        {_RedirectAction'hostRedirect = Data.ProtoLens.fieldDefault,
         _RedirectAction'portRedirect = Data.ProtoLens.fieldDefault,
         _RedirectAction'responseCode = Data.ProtoLens.fieldDefault,
         _RedirectAction'stripQuery = Data.ProtoLens.fieldDefault,
         _RedirectAction'schemeRewriteSpecifier = Prelude.Nothing,
         _RedirectAction'pathRewriteSpecifier = Prelude.Nothing,
         _RedirectAction'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RedirectAction
          -> Data.ProtoLens.Encoding.Bytes.Parser RedirectAction
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "host_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostRedirect") y x)
                        64
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "port_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"portRedirect") y x)
                        24
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "response_code"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"responseCode") y x)
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "strip_query"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"stripQuery") y x)
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "https_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"httpsRedirect") y x)
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "scheme_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"schemeRedirect") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "path_redirect"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"pathRedirect") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "prefix_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"prefixRewrite") y x)
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "regex_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"regexRewrite") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RedirectAction"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view (Data.ProtoLens.Field.field @"hostRedirect") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v
                     = Lens.Family2.view (Data.ProtoLens.Field.field @"portRedirect") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 64)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view (Data.ProtoLens.Field.field @"responseCode") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 24)
                            ((Prelude..)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                               Prelude.fromEnum
                               _v))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"stripQuery") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                               ((Prelude..)
                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                  (\ b -> if b then 1 else 0)
                                  _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view
                                (Data.ProtoLens.Field.field @"maybe'schemeRewriteSpecifier") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just (RedirectAction'HttpsRedirect v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                                   ((Prelude..)
                                      Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (\ b -> if b then 1 else 0)
                                      v)
                            (Prelude.Just (RedirectAction'SchemeRedirect v))
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.Text.Encoding.encodeUtf8
                                      v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'pathRewriteSpecifier") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just (RedirectAction'PathRedirect v))
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.Text.Encoding.encodeUtf8
                                         v)
                               (Prelude.Just (RedirectAction'PrefixRewrite v))
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.Text.Encoding.encodeUtf8
                                         v)
                               (Prelude.Just (RedirectAction'RegexRewrite v))
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage
                                         v))
                            (Data.ProtoLens.Encoding.Wire.buildFieldSet
                               (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))))
instance Control.DeepSeq.NFData RedirectAction where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RedirectAction'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RedirectAction'hostRedirect x__)
                (Control.DeepSeq.deepseq
                   (_RedirectAction'portRedirect x__)
                   (Control.DeepSeq.deepseq
                      (_RedirectAction'responseCode x__)
                      (Control.DeepSeq.deepseq
                         (_RedirectAction'stripQuery x__)
                         (Control.DeepSeq.deepseq
                            (_RedirectAction'schemeRewriteSpecifier x__)
                            (Control.DeepSeq.deepseq
                               (_RedirectAction'pathRewriteSpecifier x__) ()))))))
instance Control.DeepSeq.NFData RedirectAction'SchemeRewriteSpecifier where
  rnf (RedirectAction'HttpsRedirect x__) = Control.DeepSeq.rnf x__
  rnf (RedirectAction'SchemeRedirect x__) = Control.DeepSeq.rnf x__
instance Control.DeepSeq.NFData RedirectAction'PathRewriteSpecifier where
  rnf (RedirectAction'PathRedirect x__) = Control.DeepSeq.rnf x__
  rnf (RedirectAction'PrefixRewrite x__) = Control.DeepSeq.rnf x__
  rnf (RedirectAction'RegexRewrite x__) = Control.DeepSeq.rnf x__
_RedirectAction'HttpsRedirect ::
  Data.ProtoLens.Prism.Prism' RedirectAction'SchemeRewriteSpecifier Prelude.Bool
_RedirectAction'HttpsRedirect
  = Data.ProtoLens.Prism.prism'
      RedirectAction'HttpsRedirect
      (\ p__
         -> case p__ of
              (RedirectAction'HttpsRedirect p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RedirectAction'SchemeRedirect ::
  Data.ProtoLens.Prism.Prism' RedirectAction'SchemeRewriteSpecifier Data.Text.Text
_RedirectAction'SchemeRedirect
  = Data.ProtoLens.Prism.prism'
      RedirectAction'SchemeRedirect
      (\ p__
         -> case p__ of
              (RedirectAction'SchemeRedirect p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RedirectAction'PathRedirect ::
  Data.ProtoLens.Prism.Prism' RedirectAction'PathRewriteSpecifier Data.Text.Text
_RedirectAction'PathRedirect
  = Data.ProtoLens.Prism.prism'
      RedirectAction'PathRedirect
      (\ p__
         -> case p__ of
              (RedirectAction'PathRedirect p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RedirectAction'PrefixRewrite ::
  Data.ProtoLens.Prism.Prism' RedirectAction'PathRewriteSpecifier Data.Text.Text
_RedirectAction'PrefixRewrite
  = Data.ProtoLens.Prism.prism'
      RedirectAction'PrefixRewrite
      (\ p__
         -> case p__ of
              (RedirectAction'PrefixRewrite p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RedirectAction'RegexRewrite ::
  Data.ProtoLens.Prism.Prism' RedirectAction'PathRewriteSpecifier Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute
_RedirectAction'RegexRewrite
  = Data.ProtoLens.Prism.prism'
      RedirectAction'RegexRewrite
      (\ p__
         -> case p__ of
              (RedirectAction'RegexRewrite p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
newtype RedirectAction'RedirectResponseCode'UnrecognizedValue
  = RedirectAction'RedirectResponseCode'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data RedirectAction'RedirectResponseCode
  = RedirectAction'MOVED_PERMANENTLY |
    RedirectAction'FOUND |
    RedirectAction'SEE_OTHER |
    RedirectAction'TEMPORARY_REDIRECT |
    RedirectAction'PERMANENT_REDIRECT |
    RedirectAction'RedirectResponseCode'Unrecognized !RedirectAction'RedirectResponseCode'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum RedirectAction'RedirectResponseCode where
  maybeToEnum 0 = Prelude.Just RedirectAction'MOVED_PERMANENTLY
  maybeToEnum 1 = Prelude.Just RedirectAction'FOUND
  maybeToEnum 2 = Prelude.Just RedirectAction'SEE_OTHER
  maybeToEnum 3 = Prelude.Just RedirectAction'TEMPORARY_REDIRECT
  maybeToEnum 4 = Prelude.Just RedirectAction'PERMANENT_REDIRECT
  maybeToEnum k
    = Prelude.Just
        (RedirectAction'RedirectResponseCode'Unrecognized
           (RedirectAction'RedirectResponseCode'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum RedirectAction'MOVED_PERMANENTLY = "MOVED_PERMANENTLY"
  showEnum RedirectAction'FOUND = "FOUND"
  showEnum RedirectAction'SEE_OTHER = "SEE_OTHER"
  showEnum RedirectAction'TEMPORARY_REDIRECT = "TEMPORARY_REDIRECT"
  showEnum RedirectAction'PERMANENT_REDIRECT = "PERMANENT_REDIRECT"
  showEnum
    (RedirectAction'RedirectResponseCode'Unrecognized (RedirectAction'RedirectResponseCode'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "MOVED_PERMANENTLY"
    = Prelude.Just RedirectAction'MOVED_PERMANENTLY
    | (Prelude.==) k "FOUND" = Prelude.Just RedirectAction'FOUND
    | (Prelude.==) k "SEE_OTHER"
    = Prelude.Just RedirectAction'SEE_OTHER
    | (Prelude.==) k "TEMPORARY_REDIRECT"
    = Prelude.Just RedirectAction'TEMPORARY_REDIRECT
    | (Prelude.==) k "PERMANENT_REDIRECT"
    = Prelude.Just RedirectAction'PERMANENT_REDIRECT
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded RedirectAction'RedirectResponseCode where
  minBound = RedirectAction'MOVED_PERMANENTLY
  maxBound = RedirectAction'PERMANENT_REDIRECT
instance Prelude.Enum RedirectAction'RedirectResponseCode where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum RedirectResponseCode: "
              (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum RedirectAction'MOVED_PERMANENTLY = 0
  fromEnum RedirectAction'FOUND = 1
  fromEnum RedirectAction'SEE_OTHER = 2
  fromEnum RedirectAction'TEMPORARY_REDIRECT = 3
  fromEnum RedirectAction'PERMANENT_REDIRECT = 4
  fromEnum
    (RedirectAction'RedirectResponseCode'Unrecognized (RedirectAction'RedirectResponseCode'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ RedirectAction'PERMANENT_REDIRECT
    = Prelude.error
        "RedirectAction'RedirectResponseCode.succ: bad argument RedirectAction'PERMANENT_REDIRECT. This value would be out of bounds."
  succ RedirectAction'MOVED_PERMANENTLY = RedirectAction'FOUND
  succ RedirectAction'FOUND = RedirectAction'SEE_OTHER
  succ RedirectAction'SEE_OTHER = RedirectAction'TEMPORARY_REDIRECT
  succ RedirectAction'TEMPORARY_REDIRECT
    = RedirectAction'PERMANENT_REDIRECT
  succ (RedirectAction'RedirectResponseCode'Unrecognized _)
    = Prelude.error
        "RedirectAction'RedirectResponseCode.succ: bad argument: unrecognized value"
  pred RedirectAction'MOVED_PERMANENTLY
    = Prelude.error
        "RedirectAction'RedirectResponseCode.pred: bad argument RedirectAction'MOVED_PERMANENTLY. This value would be out of bounds."
  pred RedirectAction'FOUND = RedirectAction'MOVED_PERMANENTLY
  pred RedirectAction'SEE_OTHER = RedirectAction'FOUND
  pred RedirectAction'TEMPORARY_REDIRECT = RedirectAction'SEE_OTHER
  pred RedirectAction'PERMANENT_REDIRECT
    = RedirectAction'TEMPORARY_REDIRECT
  pred (RedirectAction'RedirectResponseCode'Unrecognized _)
    = Prelude.error
        "RedirectAction'RedirectResponseCode.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault RedirectAction'RedirectResponseCode where
  fieldDefault = RedirectAction'MOVED_PERMANENTLY
instance Control.DeepSeq.NFData RedirectAction'RedirectResponseCode where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryOn' @:: Lens' RetryPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.numRetries' @:: Lens' RetryPolicy Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'numRetries' @:: Lens' RetryPolicy (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.perTryTimeout' @:: Lens' RetryPolicy Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'perTryTimeout' @:: Lens' RetryPolicy (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryPriority' @:: Lens' RetryPolicy RetryPolicy'RetryPriority@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryPriority' @:: Lens' RetryPolicy (Prelude.Maybe RetryPolicy'RetryPriority)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryHostPredicate' @:: Lens' RetryPolicy [RetryPolicy'RetryHostPredicate]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'retryHostPredicate' @:: Lens' RetryPolicy (Data.Vector.Vector RetryPolicy'RetryHostPredicate)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostSelectionRetryMaxAttempts' @:: Lens' RetryPolicy Data.Int.Int64@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retriableStatusCodes' @:: Lens' RetryPolicy [Data.Word.Word32]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'retriableStatusCodes' @:: Lens' RetryPolicy (Data.Vector.Unboxed.Vector Data.Word.Word32)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryBackOff' @:: Lens' RetryPolicy RetryPolicy'RetryBackOff@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryBackOff' @:: Lens' RetryPolicy (Prelude.Maybe RetryPolicy'RetryBackOff)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.rateLimitedRetryBackOff' @:: Lens' RetryPolicy RetryPolicy'RateLimitedRetryBackOff@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'rateLimitedRetryBackOff' @:: Lens' RetryPolicy (Prelude.Maybe RetryPolicy'RateLimitedRetryBackOff)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retriableHeaders' @:: Lens' RetryPolicy [HeaderMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'retriableHeaders' @:: Lens' RetryPolicy (Data.Vector.Vector HeaderMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retriableRequestHeaders' @:: Lens' RetryPolicy [HeaderMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'retriableRequestHeaders' @:: Lens' RetryPolicy (Data.Vector.Vector HeaderMatcher)@ -}
data RetryPolicy
  = RetryPolicy'_constructor {_RetryPolicy'retryOn :: !Data.Text.Text,
                              _RetryPolicy'numRetries :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                              _RetryPolicy'perTryTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                              _RetryPolicy'retryPriority :: !(Prelude.Maybe RetryPolicy'RetryPriority),
                              _RetryPolicy'retryHostPredicate :: !(Data.Vector.Vector RetryPolicy'RetryHostPredicate),
                              _RetryPolicy'hostSelectionRetryMaxAttempts :: !Data.Int.Int64,
                              _RetryPolicy'retriableStatusCodes :: !(Data.Vector.Unboxed.Vector Data.Word.Word32),
                              _RetryPolicy'retryBackOff :: !(Prelude.Maybe RetryPolicy'RetryBackOff),
                              _RetryPolicy'rateLimitedRetryBackOff :: !(Prelude.Maybe RetryPolicy'RateLimitedRetryBackOff),
                              _RetryPolicy'retriableHeaders :: !(Data.Vector.Vector HeaderMatcher),
                              _RetryPolicy'retriableRequestHeaders :: !(Data.Vector.Vector HeaderMatcher),
                              _RetryPolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RetryPolicy "retryOn" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryOn
           (\ x__ y__ -> x__ {_RetryPolicy'retryOn = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "numRetries" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'numRetries
           (\ x__ y__ -> x__ {_RetryPolicy'numRetries = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy "maybe'numRetries" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'numRetries
           (\ x__ y__ -> x__ {_RetryPolicy'numRetries = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "perTryTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'perTryTimeout
           (\ x__ y__ -> x__ {_RetryPolicy'perTryTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy "maybe'perTryTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'perTryTimeout
           (\ x__ y__ -> x__ {_RetryPolicy'perTryTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retryPriority" RetryPolicy'RetryPriority where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryPriority
           (\ x__ y__ -> x__ {_RetryPolicy'retryPriority = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy "maybe'retryPriority" (Prelude.Maybe RetryPolicy'RetryPriority) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryPriority
           (\ x__ y__ -> x__ {_RetryPolicy'retryPriority = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retryHostPredicate" [RetryPolicy'RetryHostPredicate] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryHostPredicate
           (\ x__ y__ -> x__ {_RetryPolicy'retryHostPredicate = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RetryPolicy "vec'retryHostPredicate" (Data.Vector.Vector RetryPolicy'RetryHostPredicate) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryHostPredicate
           (\ x__ y__ -> x__ {_RetryPolicy'retryHostPredicate = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "hostSelectionRetryMaxAttempts" Data.Int.Int64 where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'hostSelectionRetryMaxAttempts
           (\ x__ y__
              -> x__ {_RetryPolicy'hostSelectionRetryMaxAttempts = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retriableStatusCodes" [Data.Word.Word32] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableStatusCodes
           (\ x__ y__ -> x__ {_RetryPolicy'retriableStatusCodes = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RetryPolicy "vec'retriableStatusCodes" (Data.Vector.Unboxed.Vector Data.Word.Word32) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableStatusCodes
           (\ x__ y__ -> x__ {_RetryPolicy'retriableStatusCodes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retryBackOff" RetryPolicy'RetryBackOff where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryBackOff
           (\ x__ y__ -> x__ {_RetryPolicy'retryBackOff = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy "maybe'retryBackOff" (Prelude.Maybe RetryPolicy'RetryBackOff) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retryBackOff
           (\ x__ y__ -> x__ {_RetryPolicy'retryBackOff = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "rateLimitedRetryBackOff" RetryPolicy'RateLimitedRetryBackOff where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'rateLimitedRetryBackOff
           (\ x__ y__ -> x__ {_RetryPolicy'rateLimitedRetryBackOff = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy "maybe'rateLimitedRetryBackOff" (Prelude.Maybe RetryPolicy'RateLimitedRetryBackOff) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'rateLimitedRetryBackOff
           (\ x__ y__ -> x__ {_RetryPolicy'rateLimitedRetryBackOff = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retriableHeaders" [HeaderMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableHeaders
           (\ x__ y__ -> x__ {_RetryPolicy'retriableHeaders = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RetryPolicy "vec'retriableHeaders" (Data.Vector.Vector HeaderMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableHeaders
           (\ x__ y__ -> x__ {_RetryPolicy'retriableHeaders = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy "retriableRequestHeaders" [HeaderMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableRequestHeaders
           (\ x__ y__ -> x__ {_RetryPolicy'retriableRequestHeaders = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RetryPolicy "vec'retriableRequestHeaders" (Data.Vector.Vector HeaderMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'retriableRequestHeaders
           (\ x__ y__ -> x__ {_RetryPolicy'retriableRequestHeaders = y__}))
        Prelude.id
instance Data.ProtoLens.Message RetryPolicy where
  messageName _ = Data.Text.pack "envoy.config.route.v3.RetryPolicy"
  packedMessageDescriptor _
    = "\n\
      \\vRetryPolicy\DC2\EM\n\
      \\bretry_on\CAN\SOH \SOH(\tR\aretryOn\DC2R\n\
      \\vnum_retries\CAN\STX \SOH(\v2\FS.google.protobuf.UInt32ValueR\n\
      \numRetriesB\DC3\242\152\254\143\ENQ\r\n\
      \\vmax_retries\DC2A\n\
      \\SIper_try_timeout\CAN\ETX \SOH(\v2\EM.google.protobuf.DurationR\rperTryTimeout\DC2W\n\
      \\SOretry_priority\CAN\EOT \SOH(\v20.envoy.config.route.v3.RetryPolicy.RetryPriorityR\rretryPriority\DC2g\n\
      \\DC4retry_host_predicate\CAN\ENQ \ETX(\v25.envoy.config.route.v3.RetryPolicy.RetryHostPredicateR\DC2retryHostPredicate\DC2H\n\
      \!host_selection_retry_max_attempts\CAN\ACK \SOH(\ETXR\GShostSelectionRetryMaxAttempts\DC24\n\
      \\SYNretriable_status_codes\CAN\a \ETX(\rR\DC4retriableStatusCodes\DC2U\n\
      \\SOretry_back_off\CAN\b \SOH(\v2/.envoy.config.route.v3.RetryPolicy.RetryBackOffR\fretryBackOff\DC2x\n\
      \\ESCrate_limited_retry_back_off\CAN\v \SOH(\v2:.envoy.config.route.v3.RetryPolicy.RateLimitedRetryBackOffR\ETBrateLimitedRetryBackOff\DC2Q\n\
      \\DC1retriable_headers\CAN\t \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\DLEretriableHeaders\DC2`\n\
      \\EMretriable_request_headers\CAN\n\
      \ \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\ETBretriableRequestHeaders\SUB\185\SOH\n\
      \\rRetryPriority\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
      \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
      \\vconfig_type:3\154\197\136\RS.\n\
      \,envoy.api.v2.route.RetryPolicy.RetryPriorityJ\EOT\b\STX\DLE\ETXR\ACKconfig\SUB\195\SOH\n\
      \\DC2RetryHostPredicate\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
      \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
      \\vconfig_type:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RetryPolicy.RetryHostPredicateJ\EOT\b\STX\DLE\ETXR\ACKconfig\SUB\214\SOH\n\
      \\fRetryBackOff\DC2J\n\
      \\rbase_interval\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\fbaseIntervalB\n\
      \\250B\a\170\SOH\EOT\b\SOH*\NUL\DC2F\n\
      \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL:2\154\197\136\RS-\n\
      \+envoy.api.v2.route.RetryPolicy.RetryBackOff\SUB\136\SOH\n\
      \\vResetHeader\DC2!\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2V\n\
      \\ACKformat\CAN\STX \SOH(\SO24.envoy.config.route.v3.RetryPolicy.ResetHeaderFormatR\ACKformatB\b\250B\ENQ\130\SOH\STX\DLE\SOH\SUB\192\SOH\n\
      \\ETBRateLimitedRetryBackOff\DC2]\n\
      \\rreset_headers\CAN\SOH \ETX(\v2..envoy.config.route.v3.RetryPolicy.ResetHeaderR\fresetHeadersB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2F\n\
      \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL\"4\n\
      \\DC1ResetHeaderFormat\DC2\v\n\
      \\aSECONDS\DLE\NUL\DC2\DC2\n\
      \\SOUNIX_TIMESTAMP\DLE\SOH:%\154\197\136\RS \n\
      \\RSenvoy.api.v2.route.RetryPolicy"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        retryOn__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_on"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"retryOn")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        numRetries__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "num_retries"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'numRetries")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        perTryTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "per_try_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'perTryTimeout")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retryPriority__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_priority"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'RetryPriority)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPriority")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retryHostPredicate__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_host_predicate"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'RetryHostPredicate)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"retryHostPredicate")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        hostSelectionRetryMaxAttempts__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_selection_retry_max_attempts"
              (Data.ProtoLens.ScalarField Data.ProtoLens.Int64Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Int.Int64)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"hostSelectionRetryMaxAttempts")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retriableStatusCodes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retriable_status_codes"
              (Data.ProtoLens.ScalarField Data.ProtoLens.UInt32Field ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Word.Word32)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Packed
                 (Data.ProtoLens.Field.field @"retriableStatusCodes")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retryBackOff__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_back_off"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'RetryBackOff)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryBackOff")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        rateLimitedRetryBackOff__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rate_limited_retry_back_off"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'RateLimitedRetryBackOff)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'rateLimitedRetryBackOff")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retriableHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retriable_headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HeaderMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"retriableHeaders")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
        retriableRequestHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retriable_request_headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HeaderMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"retriableRequestHeaders")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, retryOn__field_descriptor),
           (Data.ProtoLens.Tag 2, numRetries__field_descriptor),
           (Data.ProtoLens.Tag 3, perTryTimeout__field_descriptor),
           (Data.ProtoLens.Tag 4, retryPriority__field_descriptor),
           (Data.ProtoLens.Tag 5, retryHostPredicate__field_descriptor),
           (Data.ProtoLens.Tag 6, 
            hostSelectionRetryMaxAttempts__field_descriptor),
           (Data.ProtoLens.Tag 7, retriableStatusCodes__field_descriptor),
           (Data.ProtoLens.Tag 8, retryBackOff__field_descriptor),
           (Data.ProtoLens.Tag 11, rateLimitedRetryBackOff__field_descriptor),
           (Data.ProtoLens.Tag 9, retriableHeaders__field_descriptor),
           (Data.ProtoLens.Tag 10, retriableRequestHeaders__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'_unknownFields
        (\ x__ y__ -> x__ {_RetryPolicy'_unknownFields = y__})
  defMessage
    = RetryPolicy'_constructor
        {_RetryPolicy'retryOn = Data.ProtoLens.fieldDefault,
         _RetryPolicy'numRetries = Prelude.Nothing,
         _RetryPolicy'perTryTimeout = Prelude.Nothing,
         _RetryPolicy'retryPriority = Prelude.Nothing,
         _RetryPolicy'retryHostPredicate = Data.Vector.Generic.empty,
         _RetryPolicy'hostSelectionRetryMaxAttempts = Data.ProtoLens.fieldDefault,
         _RetryPolicy'retriableStatusCodes = Data.Vector.Generic.empty,
         _RetryPolicy'retryBackOff = Prelude.Nothing,
         _RetryPolicy'rateLimitedRetryBackOff = Prelude.Nothing,
         _RetryPolicy'retriableHeaders = Data.Vector.Generic.empty,
         _RetryPolicy'retriableRequestHeaders = Data.Vector.Generic.empty,
         _RetryPolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld HeaderMatcher
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld HeaderMatcher
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Unboxed.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Word.Word32
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RetryPolicy'RetryHostPredicate
                      -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy
        loop
          x
          mutable'retriableHeaders
          mutable'retriableRequestHeaders
          mutable'retriableStatusCodes
          mutable'retryHostPredicate
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'retriableHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                      mutable'retriableHeaders)
                      frozen'retriableRequestHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'retriableRequestHeaders)
                      frozen'retriableStatusCodes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                          mutable'retriableStatusCodes)
                      frozen'retryHostPredicate <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                     (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                        mutable'retryHostPredicate)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'retriableHeaders")
                              frozen'retriableHeaders
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'retriableRequestHeaders")
                                 frozen'retriableRequestHeaders
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'retriableStatusCodes")
                                    frozen'retriableStatusCodes
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'retryHostPredicate")
                                       frozen'retryHostPredicate
                                       x)))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "retry_on"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryOn") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "num_retries"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"numRetries") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "per_try_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"perTryTimeout") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_priority"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"retryPriority") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        42
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "retry_host_predicate"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'retryHostPredicate y)
                                loop
                                  x
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  v
                        48
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.fromIntegral
                                          Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "host_selection_retry_max_attempts"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostSelectionRetryMaxAttempts")
                                     y
                                     x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        56
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (Prelude.fmap
                                           Prelude.fromIntegral
                                           Data.ProtoLens.Encoding.Bytes.getVarInt)
                                        "retriable_status_codes"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'retriableStatusCodes y)
                                loop
                                  x
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  v
                                  mutable'retryHostPredicate
                        58
                          -> do y <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                        Data.ProtoLens.Encoding.Bytes.isolate
                                          (Prelude.fromIntegral len)
                                          ((let
                                              ploop qs
                                                = do packedEnd <- Data.ProtoLens.Encoding.Bytes.atEnd
                                                     if packedEnd then
                                                         Prelude.return qs
                                                     else
                                                         do !q <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                    (Prelude.fmap
                                                                       Prelude.fromIntegral
                                                                       Data.ProtoLens.Encoding.Bytes.getVarInt)
                                                                    "retriable_status_codes"
                                                            qs' <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                                     (Data.ProtoLens.Encoding.Growing.append
                                                                        qs q)
                                                            ploop qs'
                                            in ploop)
                                             mutable'retriableStatusCodes)
                                loop
                                  x
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  y
                                  mutable'retryHostPredicate
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_back_off"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"retryBackOff") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "rate_limited_retry_back_off"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"rateLimitedRetryBackOff") y x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        74
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "retriable_headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'retriableHeaders y)
                                loop
                                  x
                                  v
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        82
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "retriable_request_headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'retriableRequestHeaders y)
                                loop
                                  x
                                  mutable'retriableHeaders
                                  v
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'retriableHeaders
                                  mutable'retriableRequestHeaders
                                  mutable'retriableStatusCodes
                                  mutable'retryHostPredicate
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'retriableHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                            Data.ProtoLens.Encoding.Growing.new
              mutable'retriableRequestHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              mutable'retriableStatusCodes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                Data.ProtoLens.Encoding.Growing.new
              mutable'retryHostPredicate <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                              Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'retriableHeaders
                mutable'retriableRequestHeaders
                mutable'retriableStatusCodes
                mutable'retryHostPredicate)
          "RetryPolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"retryOn") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'numRetries") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'perTryTimeout") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'retryPriority") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage
                                   _v))
                      ((Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                            (\ _v
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                    ((Prelude..)
                                       (\ bs
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                  (Prelude.fromIntegral
                                                     (Data.ByteString.length bs)))
                                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                       Data.ProtoLens.encodeMessage
                                       _v))
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"vec'retryHostPredicate") _x))
                         ((Data.Monoid.<>)
                            (let
                               _v
                                 = Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"hostSelectionRetryMaxAttempts")
                                     _x
                             in
                               if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                   Data.Monoid.mempty
                               else
                                   (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 48)
                                     ((Prelude..)
                                        Data.ProtoLens.Encoding.Bytes.putVarInt
                                        Prelude.fromIntegral
                                        _v))
                            ((Data.Monoid.<>)
                               (let
                                  p = Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"vec'retriableStatusCodes") _x
                                in
                                  if Data.Vector.Generic.null p then
                                      Data.Monoid.mempty
                                  else
                                      (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                        ((\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                           (Data.ProtoLens.Encoding.Bytes.runBuilder
                                              (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                 ((Prelude..)
                                                    Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    Prelude.fromIntegral)
                                                 p))))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field @"maybe'retryBackOff") _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage
                                               _v))
                                  ((Data.Monoid.<>)
                                     (case
                                          Lens.Family2.view
                                            (Data.ProtoLens.Field.field
                                               @"maybe'rateLimitedRetryBackOff")
                                            _x
                                      of
                                        Prelude.Nothing -> Data.Monoid.mempty
                                        (Prelude.Just _v)
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                               ((Prelude..)
                                                  (\ bs
                                                     -> (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             (Prelude.fromIntegral
                                                                (Data.ByteString.length bs)))
                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                             bs))
                                                  Data.ProtoLens.encodeMessage
                                                  _v))
                                     ((Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                           (\ _v
                                              -> (Data.Monoid.<>)
                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                                   ((Prelude..)
                                                      (\ bs
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 (Prelude.fromIntegral
                                                                    (Data.ByteString.length bs)))
                                                              (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                 bs))
                                                      Data.ProtoLens.encodeMessage
                                                      _v))
                                           (Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"vec'retriableHeaders")
                                              _x))
                                        ((Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                              (\ _v
                                                 -> (Data.Monoid.<>)
                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                      ((Prelude..)
                                                         (\ bs
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    (Prelude.fromIntegral
                                                                       (Data.ByteString.length bs)))
                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                    bs))
                                                         Data.ProtoLens.encodeMessage
                                                         _v))
                                              (Lens.Family2.view
                                                 (Data.ProtoLens.Field.field
                                                    @"vec'retriableRequestHeaders")
                                                 _x))
                                           (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                              (Lens.Family2.view
                                                 Data.ProtoLens.unknownFields _x))))))))))))
instance Control.DeepSeq.NFData RetryPolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'retryOn x__)
                (Control.DeepSeq.deepseq
                   (_RetryPolicy'numRetries x__)
                   (Control.DeepSeq.deepseq
                      (_RetryPolicy'perTryTimeout x__)
                      (Control.DeepSeq.deepseq
                         (_RetryPolicy'retryPriority x__)
                         (Control.DeepSeq.deepseq
                            (_RetryPolicy'retryHostPredicate x__)
                            (Control.DeepSeq.deepseq
                               (_RetryPolicy'hostSelectionRetryMaxAttempts x__)
                               (Control.DeepSeq.deepseq
                                  (_RetryPolicy'retriableStatusCodes x__)
                                  (Control.DeepSeq.deepseq
                                     (_RetryPolicy'retryBackOff x__)
                                     (Control.DeepSeq.deepseq
                                        (_RetryPolicy'rateLimitedRetryBackOff x__)
                                        (Control.DeepSeq.deepseq
                                           (_RetryPolicy'retriableHeaders x__)
                                           (Control.DeepSeq.deepseq
                                              (_RetryPolicy'retriableRequestHeaders x__)
                                              ())))))))))))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.resetHeaders' @:: Lens' RetryPolicy'RateLimitedRetryBackOff [RetryPolicy'ResetHeader]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'resetHeaders' @:: Lens' RetryPolicy'RateLimitedRetryBackOff (Data.Vector.Vector RetryPolicy'ResetHeader)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxInterval' @:: Lens' RetryPolicy'RateLimitedRetryBackOff Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxInterval' @:: Lens' RetryPolicy'RateLimitedRetryBackOff (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@ -}
data RetryPolicy'RateLimitedRetryBackOff
  = RetryPolicy'RateLimitedRetryBackOff'_constructor {_RetryPolicy'RateLimitedRetryBackOff'resetHeaders :: !(Data.Vector.Vector RetryPolicy'ResetHeader),
                                                      _RetryPolicy'RateLimitedRetryBackOff'maxInterval :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                      _RetryPolicy'RateLimitedRetryBackOff'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy'RateLimitedRetryBackOff where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RetryPolicy'RateLimitedRetryBackOff "resetHeaders" [RetryPolicy'ResetHeader] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RateLimitedRetryBackOff'resetHeaders
           (\ x__ y__
              -> x__ {_RetryPolicy'RateLimitedRetryBackOff'resetHeaders = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RetryPolicy'RateLimitedRetryBackOff "vec'resetHeaders" (Data.Vector.Vector RetryPolicy'ResetHeader) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RateLimitedRetryBackOff'resetHeaders
           (\ x__ y__
              -> x__ {_RetryPolicy'RateLimitedRetryBackOff'resetHeaders = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RateLimitedRetryBackOff "maxInterval" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RateLimitedRetryBackOff'maxInterval
           (\ x__ y__
              -> x__ {_RetryPolicy'RateLimitedRetryBackOff'maxInterval = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy'RateLimitedRetryBackOff "maybe'maxInterval" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RateLimitedRetryBackOff'maxInterval
           (\ x__ y__
              -> x__ {_RetryPolicy'RateLimitedRetryBackOff'maxInterval = y__}))
        Prelude.id
instance Data.ProtoLens.Message RetryPolicy'RateLimitedRetryBackOff where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RetryPolicy.RateLimitedRetryBackOff"
  packedMessageDescriptor _
    = "\n\
      \\ETBRateLimitedRetryBackOff\DC2]\n\
      \\rreset_headers\CAN\SOH \ETX(\v2..envoy.config.route.v3.RetryPolicy.ResetHeaderR\fresetHeadersB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2F\n\
      \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        resetHeaders__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "reset_headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'ResetHeader)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"resetHeaders")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RateLimitedRetryBackOff
        maxInterval__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_interval"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxInterval")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RateLimitedRetryBackOff
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, resetHeaders__field_descriptor),
           (Data.ProtoLens.Tag 2, maxInterval__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'RateLimitedRetryBackOff'_unknownFields
        (\ x__ y__
           -> x__ {_RetryPolicy'RateLimitedRetryBackOff'_unknownFields = y__})
  defMessage
    = RetryPolicy'RateLimitedRetryBackOff'_constructor
        {_RetryPolicy'RateLimitedRetryBackOff'resetHeaders = Data.Vector.Generic.empty,
         _RetryPolicy'RateLimitedRetryBackOff'maxInterval = Prelude.Nothing,
         _RetryPolicy'RateLimitedRetryBackOff'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy'RateLimitedRetryBackOff
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RetryPolicy'ResetHeader
             -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy'RateLimitedRetryBackOff
        loop x mutable'resetHeaders
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'resetHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                  mutable'resetHeaders)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'resetHeaders")
                              frozen'resetHeaders
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "reset_headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'resetHeaders y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_interval"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"maxInterval") y x)
                                  mutable'resetHeaders
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'resetHeaders
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'resetHeaders <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                        Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'resetHeaders)
          "RateLimitedRetryBackOff"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage
                           _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'resetHeaders") _x))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'maxInterval") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RetryPolicy'RateLimitedRetryBackOff where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'RateLimitedRetryBackOff'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'RateLimitedRetryBackOff'resetHeaders x__)
                (Control.DeepSeq.deepseq
                   (_RetryPolicy'RateLimitedRetryBackOff'maxInterval x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' RetryPolicy'ResetHeader Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.format' @:: Lens' RetryPolicy'ResetHeader RetryPolicy'ResetHeaderFormat@ -}
data RetryPolicy'ResetHeader
  = RetryPolicy'ResetHeader'_constructor {_RetryPolicy'ResetHeader'name :: !Data.Text.Text,
                                          _RetryPolicy'ResetHeader'format :: !RetryPolicy'ResetHeaderFormat,
                                          _RetryPolicy'ResetHeader'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy'ResetHeader where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RetryPolicy'ResetHeader "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'ResetHeader'name
           (\ x__ y__ -> x__ {_RetryPolicy'ResetHeader'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'ResetHeader "format" RetryPolicy'ResetHeaderFormat where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'ResetHeader'format
           (\ x__ y__ -> x__ {_RetryPolicy'ResetHeader'format = y__}))
        Prelude.id
instance Data.ProtoLens.Message RetryPolicy'ResetHeader where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RetryPolicy.ResetHeader"
  packedMessageDescriptor _
    = "\n\
      \\vResetHeader\DC2!\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2V\n\
      \\ACKformat\CAN\STX \SOH(\SO24.envoy.config.route.v3.RetryPolicy.ResetHeaderFormatR\ACKformatB\b\250B\ENQ\130\SOH\STX\DLE\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'ResetHeader
        format__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "format"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy'ResetHeaderFormat)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"format")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'ResetHeader
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 2, format__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'ResetHeader'_unknownFields
        (\ x__ y__ -> x__ {_RetryPolicy'ResetHeader'_unknownFields = y__})
  defMessage
    = RetryPolicy'ResetHeader'_constructor
        {_RetryPolicy'ResetHeader'name = Data.ProtoLens.fieldDefault,
         _RetryPolicy'ResetHeader'format = Data.ProtoLens.fieldDefault,
         _RetryPolicy'ResetHeader'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy'ResetHeader
          -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy'ResetHeader
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "format"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"format") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ResetHeader"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"format") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            ((Prelude..)
                               Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                            Prelude.fromEnum
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RetryPolicy'ResetHeader where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'ResetHeader'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'ResetHeader'name x__)
                (Control.DeepSeq.deepseq (_RetryPolicy'ResetHeader'format x__) ()))
newtype RetryPolicy'ResetHeaderFormat'UnrecognizedValue
  = RetryPolicy'ResetHeaderFormat'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data RetryPolicy'ResetHeaderFormat
  = RetryPolicy'SECONDS |
    RetryPolicy'UNIX_TIMESTAMP |
    RetryPolicy'ResetHeaderFormat'Unrecognized !RetryPolicy'ResetHeaderFormat'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum RetryPolicy'ResetHeaderFormat where
  maybeToEnum 0 = Prelude.Just RetryPolicy'SECONDS
  maybeToEnum 1 = Prelude.Just RetryPolicy'UNIX_TIMESTAMP
  maybeToEnum k
    = Prelude.Just
        (RetryPolicy'ResetHeaderFormat'Unrecognized
           (RetryPolicy'ResetHeaderFormat'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum RetryPolicy'SECONDS = "SECONDS"
  showEnum RetryPolicy'UNIX_TIMESTAMP = "UNIX_TIMESTAMP"
  showEnum
    (RetryPolicy'ResetHeaderFormat'Unrecognized (RetryPolicy'ResetHeaderFormat'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "SECONDS" = Prelude.Just RetryPolicy'SECONDS
    | (Prelude.==) k "UNIX_TIMESTAMP"
    = Prelude.Just RetryPolicy'UNIX_TIMESTAMP
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded RetryPolicy'ResetHeaderFormat where
  minBound = RetryPolicy'SECONDS
  maxBound = RetryPolicy'UNIX_TIMESTAMP
instance Prelude.Enum RetryPolicy'ResetHeaderFormat where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum ResetHeaderFormat: "
              (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum RetryPolicy'SECONDS = 0
  fromEnum RetryPolicy'UNIX_TIMESTAMP = 1
  fromEnum
    (RetryPolicy'ResetHeaderFormat'Unrecognized (RetryPolicy'ResetHeaderFormat'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ RetryPolicy'UNIX_TIMESTAMP
    = Prelude.error
        "RetryPolicy'ResetHeaderFormat.succ: bad argument RetryPolicy'UNIX_TIMESTAMP. This value would be out of bounds."
  succ RetryPolicy'SECONDS = RetryPolicy'UNIX_TIMESTAMP
  succ (RetryPolicy'ResetHeaderFormat'Unrecognized _)
    = Prelude.error
        "RetryPolicy'ResetHeaderFormat.succ: bad argument: unrecognized value"
  pred RetryPolicy'SECONDS
    = Prelude.error
        "RetryPolicy'ResetHeaderFormat.pred: bad argument RetryPolicy'SECONDS. This value would be out of bounds."
  pred RetryPolicy'UNIX_TIMESTAMP = RetryPolicy'SECONDS
  pred (RetryPolicy'ResetHeaderFormat'Unrecognized _)
    = Prelude.error
        "RetryPolicy'ResetHeaderFormat.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault RetryPolicy'ResetHeaderFormat where
  fieldDefault = RetryPolicy'SECONDS
instance Control.DeepSeq.NFData RetryPolicy'ResetHeaderFormat where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.baseInterval' @:: Lens' RetryPolicy'RetryBackOff Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'baseInterval' @:: Lens' RetryPolicy'RetryBackOff (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxInterval' @:: Lens' RetryPolicy'RetryBackOff Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxInterval' @:: Lens' RetryPolicy'RetryBackOff (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@ -}
data RetryPolicy'RetryBackOff
  = RetryPolicy'RetryBackOff'_constructor {_RetryPolicy'RetryBackOff'baseInterval :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                           _RetryPolicy'RetryBackOff'maxInterval :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                           _RetryPolicy'RetryBackOff'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy'RetryBackOff where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryBackOff "baseInterval" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryBackOff'baseInterval
           (\ x__ y__ -> x__ {_RetryPolicy'RetryBackOff'baseInterval = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryBackOff "maybe'baseInterval" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryBackOff'baseInterval
           (\ x__ y__ -> x__ {_RetryPolicy'RetryBackOff'baseInterval = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryBackOff "maxInterval" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryBackOff'maxInterval
           (\ x__ y__ -> x__ {_RetryPolicy'RetryBackOff'maxInterval = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryBackOff "maybe'maxInterval" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryBackOff'maxInterval
           (\ x__ y__ -> x__ {_RetryPolicy'RetryBackOff'maxInterval = y__}))
        Prelude.id
instance Data.ProtoLens.Message RetryPolicy'RetryBackOff where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RetryPolicy.RetryBackOff"
  packedMessageDescriptor _
    = "\n\
      \\fRetryBackOff\DC2J\n\
      \\rbase_interval\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\fbaseIntervalB\n\
      \\250B\a\170\SOH\EOT\b\SOH*\NUL\DC2F\n\
      \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL:2\154\197\136\RS-\n\
      \+envoy.api.v2.route.RetryPolicy.RetryBackOff"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        baseInterval__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "base_interval"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'baseInterval")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryBackOff
        maxInterval__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_interval"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxInterval")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryBackOff
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, baseInterval__field_descriptor),
           (Data.ProtoLens.Tag 2, maxInterval__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'RetryBackOff'_unknownFields
        (\ x__ y__ -> x__ {_RetryPolicy'RetryBackOff'_unknownFields = y__})
  defMessage
    = RetryPolicy'RetryBackOff'_constructor
        {_RetryPolicy'RetryBackOff'baseInterval = Prelude.Nothing,
         _RetryPolicy'RetryBackOff'maxInterval = Prelude.Nothing,
         _RetryPolicy'RetryBackOff'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy'RetryBackOff
          -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy'RetryBackOff
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "base_interval"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"baseInterval") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_interval"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"maxInterval") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RetryBackOff"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'baseInterval") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'maxInterval") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RetryPolicy'RetryBackOff where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'RetryBackOff'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'RetryBackOff'baseInterval x__)
                (Control.DeepSeq.deepseq
                   (_RetryPolicy'RetryBackOff'maxInterval x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' RetryPolicy'RetryHostPredicate Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'configType' @:: Lens' RetryPolicy'RetryHostPredicate (Prelude.Maybe RetryPolicy'RetryHostPredicate'ConfigType)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'typedConfig' @:: Lens' RetryPolicy'RetryHostPredicate (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.typedConfig' @:: Lens' RetryPolicy'RetryHostPredicate Proto.Google.Protobuf.Any.Any@ -}
data RetryPolicy'RetryHostPredicate
  = RetryPolicy'RetryHostPredicate'_constructor {_RetryPolicy'RetryHostPredicate'name :: !Data.Text.Text,
                                                 _RetryPolicy'RetryHostPredicate'configType :: !(Prelude.Maybe RetryPolicy'RetryHostPredicate'ConfigType),
                                                 _RetryPolicy'RetryHostPredicate'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy'RetryHostPredicate where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RetryPolicy'RetryHostPredicate'ConfigType
  = RetryPolicy'RetryHostPredicate'TypedConfig !Proto.Google.Protobuf.Any.Any
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryHostPredicate "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryHostPredicate'name
           (\ x__ y__ -> x__ {_RetryPolicy'RetryHostPredicate'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryHostPredicate "maybe'configType" (Prelude.Maybe RetryPolicy'RetryHostPredicate'ConfigType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryHostPredicate'configType
           (\ x__ y__
              -> x__ {_RetryPolicy'RetryHostPredicate'configType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryHostPredicate "maybe'typedConfig" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryHostPredicate'configType
           (\ x__ y__
              -> x__ {_RetryPolicy'RetryHostPredicate'configType = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RetryPolicy'RetryHostPredicate'TypedConfig x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap RetryPolicy'RetryHostPredicate'TypedConfig y__))
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryHostPredicate "typedConfig" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryHostPredicate'configType
           (\ x__ y__
              -> x__ {_RetryPolicy'RetryHostPredicate'configType = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RetryPolicy'RetryHostPredicate'TypedConfig x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap RetryPolicy'RetryHostPredicate'TypedConfig y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RetryPolicy'RetryHostPredicate where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RetryPolicy.RetryHostPredicate"
  packedMessageDescriptor _
    = "\n\
      \\DC2RetryHostPredicate\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
      \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
      \\vconfig_type:8\154\197\136\RS3\n\
      \1envoy.api.v2.route.RetryPolicy.RetryHostPredicateJ\EOT\b\STX\DLE\ETXR\ACKconfig"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryHostPredicate
        typedConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "typed_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'typedConfig")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryHostPredicate
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 3, typedConfig__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'RetryHostPredicate'_unknownFields
        (\ x__ y__
           -> x__ {_RetryPolicy'RetryHostPredicate'_unknownFields = y__})
  defMessage
    = RetryPolicy'RetryHostPredicate'_constructor
        {_RetryPolicy'RetryHostPredicate'name = Data.ProtoLens.fieldDefault,
         _RetryPolicy'RetryHostPredicate'configType = Prelude.Nothing,
         _RetryPolicy'RetryHostPredicate'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy'RetryHostPredicate
          -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy'RetryHostPredicate
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "typed_config"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"typedConfig") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RetryHostPredicate"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'configType") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just (RetryPolicy'RetryHostPredicate'TypedConfig v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RetryPolicy'RetryHostPredicate where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'RetryHostPredicate'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'RetryHostPredicate'name x__)
                (Control.DeepSeq.deepseq
                   (_RetryPolicy'RetryHostPredicate'configType x__) ()))
instance Control.DeepSeq.NFData RetryPolicy'RetryHostPredicate'ConfigType where
  rnf (RetryPolicy'RetryHostPredicate'TypedConfig x__)
    = Control.DeepSeq.rnf x__
_RetryPolicy'RetryHostPredicate'TypedConfig ::
  Data.ProtoLens.Prism.Prism' RetryPolicy'RetryHostPredicate'ConfigType Proto.Google.Protobuf.Any.Any
_RetryPolicy'RetryHostPredicate'TypedConfig
  = Data.ProtoLens.Prism.prism'
      RetryPolicy'RetryHostPredicate'TypedConfig
      (\ p__
         -> case p__ of {
              (RetryPolicy'RetryHostPredicate'TypedConfig p__val)
                -> Prelude.Just p__val })
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' RetryPolicy'RetryPriority Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'configType' @:: Lens' RetryPolicy'RetryPriority (Prelude.Maybe RetryPolicy'RetryPriority'ConfigType)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'typedConfig' @:: Lens' RetryPolicy'RetryPriority (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.typedConfig' @:: Lens' RetryPolicy'RetryPriority Proto.Google.Protobuf.Any.Any@ -}
data RetryPolicy'RetryPriority
  = RetryPolicy'RetryPriority'_constructor {_RetryPolicy'RetryPriority'name :: !Data.Text.Text,
                                            _RetryPolicy'RetryPriority'configType :: !(Prelude.Maybe RetryPolicy'RetryPriority'ConfigType),
                                            _RetryPolicy'RetryPriority'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RetryPolicy'RetryPriority where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RetryPolicy'RetryPriority'ConfigType
  = RetryPolicy'RetryPriority'TypedConfig !Proto.Google.Protobuf.Any.Any
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryPriority "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryPriority'name
           (\ x__ y__ -> x__ {_RetryPolicy'RetryPriority'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryPriority "maybe'configType" (Prelude.Maybe RetryPolicy'RetryPriority'ConfigType) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryPriority'configType
           (\ x__ y__ -> x__ {_RetryPolicy'RetryPriority'configType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryPriority "maybe'typedConfig" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryPriority'configType
           (\ x__ y__ -> x__ {_RetryPolicy'RetryPriority'configType = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RetryPolicy'RetryPriority'TypedConfig x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap RetryPolicy'RetryPriority'TypedConfig y__))
instance Data.ProtoLens.Field.HasField RetryPolicy'RetryPriority "typedConfig" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RetryPolicy'RetryPriority'configType
           (\ x__ y__ -> x__ {_RetryPolicy'RetryPriority'configType = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RetryPolicy'RetryPriority'TypedConfig x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap RetryPolicy'RetryPriority'TypedConfig y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RetryPolicy'RetryPriority where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RetryPolicy.RetryPriority"
  packedMessageDescriptor _
    = "\n\
      \\rRetryPriority\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
      \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
      \\vconfig_type:3\154\197\136\RS.\n\
      \,envoy.api.v2.route.RetryPolicy.RetryPriorityJ\EOT\b\STX\DLE\ETXR\ACKconfig"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryPriority
        typedConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "typed_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'typedConfig")) ::
              Data.ProtoLens.FieldDescriptor RetryPolicy'RetryPriority
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 3, typedConfig__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RetryPolicy'RetryPriority'_unknownFields
        (\ x__ y__
           -> x__ {_RetryPolicy'RetryPriority'_unknownFields = y__})
  defMessage
    = RetryPolicy'RetryPriority'_constructor
        {_RetryPolicy'RetryPriority'name = Data.ProtoLens.fieldDefault,
         _RetryPolicy'RetryPriority'configType = Prelude.Nothing,
         _RetryPolicy'RetryPriority'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RetryPolicy'RetryPriority
          -> Data.ProtoLens.Encoding.Bytes.Parser RetryPolicy'RetryPriority
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "typed_config"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"typedConfig") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RetryPriority"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'configType") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just (RetryPolicy'RetryPriority'TypedConfig v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RetryPolicy'RetryPriority where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RetryPolicy'RetryPriority'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RetryPolicy'RetryPriority'name x__)
                (Control.DeepSeq.deepseq
                   (_RetryPolicy'RetryPriority'configType x__) ()))
instance Control.DeepSeq.NFData RetryPolicy'RetryPriority'ConfigType where
  rnf (RetryPolicy'RetryPriority'TypedConfig x__)
    = Control.DeepSeq.rnf x__
_RetryPolicy'RetryPriority'TypedConfig ::
  Data.ProtoLens.Prism.Prism' RetryPolicy'RetryPriority'ConfigType Proto.Google.Protobuf.Any.Any
_RetryPolicy'RetryPriority'TypedConfig
  = Data.ProtoLens.Prism.prism'
      RetryPolicy'RetryPriority'TypedConfig
      (\ p__
         -> case p__ of {
              (RetryPolicy'RetryPriority'TypedConfig p__val)
                -> Prelude.Just p__val })
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' Route Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.match' @:: Lens' Route RouteMatch@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'match' @:: Lens' Route (Prelude.Maybe RouteMatch)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadata' @:: Lens' Route Proto.Envoy.Config.Core.V3.Base.Metadata@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadata' @:: Lens' Route (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.decorator' @:: Lens' Route Decorator@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'decorator' @:: Lens' Route (Prelude.Maybe Decorator)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.typedPerFilterConfig' @:: Lens' Route (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToAdd' @:: Lens' Route [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToAdd' @:: Lens' Route (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToRemove' @:: Lens' Route [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToRemove' @:: Lens' Route (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToAdd' @:: Lens' Route [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToAdd' @:: Lens' Route (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToRemove' @:: Lens' Route [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToRemove' @:: Lens' Route (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.tracing' @:: Lens' Route Tracing@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'tracing' @:: Lens' Route (Prelude.Maybe Tracing)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.perRequestBufferLimitBytes' @:: Lens' Route Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'perRequestBufferLimitBytes' @:: Lens' Route (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'action' @:: Lens' Route (Prelude.Maybe Route'Action)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'route' @:: Lens' Route (Prelude.Maybe RouteAction)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.route' @:: Lens' Route RouteAction@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'redirect' @:: Lens' Route (Prelude.Maybe RedirectAction)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.redirect' @:: Lens' Route RedirectAction@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'directResponse' @:: Lens' Route (Prelude.Maybe DirectResponseAction)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.directResponse' @:: Lens' Route DirectResponseAction@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'filterAction' @:: Lens' Route (Prelude.Maybe FilterAction)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.filterAction' @:: Lens' Route FilterAction@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'nonForwardingAction' @:: Lens' Route (Prelude.Maybe NonForwardingAction)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.nonForwardingAction' @:: Lens' Route NonForwardingAction@ -}
data Route
  = Route'_constructor {_Route'name :: !Data.Text.Text,
                        _Route'match :: !(Prelude.Maybe RouteMatch),
                        _Route'metadata :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata),
                        _Route'decorator :: !(Prelude.Maybe Decorator),
                        _Route'typedPerFilterConfig :: !(Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any),
                        _Route'requestHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                        _Route'requestHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                        _Route'responseHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                        _Route'responseHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                        _Route'tracing :: !(Prelude.Maybe Tracing),
                        _Route'perRequestBufferLimitBytes :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                        _Route'action :: !(Prelude.Maybe Route'Action),
                        _Route'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show Route where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data Route'Action
  = Route'Route !RouteAction |
    Route'Redirect !RedirectAction |
    Route'DirectResponse !DirectResponseAction |
    Route'FilterAction !FilterAction |
    Route'NonForwardingAction !NonForwardingAction
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField Route "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'name (\ x__ y__ -> x__ {_Route'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "match" RouteMatch where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'match (\ x__ y__ -> x__ {_Route'match = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route "maybe'match" (Prelude.Maybe RouteMatch) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'match (\ x__ y__ -> x__ {_Route'match = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "metadata" Proto.Envoy.Config.Core.V3.Base.Metadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'metadata (\ x__ y__ -> x__ {_Route'metadata = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route "maybe'metadata" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'metadata (\ x__ y__ -> x__ {_Route'metadata = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "decorator" Decorator where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'decorator (\ x__ y__ -> x__ {_Route'decorator = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route "maybe'decorator" (Prelude.Maybe Decorator) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'decorator (\ x__ y__ -> x__ {_Route'decorator = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "typedPerFilterConfig" (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'typedPerFilterConfig
           (\ x__ y__ -> x__ {_Route'typedPerFilterConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "requestHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'requestHeadersToAdd
           (\ x__ y__ -> x__ {_Route'requestHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField Route "vec'requestHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'requestHeadersToAdd
           (\ x__ y__ -> x__ {_Route'requestHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "requestHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'requestHeadersToRemove
           (\ x__ y__ -> x__ {_Route'requestHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField Route "vec'requestHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'requestHeadersToRemove
           (\ x__ y__ -> x__ {_Route'requestHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "responseHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'responseHeadersToAdd
           (\ x__ y__ -> x__ {_Route'responseHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField Route "vec'responseHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'responseHeadersToAdd
           (\ x__ y__ -> x__ {_Route'responseHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "responseHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'responseHeadersToRemove
           (\ x__ y__ -> x__ {_Route'responseHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField Route "vec'responseHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'responseHeadersToRemove
           (\ x__ y__ -> x__ {_Route'responseHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "tracing" Tracing where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'tracing (\ x__ y__ -> x__ {_Route'tracing = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route "maybe'tracing" (Prelude.Maybe Tracing) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'tracing (\ x__ y__ -> x__ {_Route'tracing = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "perRequestBufferLimitBytes" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'perRequestBufferLimitBytes
           (\ x__ y__ -> x__ {_Route'perRequestBufferLimitBytes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route "maybe'perRequestBufferLimitBytes" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'perRequestBufferLimitBytes
           (\ x__ y__ -> x__ {_Route'perRequestBufferLimitBytes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "maybe'action" (Prelude.Maybe Route'Action) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route "maybe'route" (Prelude.Maybe RouteAction) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (Route'Route x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap Route'Route y__))
instance Data.ProtoLens.Field.HasField Route "route" RouteAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (Route'Route x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap Route'Route y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField Route "maybe'redirect" (Prelude.Maybe RedirectAction) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (Route'Redirect x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap Route'Redirect y__))
instance Data.ProtoLens.Field.HasField Route "redirect" RedirectAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (Route'Redirect x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap Route'Redirect y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField Route "maybe'directResponse" (Prelude.Maybe DirectResponseAction) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (Route'DirectResponse x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap Route'DirectResponse y__))
instance Data.ProtoLens.Field.HasField Route "directResponse" DirectResponseAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (Route'DirectResponse x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap Route'DirectResponse y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField Route "maybe'filterAction" (Prelude.Maybe FilterAction) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (Route'FilterAction x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap Route'FilterAction y__))
instance Data.ProtoLens.Field.HasField Route "filterAction" FilterAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (Route'FilterAction x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap Route'FilterAction y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField Route "maybe'nonForwardingAction" (Prelude.Maybe NonForwardingAction) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (Route'NonForwardingAction x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap Route'NonForwardingAction y__))
instance Data.ProtoLens.Field.HasField Route "nonForwardingAction" NonForwardingAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'action (\ x__ y__ -> x__ {_Route'action = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (Route'NonForwardingAction x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap Route'NonForwardingAction y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message Route where
  messageName _ = Data.Text.pack "envoy.config.route.v3.Route"
  packedMessageDescriptor _
    = "\n\
      \\ENQRoute\DC2\DC2\n\
      \\EOTname\CAN\SO \SOH(\tR\EOTname\DC2A\n\
      \\ENQmatch\CAN\SOH \SOH(\v2!.envoy.config.route.v3.RouteMatchR\ENQmatchB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2:\n\
      \\ENQroute\CAN\STX \SOH(\v2\".envoy.config.route.v3.RouteActionH\NULR\ENQroute\DC2C\n\
      \\bredirect\CAN\ETX \SOH(\v2%.envoy.config.route.v3.RedirectActionH\NULR\bredirect\DC2V\n\
      \\SIdirect_response\CAN\a \SOH(\v2+.envoy.config.route.v3.DirectResponseActionH\NULR\SOdirectResponse\DC2J\n\
      \\rfilter_action\CAN\DC1 \SOH(\v2#.envoy.config.route.v3.FilterActionH\NULR\ffilterAction\DC2`\n\
      \\NAKnon_forwarding_action\CAN\DC2 \SOH(\v2*.envoy.config.route.v3.NonForwardingActionH\NULR\DC3nonForwardingAction\DC2:\n\
      \\bmetadata\CAN\EOT \SOH(\v2\RS.envoy.config.core.v3.MetadataR\bmetadata\DC2>\n\
      \\tdecorator\CAN\ENQ \SOH(\v2 .envoy.config.route.v3.DecoratorR\tdecorator\DC2m\n\
      \\ETBtyped_per_filter_config\CAN\r \ETX(\v26.envoy.config.route.v3.Route.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2g\n\
      \\SYNrequest_headers_to_add\CAN\t \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
      \\EMrequest_headers_to_remove\CAN\f \ETX(\tR\SYNrequestHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2i\n\
      \\ETBresponse_headers_to_add\CAN\n\
      \ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2O\n\
      \\SUBresponse_headers_to_remove\CAN\v \ETX(\tR\ETBresponseHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC28\n\
      \\atracing\CAN\SI \SOH(\v2\RS.envoy.config.route.v3.TracingR\atracing\DC2`\n\
      \\RSper_request_buffer_limit_bytes\CAN\DLE \SOH(\v2\FS.google.protobuf.UInt32ValueR\SUBperRequestBufferLimitBytes\SUB]\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOHB\r\n\
      \\ACKaction\DC2\ETX\248B\SOH:\US\154\197\136\RS\SUB\n\
      \\CANenvoy.api.v2.route.RouteJ\EOT\b\ACK\DLE\aJ\EOT\b\b\DLE\tR\DC1per_filter_config"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor Route
        match__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteMatch)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'match")) ::
              Data.ProtoLens.FieldDescriptor Route
        metadata__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.Metadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadata")) ::
              Data.ProtoLens.FieldDescriptor Route
        decorator__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "decorator"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Decorator)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'decorator")) ::
              Data.ProtoLens.FieldDescriptor Route
        typedPerFilterConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "typed_per_filter_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Route'TypedPerFilterConfigEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"typedPerFilterConfig")) ::
              Data.ProtoLens.FieldDescriptor Route
        requestHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor Route
        requestHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor Route
        responseHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor Route
        responseHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor Route
        tracing__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "tracing"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Tracing)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'tracing")) ::
              Data.ProtoLens.FieldDescriptor Route
        perRequestBufferLimitBytes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "per_request_buffer_limit_bytes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'perRequestBufferLimitBytes")) ::
              Data.ProtoLens.FieldDescriptor Route
        route__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "route"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'route")) ::
              Data.ProtoLens.FieldDescriptor Route
        redirect__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "redirect"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RedirectAction)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'redirect")) ::
              Data.ProtoLens.FieldDescriptor Route
        directResponse__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "direct_response"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor DirectResponseAction)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'directResponse")) ::
              Data.ProtoLens.FieldDescriptor Route
        filterAction__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "filter_action"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor FilterAction)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'filterAction")) ::
              Data.ProtoLens.FieldDescriptor Route
        nonForwardingAction__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "non_forwarding_action"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor NonForwardingAction)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'nonForwardingAction")) ::
              Data.ProtoLens.FieldDescriptor Route
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 14, name__field_descriptor),
           (Data.ProtoLens.Tag 1, match__field_descriptor),
           (Data.ProtoLens.Tag 4, metadata__field_descriptor),
           (Data.ProtoLens.Tag 5, decorator__field_descriptor),
           (Data.ProtoLens.Tag 13, typedPerFilterConfig__field_descriptor),
           (Data.ProtoLens.Tag 9, requestHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 12, requestHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 10, responseHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 11, responseHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 15, tracing__field_descriptor),
           (Data.ProtoLens.Tag 16, 
            perRequestBufferLimitBytes__field_descriptor),
           (Data.ProtoLens.Tag 2, route__field_descriptor),
           (Data.ProtoLens.Tag 3, redirect__field_descriptor),
           (Data.ProtoLens.Tag 7, directResponse__field_descriptor),
           (Data.ProtoLens.Tag 17, filterAction__field_descriptor),
           (Data.ProtoLens.Tag 18, nonForwardingAction__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _Route'_unknownFields
        (\ x__ y__ -> x__ {_Route'_unknownFields = y__})
  defMessage
    = Route'_constructor
        {_Route'name = Data.ProtoLens.fieldDefault,
         _Route'match = Prelude.Nothing, _Route'metadata = Prelude.Nothing,
         _Route'decorator = Prelude.Nothing,
         _Route'typedPerFilterConfig = Data.Map.empty,
         _Route'requestHeadersToAdd = Data.Vector.Generic.empty,
         _Route'requestHeadersToRemove = Data.Vector.Generic.empty,
         _Route'responseHeadersToAdd = Data.Vector.Generic.empty,
         _Route'responseHeadersToRemove = Data.Vector.Generic.empty,
         _Route'tracing = Prelude.Nothing,
         _Route'perRequestBufferLimitBytes = Prelude.Nothing,
         _Route'action = Prelude.Nothing, _Route'_unknownFields = []}
  parseMessage
    = let
        loop ::
          Route
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                      -> Data.ProtoLens.Encoding.Bytes.Parser Route
        loop
          x
          mutable'requestHeadersToAdd
          mutable'requestHeadersToRemove
          mutable'responseHeadersToAdd
          mutable'responseHeadersToRemove
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                      (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                         mutable'requestHeadersToAdd)
                      frozen'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                            mutable'requestHeadersToRemove)
                      frozen'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                          mutable'responseHeadersToAdd)
                      frozen'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'responseHeadersToRemove)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd")
                              frozen'requestHeadersToAdd
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove")
                                 frozen'requestHeadersToRemove
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd")
                                    frozen'responseHeadersToAdd
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'responseHeadersToRemove")
                                       frozen'responseHeadersToRemove
                                       x)))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "match"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"match") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"metadata") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "decorator"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"decorator") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        106
                          -> do !(entry :: Route'TypedPerFilterConfigEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                 (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                     Data.ProtoLens.Encoding.Bytes.isolate
                                                                                       (Prelude.fromIntegral
                                                                                          len)
                                                                                       Data.ProtoLens.parseMessage)
                                                                                 "typed_per_filter_config"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"typedPerFilterConfig")
                                        (\ !t -> Data.Map.insert key value t)
                                        x)
                                     mutable'requestHeadersToAdd
                                     mutable'requestHeadersToRemove
                                     mutable'responseHeadersToAdd
                                     mutable'responseHeadersToRemove)
                        74
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "request_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToAdd y)
                                loop
                                  x
                                  v
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        98
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "request_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToRemove y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  v
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        82
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "response_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToAdd y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  v
                                  mutable'responseHeadersToRemove
                        90
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "response_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToRemove y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  v
                        122
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "tracing"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"tracing") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "per_request_buffer_limit_bytes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"perRequestBufferLimitBytes") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "route"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"route") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "redirect"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"redirect") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "direct_response"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"directResponse") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "filter_action"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"filterAction") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        146
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "non_forwarding_action"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"nonForwardingAction") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               Data.ProtoLens.Encoding.Growing.new
              mutable'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'requestHeadersToAdd
                mutable'requestHeadersToRemove
                mutable'responseHeadersToAdd
                mutable'responseHeadersToRemove)
          "Route"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 114)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'match") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'metadata") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'decorator") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage
                                   _v))
                      ((Data.Monoid.<>)
                         (Data.Monoid.mconcat
                            (Prelude.map
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 106)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage
                                          (Lens.Family2.set
                                             (Data.ProtoLens.Field.field @"key")
                                             (Prelude.fst _v)
                                             (Lens.Family2.set
                                                (Data.ProtoLens.Field.field @"value")
                                                (Prelude.snd _v)
                                                (Data.ProtoLens.defMessage ::
                                                   Route'TypedPerFilterConfigEntry)))))
                               (Data.Map.toList
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"typedPerFilterConfig") _x))))
                         ((Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage
                                          _v))
                               (Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd") _x))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.Text.Encoding.encodeUtf8
                                             _v))
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove") _x))
                               ((Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                     (\ _v
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                             ((Prelude..)
                                                (\ bs
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           (Prelude.fromIntegral
                                                              (Data.ByteString.length bs)))
                                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                                Data.ProtoLens.encodeMessage
                                                _v))
                                     (Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd")
                                        _x))
                                  ((Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.Text.Encoding.encodeUtf8
                                                   _v))
                                        (Lens.Family2.view
                                           (Data.ProtoLens.Field.field
                                              @"vec'responseHeadersToRemove")
                                           _x))
                                     ((Data.Monoid.<>)
                                        (case
                                             Lens.Family2.view
                                               (Data.ProtoLens.Field.field @"maybe'tracing") _x
                                         of
                                           Prelude.Nothing -> Data.Monoid.mempty
                                           (Prelude.Just _v)
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt 122)
                                                  ((Prelude..)
                                                     (\ bs
                                                        -> (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (Prelude.fromIntegral
                                                                   (Data.ByteString.length bs)))
                                                             (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                bs))
                                                     Data.ProtoLens.encodeMessage
                                                     _v))
                                        ((Data.Monoid.<>)
                                           (case
                                                Lens.Family2.view
                                                  (Data.ProtoLens.Field.field
                                                     @"maybe'perRequestBufferLimitBytes")
                                                  _x
                                            of
                                              Prelude.Nothing -> Data.Monoid.mempty
                                              (Prelude.Just _v)
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 130)
                                                     ((Prelude..)
                                                        (\ bs
                                                           -> (Data.Monoid.<>)
                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                   (Prelude.fromIntegral
                                                                      (Data.ByteString.length bs)))
                                                                (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                   bs))
                                                        Data.ProtoLens.encodeMessage
                                                        _v))
                                           ((Data.Monoid.<>)
                                              (case
                                                   Lens.Family2.view
                                                     (Data.ProtoLens.Field.field @"maybe'action") _x
                                               of
                                                 Prelude.Nothing -> Data.Monoid.mempty
                                                 (Prelude.Just (Route'Route v))
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           v)
                                                 (Prelude.Just (Route'Redirect v))
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           v)
                                                 (Prelude.Just (Route'DirectResponse v))
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           v)
                                                 (Prelude.Just (Route'FilterAction v))
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           138)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           v)
                                                 (Prelude.Just (Route'NonForwardingAction v))
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           146)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           v))
                                              (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                 (Lens.Family2.view
                                                    Data.ProtoLens.unknownFields _x)))))))))))))
instance Control.DeepSeq.NFData Route where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_Route'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_Route'name x__)
                (Control.DeepSeq.deepseq
                   (_Route'match x__)
                   (Control.DeepSeq.deepseq
                      (_Route'metadata x__)
                      (Control.DeepSeq.deepseq
                         (_Route'decorator x__)
                         (Control.DeepSeq.deepseq
                            (_Route'typedPerFilterConfig x__)
                            (Control.DeepSeq.deepseq
                               (_Route'requestHeadersToAdd x__)
                               (Control.DeepSeq.deepseq
                                  (_Route'requestHeadersToRemove x__)
                                  (Control.DeepSeq.deepseq
                                     (_Route'responseHeadersToAdd x__)
                                     (Control.DeepSeq.deepseq
                                        (_Route'responseHeadersToRemove x__)
                                        (Control.DeepSeq.deepseq
                                           (_Route'tracing x__)
                                           (Control.DeepSeq.deepseq
                                              (_Route'perRequestBufferLimitBytes x__)
                                              (Control.DeepSeq.deepseq
                                                 (_Route'action x__) ()))))))))))))
instance Control.DeepSeq.NFData Route'Action where
  rnf (Route'Route x__) = Control.DeepSeq.rnf x__
  rnf (Route'Redirect x__) = Control.DeepSeq.rnf x__
  rnf (Route'DirectResponse x__) = Control.DeepSeq.rnf x__
  rnf (Route'FilterAction x__) = Control.DeepSeq.rnf x__
  rnf (Route'NonForwardingAction x__) = Control.DeepSeq.rnf x__
_Route'Route ::
  Data.ProtoLens.Prism.Prism' Route'Action RouteAction
_Route'Route
  = Data.ProtoLens.Prism.prism'
      Route'Route
      (\ p__
         -> case p__ of
              (Route'Route p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_Route'Redirect ::
  Data.ProtoLens.Prism.Prism' Route'Action RedirectAction
_Route'Redirect
  = Data.ProtoLens.Prism.prism'
      Route'Redirect
      (\ p__
         -> case p__ of
              (Route'Redirect p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_Route'DirectResponse ::
  Data.ProtoLens.Prism.Prism' Route'Action DirectResponseAction
_Route'DirectResponse
  = Data.ProtoLens.Prism.prism'
      Route'DirectResponse
      (\ p__
         -> case p__ of
              (Route'DirectResponse p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_Route'FilterAction ::
  Data.ProtoLens.Prism.Prism' Route'Action FilterAction
_Route'FilterAction
  = Data.ProtoLens.Prism.prism'
      Route'FilterAction
      (\ p__
         -> case p__ of
              (Route'FilterAction p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_Route'NonForwardingAction ::
  Data.ProtoLens.Prism.Prism' Route'Action NonForwardingAction
_Route'NonForwardingAction
  = Data.ProtoLens.Prism.prism'
      Route'NonForwardingAction
      (\ p__
         -> case p__ of
              (Route'NonForwardingAction p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.key' @:: Lens' Route'TypedPerFilterConfigEntry Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.value' @:: Lens' Route'TypedPerFilterConfigEntry Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'value' @:: Lens' Route'TypedPerFilterConfigEntry (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@ -}
data Route'TypedPerFilterConfigEntry
  = Route'TypedPerFilterConfigEntry'_constructor {_Route'TypedPerFilterConfigEntry'key :: !Data.Text.Text,
                                                  _Route'TypedPerFilterConfigEntry'value :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                                                  _Route'TypedPerFilterConfigEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show Route'TypedPerFilterConfigEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField Route'TypedPerFilterConfigEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'TypedPerFilterConfigEntry'key
           (\ x__ y__ -> x__ {_Route'TypedPerFilterConfigEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Route'TypedPerFilterConfigEntry "value" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'TypedPerFilterConfigEntry'value
           (\ x__ y__ -> x__ {_Route'TypedPerFilterConfigEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Route'TypedPerFilterConfigEntry "maybe'value" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Route'TypedPerFilterConfigEntry'value
           (\ x__ y__ -> x__ {_Route'TypedPerFilterConfigEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message Route'TypedPerFilterConfigEntry where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.Route.TypedPerFilterConfigEntry"
  packedMessageDescriptor _
    = "\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor Route'TypedPerFilterConfigEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor Route'TypedPerFilterConfigEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _Route'TypedPerFilterConfigEntry'_unknownFields
        (\ x__ y__
           -> x__ {_Route'TypedPerFilterConfigEntry'_unknownFields = y__})
  defMessage
    = Route'TypedPerFilterConfigEntry'_constructor
        {_Route'TypedPerFilterConfigEntry'key = Data.ProtoLens.fieldDefault,
         _Route'TypedPerFilterConfigEntry'value = Prelude.Nothing,
         _Route'TypedPerFilterConfigEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          Route'TypedPerFilterConfigEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser Route'TypedPerFilterConfigEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TypedPerFilterConfigEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData Route'TypedPerFilterConfigEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_Route'TypedPerFilterConfigEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_Route'TypedPerFilterConfigEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_Route'TypedPerFilterConfigEntry'value x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.clusterNotFoundResponseCode' @:: Lens' RouteAction RouteAction'ClusterNotFoundResponseCode@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadataMatch' @:: Lens' RouteAction Proto.Envoy.Config.Core.V3.Base.Metadata@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadataMatch' @:: Lens' RouteAction (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.prefixRewrite' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.regexRewrite' @:: Lens' RouteAction Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'regexRewrite' @:: Lens' RouteAction (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.timeout' @:: Lens' RouteAction Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'timeout' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.idleTimeout' @:: Lens' RouteAction Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'idleTimeout' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryPolicy' @:: Lens' RouteAction RetryPolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryPolicy' @:: Lens' RouteAction (Prelude.Maybe RetryPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryPolicyTypedConfig' @:: Lens' RouteAction Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryPolicyTypedConfig' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestMirrorPolicies' @:: Lens' RouteAction [RouteAction'RequestMirrorPolicy]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestMirrorPolicies' @:: Lens' RouteAction (Data.Vector.Vector RouteAction'RequestMirrorPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.priority' @:: Lens' RouteAction Proto.Envoy.Config.Core.V3.Base.RoutingPriority@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.rateLimits' @:: Lens' RouteAction [RateLimit]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'rateLimits' @:: Lens' RouteAction (Data.Vector.Vector RateLimit)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.includeVhRateLimits' @:: Lens' RouteAction Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'includeVhRateLimits' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hashPolicy' @:: Lens' RouteAction [RouteAction'HashPolicy]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'hashPolicy' @:: Lens' RouteAction (Data.Vector.Vector RouteAction'HashPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.cors' @:: Lens' RouteAction CorsPolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'cors' @:: Lens' RouteAction (Prelude.Maybe CorsPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxGrpcTimeout' @:: Lens' RouteAction Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxGrpcTimeout' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.grpcTimeoutOffset' @:: Lens' RouteAction Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'grpcTimeoutOffset' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.upgradeConfigs' @:: Lens' RouteAction [RouteAction'UpgradeConfig]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'upgradeConfigs' @:: Lens' RouteAction (Data.Vector.Vector RouteAction'UpgradeConfig)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.internalRedirectPolicy' @:: Lens' RouteAction InternalRedirectPolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'internalRedirectPolicy' @:: Lens' RouteAction (Prelude.Maybe InternalRedirectPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.internalRedirectAction' @:: Lens' RouteAction RouteAction'InternalRedirectAction@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxInternalRedirects' @:: Lens' RouteAction Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxInternalRedirects' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hedgePolicy' @:: Lens' RouteAction HedgePolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hedgePolicy' @:: Lens' RouteAction (Prelude.Maybe HedgePolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxStreamDuration' @:: Lens' RouteAction RouteAction'MaxStreamDuration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxStreamDuration' @:: Lens' RouteAction (Prelude.Maybe RouteAction'MaxStreamDuration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'clusterSpecifier' @:: Lens' RouteAction (Prelude.Maybe RouteAction'ClusterSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'cluster' @:: Lens' RouteAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.cluster' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'clusterHeader' @:: Lens' RouteAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.clusterHeader' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'weightedClusters' @:: Lens' RouteAction (Prelude.Maybe WeightedCluster)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.weightedClusters' @:: Lens' RouteAction WeightedCluster@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'clusterSpecifierPlugin' @:: Lens' RouteAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.clusterSpecifierPlugin' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewriteSpecifier' @:: Lens' RouteAction (Prelude.Maybe RouteAction'HostRewriteSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewriteLiteral' @:: Lens' RouteAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostRewriteLiteral' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'autoHostRewrite' @:: Lens' RouteAction (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.autoHostRewrite' @:: Lens' RouteAction Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewriteHeader' @:: Lens' RouteAction (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostRewriteHeader' @:: Lens' RouteAction Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewritePathRegex' @:: Lens' RouteAction (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostRewritePathRegex' @:: Lens' RouteAction Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute@ -}
data RouteAction
  = RouteAction'_constructor {_RouteAction'clusterNotFoundResponseCode :: !RouteAction'ClusterNotFoundResponseCode,
                              _RouteAction'metadataMatch :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata),
                              _RouteAction'prefixRewrite :: !Data.Text.Text,
                              _RouteAction'regexRewrite :: !(Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute),
                              _RouteAction'timeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                              _RouteAction'idleTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                              _RouteAction'retryPolicy :: !(Prelude.Maybe RetryPolicy),
                              _RouteAction'retryPolicyTypedConfig :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                              _RouteAction'requestMirrorPolicies :: !(Data.Vector.Vector RouteAction'RequestMirrorPolicy),
                              _RouteAction'priority :: !Proto.Envoy.Config.Core.V3.Base.RoutingPriority,
                              _RouteAction'rateLimits :: !(Data.Vector.Vector RateLimit),
                              _RouteAction'includeVhRateLimits :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                              _RouteAction'hashPolicy :: !(Data.Vector.Vector RouteAction'HashPolicy),
                              _RouteAction'cors :: !(Prelude.Maybe CorsPolicy),
                              _RouteAction'maxGrpcTimeout :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                              _RouteAction'grpcTimeoutOffset :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                              _RouteAction'upgradeConfigs :: !(Data.Vector.Vector RouteAction'UpgradeConfig),
                              _RouteAction'internalRedirectPolicy :: !(Prelude.Maybe InternalRedirectPolicy),
                              _RouteAction'internalRedirectAction :: !RouteAction'InternalRedirectAction,
                              _RouteAction'maxInternalRedirects :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                              _RouteAction'hedgePolicy :: !(Prelude.Maybe HedgePolicy),
                              _RouteAction'maxStreamDuration :: !(Prelude.Maybe RouteAction'MaxStreamDuration),
                              _RouteAction'clusterSpecifier :: !(Prelude.Maybe RouteAction'ClusterSpecifier),
                              _RouteAction'hostRewriteSpecifier :: !(Prelude.Maybe RouteAction'HostRewriteSpecifier),
                              _RouteAction'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RouteAction'ClusterSpecifier
  = RouteAction'Cluster !Data.Text.Text |
    RouteAction'ClusterHeader !Data.Text.Text |
    RouteAction'WeightedClusters !WeightedCluster |
    RouteAction'ClusterSpecifierPlugin !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
data RouteAction'HostRewriteSpecifier
  = RouteAction'HostRewriteLiteral !Data.Text.Text |
    RouteAction'AutoHostRewrite !Proto.Google.Protobuf.Wrappers.BoolValue |
    RouteAction'HostRewriteHeader !Data.Text.Text |
    RouteAction'HostRewritePathRegex !Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RouteAction "clusterNotFoundResponseCode" RouteAction'ClusterNotFoundResponseCode where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterNotFoundResponseCode
           (\ x__ y__
              -> x__ {_RouteAction'clusterNotFoundResponseCode = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "metadataMatch" Proto.Envoy.Config.Core.V3.Base.Metadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'metadataMatch
           (\ x__ y__ -> x__ {_RouteAction'metadataMatch = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'metadataMatch" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'metadataMatch
           (\ x__ y__ -> x__ {_RouteAction'metadataMatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "prefixRewrite" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'prefixRewrite
           (\ x__ y__ -> x__ {_RouteAction'prefixRewrite = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "regexRewrite" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'regexRewrite
           (\ x__ y__ -> x__ {_RouteAction'regexRewrite = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'regexRewrite" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'regexRewrite
           (\ x__ y__ -> x__ {_RouteAction'regexRewrite = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "timeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'timeout
           (\ x__ y__ -> x__ {_RouteAction'timeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'timeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'timeout
           (\ x__ y__ -> x__ {_RouteAction'timeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "idleTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'idleTimeout
           (\ x__ y__ -> x__ {_RouteAction'idleTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'idleTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'idleTimeout
           (\ x__ y__ -> x__ {_RouteAction'idleTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "retryPolicy" RetryPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'retryPolicy
           (\ x__ y__ -> x__ {_RouteAction'retryPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'retryPolicy" (Prelude.Maybe RetryPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'retryPolicy
           (\ x__ y__ -> x__ {_RouteAction'retryPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "retryPolicyTypedConfig" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'retryPolicyTypedConfig
           (\ x__ y__ -> x__ {_RouteAction'retryPolicyTypedConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'retryPolicyTypedConfig" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'retryPolicyTypedConfig
           (\ x__ y__ -> x__ {_RouteAction'retryPolicyTypedConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "requestMirrorPolicies" [RouteAction'RequestMirrorPolicy] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'requestMirrorPolicies
           (\ x__ y__ -> x__ {_RouteAction'requestMirrorPolicies = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteAction "vec'requestMirrorPolicies" (Data.Vector.Vector RouteAction'RequestMirrorPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'requestMirrorPolicies
           (\ x__ y__ -> x__ {_RouteAction'requestMirrorPolicies = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "priority" Proto.Envoy.Config.Core.V3.Base.RoutingPriority where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'priority
           (\ x__ y__ -> x__ {_RouteAction'priority = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "rateLimits" [RateLimit] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'rateLimits
           (\ x__ y__ -> x__ {_RouteAction'rateLimits = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteAction "vec'rateLimits" (Data.Vector.Vector RateLimit) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'rateLimits
           (\ x__ y__ -> x__ {_RouteAction'rateLimits = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "includeVhRateLimits" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'includeVhRateLimits
           (\ x__ y__ -> x__ {_RouteAction'includeVhRateLimits = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'includeVhRateLimits" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'includeVhRateLimits
           (\ x__ y__ -> x__ {_RouteAction'includeVhRateLimits = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "hashPolicy" [RouteAction'HashPolicy] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hashPolicy
           (\ x__ y__ -> x__ {_RouteAction'hashPolicy = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteAction "vec'hashPolicy" (Data.Vector.Vector RouteAction'HashPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hashPolicy
           (\ x__ y__ -> x__ {_RouteAction'hashPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "cors" CorsPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'cors (\ x__ y__ -> x__ {_RouteAction'cors = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'cors" (Prelude.Maybe CorsPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'cors (\ x__ y__ -> x__ {_RouteAction'cors = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maxGrpcTimeout" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxGrpcTimeout
           (\ x__ y__ -> x__ {_RouteAction'maxGrpcTimeout = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'maxGrpcTimeout" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxGrpcTimeout
           (\ x__ y__ -> x__ {_RouteAction'maxGrpcTimeout = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "grpcTimeoutOffset" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'grpcTimeoutOffset
           (\ x__ y__ -> x__ {_RouteAction'grpcTimeoutOffset = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'grpcTimeoutOffset" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'grpcTimeoutOffset
           (\ x__ y__ -> x__ {_RouteAction'grpcTimeoutOffset = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "upgradeConfigs" [RouteAction'UpgradeConfig] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'upgradeConfigs
           (\ x__ y__ -> x__ {_RouteAction'upgradeConfigs = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteAction "vec'upgradeConfigs" (Data.Vector.Vector RouteAction'UpgradeConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'upgradeConfigs
           (\ x__ y__ -> x__ {_RouteAction'upgradeConfigs = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "internalRedirectPolicy" InternalRedirectPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'internalRedirectPolicy
           (\ x__ y__ -> x__ {_RouteAction'internalRedirectPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'internalRedirectPolicy" (Prelude.Maybe InternalRedirectPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'internalRedirectPolicy
           (\ x__ y__ -> x__ {_RouteAction'internalRedirectPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "internalRedirectAction" RouteAction'InternalRedirectAction where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'internalRedirectAction
           (\ x__ y__ -> x__ {_RouteAction'internalRedirectAction = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maxInternalRedirects" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxInternalRedirects
           (\ x__ y__ -> x__ {_RouteAction'maxInternalRedirects = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'maxInternalRedirects" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxInternalRedirects
           (\ x__ y__ -> x__ {_RouteAction'maxInternalRedirects = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "hedgePolicy" HedgePolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hedgePolicy
           (\ x__ y__ -> x__ {_RouteAction'hedgePolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'hedgePolicy" (Prelude.Maybe HedgePolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hedgePolicy
           (\ x__ y__ -> x__ {_RouteAction'hedgePolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maxStreamDuration" RouteAction'MaxStreamDuration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxStreamDuration
           (\ x__ y__ -> x__ {_RouteAction'maxStreamDuration = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction "maybe'maxStreamDuration" (Prelude.Maybe RouteAction'MaxStreamDuration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'maxStreamDuration
           (\ x__ y__ -> x__ {_RouteAction'maxStreamDuration = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maybe'clusterSpecifier" (Prelude.Maybe RouteAction'ClusterSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maybe'cluster" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'Cluster x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'Cluster y__))
instance Data.ProtoLens.Field.HasField RouteAction "cluster" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'Cluster x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'Cluster y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'clusterHeader" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'ClusterHeader x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'ClusterHeader y__))
instance Data.ProtoLens.Field.HasField RouteAction "clusterHeader" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'ClusterHeader x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'ClusterHeader y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'weightedClusters" (Prelude.Maybe WeightedCluster) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'WeightedClusters x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'WeightedClusters y__))
instance Data.ProtoLens.Field.HasField RouteAction "weightedClusters" WeightedCluster where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'WeightedClusters x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'WeightedClusters y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'clusterSpecifierPlugin" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'ClusterSpecifierPlugin x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'ClusterSpecifierPlugin y__))
instance Data.ProtoLens.Field.HasField RouteAction "clusterSpecifierPlugin" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'clusterSpecifier
           (\ x__ y__ -> x__ {_RouteAction'clusterSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'ClusterSpecifierPlugin x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'ClusterSpecifierPlugin y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'hostRewriteSpecifier" (Prelude.Maybe RouteAction'HostRewriteSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction "maybe'hostRewriteLiteral" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HostRewriteLiteral x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HostRewriteLiteral y__))
instance Data.ProtoLens.Field.HasField RouteAction "hostRewriteLiteral" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HostRewriteLiteral x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HostRewriteLiteral y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'autoHostRewrite" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'AutoHostRewrite x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'AutoHostRewrite y__))
instance Data.ProtoLens.Field.HasField RouteAction "autoHostRewrite" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'AutoHostRewrite x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'AutoHostRewrite y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'hostRewriteHeader" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HostRewriteHeader x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HostRewriteHeader y__))
instance Data.ProtoLens.Field.HasField RouteAction "hostRewriteHeader" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HostRewriteHeader x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HostRewriteHeader y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteAction "maybe'hostRewritePathRegex" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HostRewritePathRegex x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HostRewritePathRegex y__))
instance Data.ProtoLens.Field.HasField RouteAction "hostRewritePathRegex" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'hostRewriteSpecifier
           (\ x__ y__ -> x__ {_RouteAction'hostRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HostRewritePathRegex x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HostRewritePathRegex y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RouteAction where
  messageName _ = Data.Text.pack "envoy.config.route.v3.RouteAction"
  packedMessageDescriptor _
    = "\n\
      \\vRouteAction\DC2#\n\
      \\acluster\CAN\SOH \SOH(\tH\NULR\aclusterB\a\250B\EOTr\STX\DLE\SOH\DC26\n\
      \\SOcluster_header\CAN\STX \SOH(\tH\NULR\rclusterHeaderB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2U\n\
      \\DC1weighted_clusters\CAN\ETX \SOH(\v2&.envoy.config.route.v3.WeightedClusterH\NULR\DLEweightedClusters\DC2:\n\
      \\CANcluster_specifier_plugin\CAN% \SOH(\tH\NULR\SYNclusterSpecifierPlugin\DC2\142\SOH\n\
      \\UScluster_not_found_response_code\CAN\DC4 \SOH(\SO2>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCodeR\ESCclusterNotFoundResponseCodeB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2E\n\
      \\SOmetadata_match\CAN\EOT \SOH(\v2\RS.envoy.config.core.v3.MetadataR\rmetadataMatch\DC22\n\
      \\SOprefix_rewrite\CAN\ENQ \SOH(\tR\rprefixRewriteB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2S\n\
      \\rregex_rewrite\CAN  \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite\DC2?\n\
      \\DC4host_rewrite_literal\CAN\ACK \SOH(\tH\SOHR\DC2hostRewriteLiteralB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2H\n\
      \\DC1auto_host_rewrite\CAN\a \SOH(\v2\SUB.google.protobuf.BoolValueH\SOHR\SIautoHostRewrite\DC2=\n\
      \\DC3host_rewrite_header\CAN\GS \SOH(\tH\SOHR\DC1hostRewriteHeaderB\v\250B\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2g\n\
      \\ETBhost_rewrite_path_regex\CAN# \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteH\SOHR\DC4hostRewritePathRegex\DC23\n\
      \\atimeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\atimeout\DC2<\n\
      \\fidle_timeout\CAN\CAN \SOH(\v2\EM.google.protobuf.DurationR\vidleTimeout\DC2E\n\
      \\fretry_policy\CAN\t \SOH(\v2\".envoy.config.route.v3.RetryPolicyR\vretryPolicy\DC2O\n\
      \\EMretry_policy_typed_config\CAN! \SOH(\v2\DC4.google.protobuf.AnyR\SYNretryPolicyTypedConfig\DC2n\n\
      \\ETBrequest_mirror_policies\CAN\RS \ETX(\v26.envoy.config.route.v3.RouteAction.RequestMirrorPolicyR\NAKrequestMirrorPolicies\DC2K\n\
      \\bpriority\CAN\v \SOH(\SO2%.envoy.config.core.v3.RoutingPriorityR\bpriorityB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2A\n\
      \\vrate_limits\CAN\r \ETX(\v2 .envoy.config.route.v3.RateLimitR\n\
      \rateLimits\DC2\\\n\
      \\SYNinclude_vh_rate_limits\CAN\SO \SOH(\v2\SUB.google.protobuf.BoolValueR\DC3includeVhRateLimitsB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2N\n\
      \\vhash_policy\CAN\SI \ETX(\v2-.envoy.config.route.v3.RouteAction.HashPolicyR\n\
      \hashPolicy\DC25\n\
      \\EOTcors\CAN\DC1 \SOH(\v2!.envoy.config.route.v3.CorsPolicyR\EOTcors\DC2P\n\
      \\DLEmax_grpc_timeout\CAN\ETB \SOH(\v2\EM.google.protobuf.DurationR\SOmaxGrpcTimeoutB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2V\n\
      \\DC3grpc_timeout_offset\CAN\FS \SOH(\v2\EM.google.protobuf.DurationR\DC1grpcTimeoutOffsetB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2Y\n\
      \\SIupgrade_configs\CAN\EM \ETX(\v20.envoy.config.route.v3.RouteAction.UpgradeConfigR\SOupgradeConfigs\DC2g\n\
      \\CANinternal_redirect_policy\CAN\" \SOH(\v2-.envoy.config.route.v3.InternalRedirectPolicyR\SYNinternalRedirectPolicy\DC2\128\SOH\n\
      \\CANinternal_redirect_action\CAN\SUB \SOH(\SO29.envoy.config.route.v3.RouteAction.InternalRedirectActionR\SYNinternalRedirectActionB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2_\n\
      \\SYNmax_internal_redirects\CAN\US \SOH(\v2\FS.google.protobuf.UInt32ValueR\DC4maxInternalRedirectsB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2E\n\
      \\fhedge_policy\CAN\ESC \SOH(\v2\".envoy.config.route.v3.HedgePolicyR\vhedgePolicy\DC2d\n\
      \\DC3max_stream_duration\CAN$ \SOH(\v24.envoy.config.route.v3.RouteAction.MaxStreamDurationR\DC1maxStreamDuration\SUB\162\STX\n\
      \\DC3RequestMirrorPolicy\DC2!\n\
      \\acluster\CAN\SOH \SOH(\tR\aclusterB\a\250B\EOTr\STX\DLE\SOH\DC2Y\n\
      \\DLEruntime_fraction\CAN\ETX \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\SIruntimeFraction\DC2?\n\
      \\rtrace_sampled\CAN\EOT \SOH(\v2\SUB.google.protobuf.BoolValueR\ftraceSampled:9\154\197\136\RS4\n\
      \2envoy.api.v2.route.RouteAction.RequestMirrorPolicyJ\EOT\b\STX\DLE\ETXR\vruntime_key\SUB\150\n\
      \\n\
      \\n\
      \HashPolicy\DC2N\n\
      \\ACKheader\CAN\SOH \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.HeaderH\NULR\ACKheader\DC2N\n\
      \\ACKcookie\CAN\STX \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.CookieH\NULR\ACKcookie\DC2y\n\
      \\NAKconnection_properties\CAN\ETX \SOH(\v2B.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesH\NULR\DC4connectionProperties\DC2g\n\
      \\SIquery_parameter\CAN\ENQ \SOH(\v2<.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterH\NULR\SOqueryParameter\DC2^\n\
      \\ffilter_state\CAN\ACK \SOH(\v29.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateH\NULR\vfilterState\DC2\SUB\n\
      \\bterminal\CAN\EOT \SOH(\bR\bterminal\SUB\198\SOH\n\
      \\ACKHeader\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2S\n\
      \\rregex_rewrite\CAN\STX \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Header\SUB\159\SOH\n\
      \\ACKCookie\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2+\n\
      \\ETXttl\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\ETXttl\DC2\DC2\n\
      \\EOTpath\CAN\ETX \SOH(\tR\EOTpath:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Cookie\SUBz\n\
      \\DC4ConnectionProperties\DC2\ESC\n\
      \\tsource_ip\CAN\SOH \SOH(\bR\bsourceIp:E\154\197\136\RS@\n\
      \>envoy.api.v2.route.RouteAction.HashPolicy.ConnectionProperties\SUBn\n\
      \\SOQueryParameter\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:?\154\197\136\RS:\n\
      \8envoy.api.v2.route.RouteAction.HashPolicy.QueryParameter\SUBf\n\
      \\vFilterState\DC2\EM\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkeyB\a\250B\EOTr\STX\DLE\SOH:<\154\197\136\RS7\n\
      \5envoy.api.v2.route.RouteAction.HashPolicy.FilterStateB\ETB\n\
      \\DLEpolicy_specifier\DC2\ETX\248B\SOH:0\154\197\136\RS+\n\
      \)envoy.api.v2.route.RouteAction.HashPolicy\SUB\163\ETX\n\
      \\rUpgradeConfig\DC20\n\
      \\fupgrade_type\CAN\SOH \SOH(\tR\vupgradeTypeB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\STX\200\SOH\NUL\DC24\n\
      \\aenabled\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\aenabled\DC2e\n\
      \\SOconnect_config\CAN\ETX \SOH(\v2>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigR\rconnectConfig\SUB\141\SOH\n\
      \\rConnectConfig\DC2]\n\
      \\NAKproxy_protocol_config\CAN\SOH \SOH(\v2).envoy.config.core.v3.ProxyProtocolConfigR\DC3proxyProtocolConfig\DC2\GS\n\
      \\n\
      \allow_post\CAN\STX \SOH(\bR\tallowPost:3\154\197\136\RS.\n\
      \,envoy.api.v2.route.RouteAction.UpgradeConfig\SUB\136\STX\n\
      \\DC1MaxStreamDuration\DC2I\n\
      \\DC3max_stream_duration\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\DC1maxStreamDuration\DC2P\n\
      \\ETBgrpc_timeout_header_max\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\DC4grpcTimeoutHeaderMax\DC2V\n\
      \\SUBgrpc_timeout_header_offset\CAN\ETX \SOH(\v2\EM.google.protobuf.DurationR\ETBgrpcTimeoutHeaderOffset\"E\n\
      \\ESCClusterNotFoundResponseCode\DC2\ETB\n\
      \\DC3SERVICE_UNAVAILABLE\DLE\NUL\DC2\r\n\
      \\tNOT_FOUND\DLE\SOH\"^\n\
      \\SYNInternalRedirectAction\DC2\"\n\
      \\RSPASS_THROUGH_INTERNAL_REDIRECT\DLE\NUL\DC2\FS\n\
      \\CANHANDLE_INTERNAL_REDIRECT\DLE\SOH\SUB\STX\CAN\SOHB\CAN\n\
      \\DC1cluster_specifier\DC2\ETX\248B\SOHB\CAN\n\
      \\SYNhost_rewrite_specifier:%\154\197\136\RS \n\
      \\RSenvoy.api.v2.route.RouteActionJ\EOT\b\f\DLE\rJ\EOT\b\DC2\DLE\DC3J\EOT\b\DC3\DLE\DC4J\EOT\b\DLE\DLE\DC1J\EOT\b\SYN\DLE\ETBJ\EOT\b\NAK\DLE\SYNJ\EOT\b\n\
      \\DLE\vR\NAKrequest_mirror_policy"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        clusterNotFoundResponseCode__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster_not_found_response_code"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'ClusterNotFoundResponseCode)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"clusterNotFoundResponseCode")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        metadataMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.Metadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadataMatch")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        prefixRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "prefix_rewrite"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"prefixRewrite")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        regexRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "regex_rewrite"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'regexRewrite")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        timeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'timeout")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        idleTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "idle_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'idleTimeout")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        retryPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicy")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        retryPolicyTypedConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy_typed_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicyTypedConfig")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        requestMirrorPolicies__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_mirror_policies"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'RequestMirrorPolicy)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestMirrorPolicies")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        priority__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "priority"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.RoutingPriority)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"priority")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        rateLimits__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rate_limits"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"rateLimits")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        includeVhRateLimits__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "include_vh_rate_limits"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'includeVhRateLimits")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        hashPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "hash_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"hashPolicy")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        cors__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cors"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor CorsPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'cors")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        maxGrpcTimeout__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_grpc_timeout"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxGrpcTimeout")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        grpcTimeoutOffset__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "grpc_timeout_offset"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'grpcTimeoutOffset")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        upgradeConfigs__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "upgrade_configs"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'UpgradeConfig)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"upgradeConfigs")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        internalRedirectPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "internal_redirect_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor InternalRedirectPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'internalRedirectPolicy")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        internalRedirectAction__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "internal_redirect_action"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'InternalRedirectAction)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"internalRedirectAction")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        maxInternalRedirects__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_internal_redirects"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxInternalRedirects")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        hedgePolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "hedge_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HedgePolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hedgePolicy")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        maxStreamDuration__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_stream_duration"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'MaxStreamDuration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxStreamDuration")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        cluster__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'cluster")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        clusterHeader__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster_header"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'clusterHeader")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        weightedClusters__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "weighted_clusters"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor WeightedCluster)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'weightedClusters")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        clusterSpecifierPlugin__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster_specifier_plugin"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'clusterSpecifierPlugin")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        hostRewriteLiteral__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_rewrite_literal"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hostRewriteLiteral")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        autoHostRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "auto_host_rewrite"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'autoHostRewrite")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        hostRewriteHeader__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_rewrite_header"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hostRewriteHeader")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
        hostRewritePathRegex__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_rewrite_path_regex"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hostRewritePathRegex")) ::
              Data.ProtoLens.FieldDescriptor RouteAction
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 20, 
            clusterNotFoundResponseCode__field_descriptor),
           (Data.ProtoLens.Tag 4, metadataMatch__field_descriptor),
           (Data.ProtoLens.Tag 5, prefixRewrite__field_descriptor),
           (Data.ProtoLens.Tag 32, regexRewrite__field_descriptor),
           (Data.ProtoLens.Tag 8, timeout__field_descriptor),
           (Data.ProtoLens.Tag 24, idleTimeout__field_descriptor),
           (Data.ProtoLens.Tag 9, retryPolicy__field_descriptor),
           (Data.ProtoLens.Tag 33, retryPolicyTypedConfig__field_descriptor),
           (Data.ProtoLens.Tag 30, requestMirrorPolicies__field_descriptor),
           (Data.ProtoLens.Tag 11, priority__field_descriptor),
           (Data.ProtoLens.Tag 13, rateLimits__field_descriptor),
           (Data.ProtoLens.Tag 14, includeVhRateLimits__field_descriptor),
           (Data.ProtoLens.Tag 15, hashPolicy__field_descriptor),
           (Data.ProtoLens.Tag 17, cors__field_descriptor),
           (Data.ProtoLens.Tag 23, maxGrpcTimeout__field_descriptor),
           (Data.ProtoLens.Tag 28, grpcTimeoutOffset__field_descriptor),
           (Data.ProtoLens.Tag 25, upgradeConfigs__field_descriptor),
           (Data.ProtoLens.Tag 34, internalRedirectPolicy__field_descriptor),
           (Data.ProtoLens.Tag 26, internalRedirectAction__field_descriptor),
           (Data.ProtoLens.Tag 31, maxInternalRedirects__field_descriptor),
           (Data.ProtoLens.Tag 27, hedgePolicy__field_descriptor),
           (Data.ProtoLens.Tag 36, maxStreamDuration__field_descriptor),
           (Data.ProtoLens.Tag 1, cluster__field_descriptor),
           (Data.ProtoLens.Tag 2, clusterHeader__field_descriptor),
           (Data.ProtoLens.Tag 3, weightedClusters__field_descriptor),
           (Data.ProtoLens.Tag 37, clusterSpecifierPlugin__field_descriptor),
           (Data.ProtoLens.Tag 6, hostRewriteLiteral__field_descriptor),
           (Data.ProtoLens.Tag 7, autoHostRewrite__field_descriptor),
           (Data.ProtoLens.Tag 29, hostRewriteHeader__field_descriptor),
           (Data.ProtoLens.Tag 35, hostRewritePathRegex__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'_unknownFields
        (\ x__ y__ -> x__ {_RouteAction'_unknownFields = y__})
  defMessage
    = RouteAction'_constructor
        {_RouteAction'clusterNotFoundResponseCode = Data.ProtoLens.fieldDefault,
         _RouteAction'metadataMatch = Prelude.Nothing,
         _RouteAction'prefixRewrite = Data.ProtoLens.fieldDefault,
         _RouteAction'regexRewrite = Prelude.Nothing,
         _RouteAction'timeout = Prelude.Nothing,
         _RouteAction'idleTimeout = Prelude.Nothing,
         _RouteAction'retryPolicy = Prelude.Nothing,
         _RouteAction'retryPolicyTypedConfig = Prelude.Nothing,
         _RouteAction'requestMirrorPolicies = Data.Vector.Generic.empty,
         _RouteAction'priority = Data.ProtoLens.fieldDefault,
         _RouteAction'rateLimits = Data.Vector.Generic.empty,
         _RouteAction'includeVhRateLimits = Prelude.Nothing,
         _RouteAction'hashPolicy = Data.Vector.Generic.empty,
         _RouteAction'cors = Prelude.Nothing,
         _RouteAction'maxGrpcTimeout = Prelude.Nothing,
         _RouteAction'grpcTimeoutOffset = Prelude.Nothing,
         _RouteAction'upgradeConfigs = Data.Vector.Generic.empty,
         _RouteAction'internalRedirectPolicy = Prelude.Nothing,
         _RouteAction'internalRedirectAction = Data.ProtoLens.fieldDefault,
         _RouteAction'maxInternalRedirects = Prelude.Nothing,
         _RouteAction'hedgePolicy = Prelude.Nothing,
         _RouteAction'maxStreamDuration = Prelude.Nothing,
         _RouteAction'clusterSpecifier = Prelude.Nothing,
         _RouteAction'hostRewriteSpecifier = Prelude.Nothing,
         _RouteAction'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RouteAction'HashPolicy
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RateLimit
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RouteAction'RequestMirrorPolicy
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RouteAction'UpgradeConfig
                      -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction
        loop
          x
          mutable'hashPolicy
          mutable'rateLimits
          mutable'requestMirrorPolicies
          mutable'upgradeConfigs
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'hashPolicy <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'hashPolicy)
                      frozen'rateLimits <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'rateLimits)
                      frozen'requestMirrorPolicies <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                        (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                           mutable'requestMirrorPolicies)
                      frozen'upgradeConfigs <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                 (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                    mutable'upgradeConfigs)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'hashPolicy")
                              frozen'hashPolicy
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'rateLimits")
                                 frozen'rateLimits
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'requestMirrorPolicies")
                                    frozen'requestMirrorPolicies
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'upgradeConfigs")
                                       frozen'upgradeConfigs
                                       x)))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        160
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "cluster_not_found_response_code"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"clusterNotFoundResponseCode")
                                     y
                                     x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"metadataMatch") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "prefix_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"prefixRewrite") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        258
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "regex_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"regexRewrite") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "timeout"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"timeout") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        194
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "idle_timeout"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"idleTimeout") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryPolicy") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        266
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy_typed_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"retryPolicyTypedConfig") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        242
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "request_mirror_policies"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestMirrorPolicies y)
                                loop
                                  x mutable'hashPolicy mutable'rateLimits v mutable'upgradeConfigs
                        88
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "priority"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"priority") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        106
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "rate_limits"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'rateLimits y)
                                loop
                                  x
                                  mutable'hashPolicy
                                  v
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        114
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "include_vh_rate_limits"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"includeVhRateLimits") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        122
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "hash_policy"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'hashPolicy y)
                                loop
                                  x
                                  v
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "cors"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"cors") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        186
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_grpc_timeout"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxGrpcTimeout") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        226
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "grpc_timeout_offset"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"grpcTimeoutOffset") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        202
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "upgrade_configs"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'upgradeConfigs y)
                                loop
                                  x
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  v
                        274
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "internal_redirect_policy"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"internalRedirectPolicy") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        208
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "internal_redirect_action"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"internalRedirectAction") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        250
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_internal_redirects"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxInternalRedirects") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        218
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "hedge_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"hedgePolicy") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        290
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_stream_duration"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxStreamDuration") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "cluster"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"cluster") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "cluster_header"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"clusterHeader") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "weighted_clusters"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"weightedClusters") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        298
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "cluster_specifier_plugin"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"clusterSpecifierPlugin") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "host_rewrite_literal"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostRewriteLiteral") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        58
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "auto_host_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"autoHostRewrite") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        234
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "host_rewrite_header"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostRewriteHeader") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        282
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "host_rewrite_path_regex"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostRewritePathRegex") y x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'hashPolicy
                                  mutable'rateLimits
                                  mutable'requestMirrorPolicies
                                  mutable'upgradeConfigs
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'hashPolicy <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              mutable'rateLimits <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              mutable'requestMirrorPolicies <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                 Data.ProtoLens.Encoding.Growing.new
              mutable'upgradeConfigs <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'hashPolicy
                mutable'rateLimits
                mutable'requestMirrorPolicies
                mutable'upgradeConfigs)
          "RouteAction"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view
                      (Data.ProtoLens.Field.field @"clusterNotFoundResponseCode") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 160)
                      ((Prelude..)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                         Prelude.fromEnum
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'metadataMatch") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"prefixRewrite") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   ((Data.Monoid.<>)
                      (case
                           Lens.Family2.view
                             (Data.ProtoLens.Field.field @"maybe'regexRewrite") _x
                       of
                         Prelude.Nothing -> Data.Monoid.mempty
                         (Prelude.Just _v)
                           -> (Data.Monoid.<>)
                                (Data.ProtoLens.Encoding.Bytes.putVarInt 258)
                                ((Prelude..)
                                   (\ bs
                                      -> (Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                              (Prelude.fromIntegral (Data.ByteString.length bs)))
                                           (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                   Data.ProtoLens.encodeMessage
                                   _v))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'timeout") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage
                                      _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'idleTimeout") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 194)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage
                                         _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'retryPolicy") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just _v)
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage
                                            _v))
                               ((Data.Monoid.<>)
                                  (case
                                       Lens.Family2.view
                                         (Data.ProtoLens.Field.field
                                            @"maybe'retryPolicyTypedConfig")
                                         _x
                                   of
                                     Prelude.Nothing -> Data.Monoid.mempty
                                     (Prelude.Just _v)
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt 266)
                                            ((Prelude..)
                                               (\ bs
                                                  -> (Data.Monoid.<>)
                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                          (Prelude.fromIntegral
                                                             (Data.ByteString.length bs)))
                                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                               Data.ProtoLens.encodeMessage
                                               _v))
                                  ((Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 242)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.ProtoLens.encodeMessage
                                                   _v))
                                        (Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"vec'requestMirrorPolicies")
                                           _x))
                                     ((Data.Monoid.<>)
                                        (let
                                           _v
                                             = Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"priority") _x
                                         in
                                           if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                                               Data.Monoid.mempty
                                           else
                                               (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 88)
                                                 ((Prelude..)
                                                    ((Prelude..)
                                                       Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       Prelude.fromIntegral)
                                                    Prelude.fromEnum
                                                    _v))
                                        ((Data.Monoid.<>)
                                           (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                              (\ _v
                                                 -> (Data.Monoid.<>)
                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 106)
                                                      ((Prelude..)
                                                         (\ bs
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    (Prelude.fromIntegral
                                                                       (Data.ByteString.length bs)))
                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                    bs))
                                                         Data.ProtoLens.encodeMessage
                                                         _v))
                                              (Lens.Family2.view
                                                 (Data.ProtoLens.Field.field @"vec'rateLimits") _x))
                                           ((Data.Monoid.<>)
                                              (case
                                                   Lens.Family2.view
                                                     (Data.ProtoLens.Field.field
                                                        @"maybe'includeVhRateLimits")
                                                     _x
                                               of
                                                 Prelude.Nothing -> Data.Monoid.mempty
                                                 (Prelude.Just _v)
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           114)
                                                        ((Prelude..)
                                                           (\ bs
                                                              -> (Data.Monoid.<>)
                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                      (Prelude.fromIntegral
                                                                         (Data.ByteString.length
                                                                            bs)))
                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                      bs))
                                                           Data.ProtoLens.encodeMessage
                                                           _v))
                                              ((Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                    (\ _v
                                                       -> (Data.Monoid.<>)
                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                               122)
                                                            ((Prelude..)
                                                               (\ bs
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          (Prelude.fromIntegral
                                                                             (Data.ByteString.length
                                                                                bs)))
                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                          bs))
                                                               Data.ProtoLens.encodeMessage
                                                               _v))
                                                    (Lens.Family2.view
                                                       (Data.ProtoLens.Field.field
                                                          @"vec'hashPolicy")
                                                       _x))
                                                 ((Data.Monoid.<>)
                                                    (case
                                                         Lens.Family2.view
                                                           (Data.ProtoLens.Field.field
                                                              @"maybe'cors")
                                                           _x
                                                     of
                                                       Prelude.Nothing -> Data.Monoid.mempty
                                                       (Prelude.Just _v)
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 138)
                                                              ((Prelude..)
                                                                 (\ bs
                                                                    -> (Data.Monoid.<>)
                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                            (Prelude.fromIntegral
                                                                               (Data.ByteString.length
                                                                                  bs)))
                                                                         (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                            bs))
                                                                 Data.ProtoLens.encodeMessage
                                                                 _v))
                                                    ((Data.Monoid.<>)
                                                       (case
                                                            Lens.Family2.view
                                                              (Data.ProtoLens.Field.field
                                                                 @"maybe'maxGrpcTimeout")
                                                              _x
                                                        of
                                                          Prelude.Nothing -> Data.Monoid.mempty
                                                          (Prelude.Just _v)
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    186)
                                                                 ((Prelude..)
                                                                    (\ bs
                                                                       -> (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               (Prelude.fromIntegral
                                                                                  (Data.ByteString.length
                                                                                     bs)))
                                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                               bs))
                                                                    Data.ProtoLens.encodeMessage
                                                                    _v))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'grpcTimeoutOffset")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       226)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          ((Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                                                (\ _v
                                                                   -> (Data.Monoid.<>)
                                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                           202)
                                                                        ((Prelude..)
                                                                           (\ bs
                                                                              -> (Data.Monoid.<>)
                                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                      (Prelude.fromIntegral
                                                                                         (Data.ByteString.length
                                                                                            bs)))
                                                                                   (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                      bs))
                                                                           Data.ProtoLens.encodeMessage
                                                                           _v))
                                                                (Lens.Family2.view
                                                                   (Data.ProtoLens.Field.field
                                                                      @"vec'upgradeConfigs")
                                                                   _x))
                                                             ((Data.Monoid.<>)
                                                                (case
                                                                     Lens.Family2.view
                                                                       (Data.ProtoLens.Field.field
                                                                          @"maybe'internalRedirectPolicy")
                                                                       _x
                                                                 of
                                                                   Prelude.Nothing
                                                                     -> Data.Monoid.mempty
                                                                   (Prelude.Just _v)
                                                                     -> (Data.Monoid.<>)
                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                             274)
                                                                          ((Prelude..)
                                                                             (\ bs
                                                                                -> (Data.Monoid.<>)
                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                        (Prelude.fromIntegral
                                                                                           (Data.ByteString.length
                                                                                              bs)))
                                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                        bs))
                                                                             Data.ProtoLens.encodeMessage
                                                                             _v))
                                                                ((Data.Monoid.<>)
                                                                   (let
                                                                      _v
                                                                        = Lens.Family2.view
                                                                            (Data.ProtoLens.Field.field
                                                                               @"internalRedirectAction")
                                                                            _x
                                                                    in
                                                                      if (Prelude.==)
                                                                           _v
                                                                           Data.ProtoLens.fieldDefault then
                                                                          Data.Monoid.mempty
                                                                      else
                                                                          (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               208)
                                                                            ((Prelude..)
                                                                               ((Prelude..)
                                                                                  Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  Prelude.fromIntegral)
                                                                               Prelude.fromEnum
                                                                               _v))
                                                                   ((Data.Monoid.<>)
                                                                      (case
                                                                           Lens.Family2.view
                                                                             (Data.ProtoLens.Field.field
                                                                                @"maybe'maxInternalRedirects")
                                                                             _x
                                                                       of
                                                                         Prelude.Nothing
                                                                           -> Data.Monoid.mempty
                                                                         (Prelude.Just _v)
                                                                           -> (Data.Monoid.<>)
                                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                   250)
                                                                                ((Prelude..)
                                                                                   (\ bs
                                                                                      -> (Data.Monoid.<>)
                                                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                              (Prelude.fromIntegral
                                                                                                 (Data.ByteString.length
                                                                                                    bs)))
                                                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                              bs))
                                                                                   Data.ProtoLens.encodeMessage
                                                                                   _v))
                                                                      ((Data.Monoid.<>)
                                                                         (case
                                                                              Lens.Family2.view
                                                                                (Data.ProtoLens.Field.field
                                                                                   @"maybe'hedgePolicy")
                                                                                _x
                                                                          of
                                                                            Prelude.Nothing
                                                                              -> Data.Monoid.mempty
                                                                            (Prelude.Just _v)
                                                                              -> (Data.Monoid.<>)
                                                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                      218)
                                                                                   ((Prelude..)
                                                                                      (\ bs
                                                                                         -> (Data.Monoid.<>)
                                                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                 (Prelude.fromIntegral
                                                                                                    (Data.ByteString.length
                                                                                                       bs)))
                                                                                              (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                 bs))
                                                                                      Data.ProtoLens.encodeMessage
                                                                                      _v))
                                                                         ((Data.Monoid.<>)
                                                                            (case
                                                                                 Lens.Family2.view
                                                                                   (Data.ProtoLens.Field.field
                                                                                      @"maybe'maxStreamDuration")
                                                                                   _x
                                                                             of
                                                                               Prelude.Nothing
                                                                                 -> Data.Monoid.mempty
                                                                               (Prelude.Just _v)
                                                                                 -> (Data.Monoid.<>)
                                                                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                         290)
                                                                                      ((Prelude..)
                                                                                         (\ bs
                                                                                            -> (Data.Monoid.<>)
                                                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                    (Prelude.fromIntegral
                                                                                                       (Data.ByteString.length
                                                                                                          bs)))
                                                                                                 (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                    bs))
                                                                                         Data.ProtoLens.encodeMessage
                                                                                         _v))
                                                                            ((Data.Monoid.<>)
                                                                               (case
                                                                                    Lens.Family2.view
                                                                                      (Data.ProtoLens.Field.field
                                                                                         @"maybe'clusterSpecifier")
                                                                                      _x
                                                                                of
                                                                                  Prelude.Nothing
                                                                                    -> Data.Monoid.mempty
                                                                                  (Prelude.Just (RouteAction'Cluster v))
                                                                                    -> (Data.Monoid.<>)
                                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                            10)
                                                                                         ((Prelude..)
                                                                                            (\ bs
                                                                                               -> (Data.Monoid.<>)
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                       (Prelude.fromIntegral
                                                                                                          (Data.ByteString.length
                                                                                                             bs)))
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                       bs))
                                                                                            Data.Text.Encoding.encodeUtf8
                                                                                            v)
                                                                                  (Prelude.Just (RouteAction'ClusterHeader v))
                                                                                    -> (Data.Monoid.<>)
                                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                            18)
                                                                                         ((Prelude..)
                                                                                            (\ bs
                                                                                               -> (Data.Monoid.<>)
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                       (Prelude.fromIntegral
                                                                                                          (Data.ByteString.length
                                                                                                             bs)))
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                       bs))
                                                                                            Data.Text.Encoding.encodeUtf8
                                                                                            v)
                                                                                  (Prelude.Just (RouteAction'WeightedClusters v))
                                                                                    -> (Data.Monoid.<>)
                                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                            26)
                                                                                         ((Prelude..)
                                                                                            (\ bs
                                                                                               -> (Data.Monoid.<>)
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                       (Prelude.fromIntegral
                                                                                                          (Data.ByteString.length
                                                                                                             bs)))
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                       bs))
                                                                                            Data.ProtoLens.encodeMessage
                                                                                            v)
                                                                                  (Prelude.Just (RouteAction'ClusterSpecifierPlugin v))
                                                                                    -> (Data.Monoid.<>)
                                                                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                            298)
                                                                                         ((Prelude..)
                                                                                            (\ bs
                                                                                               -> (Data.Monoid.<>)
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                       (Prelude.fromIntegral
                                                                                                          (Data.ByteString.length
                                                                                                             bs)))
                                                                                                    (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                       bs))
                                                                                            Data.Text.Encoding.encodeUtf8
                                                                                            v))
                                                                               ((Data.Monoid.<>)
                                                                                  (case
                                                                                       Lens.Family2.view
                                                                                         (Data.ProtoLens.Field.field
                                                                                            @"maybe'hostRewriteSpecifier")
                                                                                         _x
                                                                                   of
                                                                                     Prelude.Nothing
                                                                                       -> Data.Monoid.mempty
                                                                                     (Prelude.Just (RouteAction'HostRewriteLiteral v))
                                                                                       -> (Data.Monoid.<>)
                                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                               50)
                                                                                            ((Prelude..)
                                                                                               (\ bs
                                                                                                  -> (Data.Monoid.<>)
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                          (Prelude.fromIntegral
                                                                                                             (Data.ByteString.length
                                                                                                                bs)))
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                          bs))
                                                                                               Data.Text.Encoding.encodeUtf8
                                                                                               v)
                                                                                     (Prelude.Just (RouteAction'AutoHostRewrite v))
                                                                                       -> (Data.Monoid.<>)
                                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                               58)
                                                                                            ((Prelude..)
                                                                                               (\ bs
                                                                                                  -> (Data.Monoid.<>)
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                          (Prelude.fromIntegral
                                                                                                             (Data.ByteString.length
                                                                                                                bs)))
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                          bs))
                                                                                               Data.ProtoLens.encodeMessage
                                                                                               v)
                                                                                     (Prelude.Just (RouteAction'HostRewriteHeader v))
                                                                                       -> (Data.Monoid.<>)
                                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                               234)
                                                                                            ((Prelude..)
                                                                                               (\ bs
                                                                                                  -> (Data.Monoid.<>)
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                          (Prelude.fromIntegral
                                                                                                             (Data.ByteString.length
                                                                                                                bs)))
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                          bs))
                                                                                               Data.Text.Encoding.encodeUtf8
                                                                                               v)
                                                                                     (Prelude.Just (RouteAction'HostRewritePathRegex v))
                                                                                       -> (Data.Monoid.<>)
                                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                               282)
                                                                                            ((Prelude..)
                                                                                               (\ bs
                                                                                                  -> (Data.Monoid.<>)
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                                          (Prelude.fromIntegral
                                                                                                             (Data.ByteString.length
                                                                                                                bs)))
                                                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                                          bs))
                                                                                               Data.ProtoLens.encodeMessage
                                                                                               v))
                                                                                  (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                                     (Lens.Family2.view
                                                                                        Data.ProtoLens.unknownFields
                                                                                        _x)))))))))))))))))))))))))
instance Control.DeepSeq.NFData RouteAction where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'clusterNotFoundResponseCode x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'metadataMatch x__)
                   (Control.DeepSeq.deepseq
                      (_RouteAction'prefixRewrite x__)
                      (Control.DeepSeq.deepseq
                         (_RouteAction'regexRewrite x__)
                         (Control.DeepSeq.deepseq
                            (_RouteAction'timeout x__)
                            (Control.DeepSeq.deepseq
                               (_RouteAction'idleTimeout x__)
                               (Control.DeepSeq.deepseq
                                  (_RouteAction'retryPolicy x__)
                                  (Control.DeepSeq.deepseq
                                     (_RouteAction'retryPolicyTypedConfig x__)
                                     (Control.DeepSeq.deepseq
                                        (_RouteAction'requestMirrorPolicies x__)
                                        (Control.DeepSeq.deepseq
                                           (_RouteAction'priority x__)
                                           (Control.DeepSeq.deepseq
                                              (_RouteAction'rateLimits x__)
                                              (Control.DeepSeq.deepseq
                                                 (_RouteAction'includeVhRateLimits x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_RouteAction'hashPolicy x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_RouteAction'cors x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_RouteAction'maxGrpcTimeout x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_RouteAction'grpcTimeoutOffset x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_RouteAction'upgradeConfigs x__)
                                                                (Control.DeepSeq.deepseq
                                                                   (_RouteAction'internalRedirectPolicy
                                                                      x__)
                                                                   (Control.DeepSeq.deepseq
                                                                      (_RouteAction'internalRedirectAction
                                                                         x__)
                                                                      (Control.DeepSeq.deepseq
                                                                         (_RouteAction'maxInternalRedirects
                                                                            x__)
                                                                         (Control.DeepSeq.deepseq
                                                                            (_RouteAction'hedgePolicy
                                                                               x__)
                                                                            (Control.DeepSeq.deepseq
                                                                               (_RouteAction'maxStreamDuration
                                                                                  x__)
                                                                               (Control.DeepSeq.deepseq
                                                                                  (_RouteAction'clusterSpecifier
                                                                                     x__)
                                                                                  (Control.DeepSeq.deepseq
                                                                                     (_RouteAction'hostRewriteSpecifier
                                                                                        x__)
                                                                                     ()))))))))))))))))))))))))
instance Control.DeepSeq.NFData RouteAction'ClusterSpecifier where
  rnf (RouteAction'Cluster x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'ClusterHeader x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'WeightedClusters x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'ClusterSpecifierPlugin x__)
    = Control.DeepSeq.rnf x__
instance Control.DeepSeq.NFData RouteAction'HostRewriteSpecifier where
  rnf (RouteAction'HostRewriteLiteral x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'AutoHostRewrite x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'HostRewriteHeader x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'HostRewritePathRegex x__)
    = Control.DeepSeq.rnf x__
_RouteAction'Cluster ::
  Data.ProtoLens.Prism.Prism' RouteAction'ClusterSpecifier Data.Text.Text
_RouteAction'Cluster
  = Data.ProtoLens.Prism.prism'
      RouteAction'Cluster
      (\ p__
         -> case p__ of
              (RouteAction'Cluster p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'ClusterHeader ::
  Data.ProtoLens.Prism.Prism' RouteAction'ClusterSpecifier Data.Text.Text
_RouteAction'ClusterHeader
  = Data.ProtoLens.Prism.prism'
      RouteAction'ClusterHeader
      (\ p__
         -> case p__ of
              (RouteAction'ClusterHeader p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'WeightedClusters ::
  Data.ProtoLens.Prism.Prism' RouteAction'ClusterSpecifier WeightedCluster
_RouteAction'WeightedClusters
  = Data.ProtoLens.Prism.prism'
      RouteAction'WeightedClusters
      (\ p__
         -> case p__ of
              (RouteAction'WeightedClusters p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'ClusterSpecifierPlugin ::
  Data.ProtoLens.Prism.Prism' RouteAction'ClusterSpecifier Data.Text.Text
_RouteAction'ClusterSpecifierPlugin
  = Data.ProtoLens.Prism.prism'
      RouteAction'ClusterSpecifierPlugin
      (\ p__
         -> case p__ of
              (RouteAction'ClusterSpecifierPlugin p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HostRewriteLiteral ::
  Data.ProtoLens.Prism.Prism' RouteAction'HostRewriteSpecifier Data.Text.Text
_RouteAction'HostRewriteLiteral
  = Data.ProtoLens.Prism.prism'
      RouteAction'HostRewriteLiteral
      (\ p__
         -> case p__ of
              (RouteAction'HostRewriteLiteral p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'AutoHostRewrite ::
  Data.ProtoLens.Prism.Prism' RouteAction'HostRewriteSpecifier Proto.Google.Protobuf.Wrappers.BoolValue
_RouteAction'AutoHostRewrite
  = Data.ProtoLens.Prism.prism'
      RouteAction'AutoHostRewrite
      (\ p__
         -> case p__ of
              (RouteAction'AutoHostRewrite p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HostRewriteHeader ::
  Data.ProtoLens.Prism.Prism' RouteAction'HostRewriteSpecifier Data.Text.Text
_RouteAction'HostRewriteHeader
  = Data.ProtoLens.Prism.prism'
      RouteAction'HostRewriteHeader
      (\ p__
         -> case p__ of
              (RouteAction'HostRewriteHeader p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HostRewritePathRegex ::
  Data.ProtoLens.Prism.Prism' RouteAction'HostRewriteSpecifier Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute
_RouteAction'HostRewritePathRegex
  = Data.ProtoLens.Prism.prism'
      RouteAction'HostRewritePathRegex
      (\ p__
         -> case p__ of
              (RouteAction'HostRewritePathRegex p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
newtype RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue
  = RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data RouteAction'ClusterNotFoundResponseCode
  = RouteAction'SERVICE_UNAVAILABLE |
    RouteAction'NOT_FOUND |
    RouteAction'ClusterNotFoundResponseCode'Unrecognized !RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum RouteAction'ClusterNotFoundResponseCode where
  maybeToEnum 0 = Prelude.Just RouteAction'SERVICE_UNAVAILABLE
  maybeToEnum 1 = Prelude.Just RouteAction'NOT_FOUND
  maybeToEnum k
    = Prelude.Just
        (RouteAction'ClusterNotFoundResponseCode'Unrecognized
           (RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum RouteAction'SERVICE_UNAVAILABLE = "SERVICE_UNAVAILABLE"
  showEnum RouteAction'NOT_FOUND = "NOT_FOUND"
  showEnum
    (RouteAction'ClusterNotFoundResponseCode'Unrecognized (RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "SERVICE_UNAVAILABLE"
    = Prelude.Just RouteAction'SERVICE_UNAVAILABLE
    | (Prelude.==) k "NOT_FOUND" = Prelude.Just RouteAction'NOT_FOUND
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded RouteAction'ClusterNotFoundResponseCode where
  minBound = RouteAction'SERVICE_UNAVAILABLE
  maxBound = RouteAction'NOT_FOUND
instance Prelude.Enum RouteAction'ClusterNotFoundResponseCode where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum ClusterNotFoundResponseCode: "
              (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum RouteAction'SERVICE_UNAVAILABLE = 0
  fromEnum RouteAction'NOT_FOUND = 1
  fromEnum
    (RouteAction'ClusterNotFoundResponseCode'Unrecognized (RouteAction'ClusterNotFoundResponseCode'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ RouteAction'NOT_FOUND
    = Prelude.error
        "RouteAction'ClusterNotFoundResponseCode.succ: bad argument RouteAction'NOT_FOUND. This value would be out of bounds."
  succ RouteAction'SERVICE_UNAVAILABLE = RouteAction'NOT_FOUND
  succ (RouteAction'ClusterNotFoundResponseCode'Unrecognized _)
    = Prelude.error
        "RouteAction'ClusterNotFoundResponseCode.succ: bad argument: unrecognized value"
  pred RouteAction'SERVICE_UNAVAILABLE
    = Prelude.error
        "RouteAction'ClusterNotFoundResponseCode.pred: bad argument RouteAction'SERVICE_UNAVAILABLE. This value would be out of bounds."
  pred RouteAction'NOT_FOUND = RouteAction'SERVICE_UNAVAILABLE
  pred (RouteAction'ClusterNotFoundResponseCode'Unrecognized _)
    = Prelude.error
        "RouteAction'ClusterNotFoundResponseCode.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault RouteAction'ClusterNotFoundResponseCode where
  fieldDefault = RouteAction'SERVICE_UNAVAILABLE
instance Control.DeepSeq.NFData RouteAction'ClusterNotFoundResponseCode where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.terminal' @:: Lens' RouteAction'HashPolicy Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'policySpecifier' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'PolicySpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'header' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'Header)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.header' @:: Lens' RouteAction'HashPolicy RouteAction'HashPolicy'Header@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'cookie' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'Cookie)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.cookie' @:: Lens' RouteAction'HashPolicy RouteAction'HashPolicy'Cookie@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'connectionProperties' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'ConnectionProperties)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.connectionProperties' @:: Lens' RouteAction'HashPolicy RouteAction'HashPolicy'ConnectionProperties@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'queryParameter' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'QueryParameter)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.queryParameter' @:: Lens' RouteAction'HashPolicy RouteAction'HashPolicy'QueryParameter@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'filterState' @:: Lens' RouteAction'HashPolicy (Prelude.Maybe RouteAction'HashPolicy'FilterState)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.filterState' @:: Lens' RouteAction'HashPolicy RouteAction'HashPolicy'FilterState@ -}
data RouteAction'HashPolicy
  = RouteAction'HashPolicy'_constructor {_RouteAction'HashPolicy'terminal :: !Prelude.Bool,
                                         _RouteAction'HashPolicy'policySpecifier :: !(Prelude.Maybe RouteAction'HashPolicy'PolicySpecifier),
                                         _RouteAction'HashPolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RouteAction'HashPolicy'PolicySpecifier
  = RouteAction'HashPolicy'Header' !RouteAction'HashPolicy'Header |
    RouteAction'HashPolicy'Cookie' !RouteAction'HashPolicy'Cookie |
    RouteAction'HashPolicy'ConnectionProperties' !RouteAction'HashPolicy'ConnectionProperties |
    RouteAction'HashPolicy'QueryParameter' !RouteAction'HashPolicy'QueryParameter |
    RouteAction'HashPolicy'FilterState' !RouteAction'HashPolicy'FilterState
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "terminal" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'terminal
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'terminal = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'policySpecifier" (Prelude.Maybe RouteAction'HashPolicy'PolicySpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'header" (Prelude.Maybe RouteAction'HashPolicy'Header) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HashPolicy'Header' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'Header' y__))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "header" RouteAction'HashPolicy'Header where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HashPolicy'Header' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'Header' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'cookie" (Prelude.Maybe RouteAction'HashPolicy'Cookie) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HashPolicy'Cookie' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'Cookie' y__))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "cookie" RouteAction'HashPolicy'Cookie where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HashPolicy'Cookie' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'Cookie' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'connectionProperties" (Prelude.Maybe RouteAction'HashPolicy'ConnectionProperties) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HashPolicy'ConnectionProperties' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap RouteAction'HashPolicy'ConnectionProperties' y__))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "connectionProperties" RouteAction'HashPolicy'ConnectionProperties where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HashPolicy'ConnectionProperties' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap RouteAction'HashPolicy'ConnectionProperties' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'queryParameter" (Prelude.Maybe RouteAction'HashPolicy'QueryParameter) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HashPolicy'QueryParameter' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap RouteAction'HashPolicy'QueryParameter' y__))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "queryParameter" RouteAction'HashPolicy'QueryParameter where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HashPolicy'QueryParameter' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap RouteAction'HashPolicy'QueryParameter' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "maybe'filterState" (Prelude.Maybe RouteAction'HashPolicy'FilterState) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteAction'HashPolicy'FilterState' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'FilterState' y__))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy "filterState" RouteAction'HashPolicy'FilterState where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'policySpecifier
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'policySpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteAction'HashPolicy'FilterState' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteAction'HashPolicy'FilterState' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RouteAction'HashPolicy where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RouteAction.HashPolicy"
  packedMessageDescriptor _
    = "\n\
      \\n\
      \HashPolicy\DC2N\n\
      \\ACKheader\CAN\SOH \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.HeaderH\NULR\ACKheader\DC2N\n\
      \\ACKcookie\CAN\STX \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.CookieH\NULR\ACKcookie\DC2y\n\
      \\NAKconnection_properties\CAN\ETX \SOH(\v2B.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesH\NULR\DC4connectionProperties\DC2g\n\
      \\SIquery_parameter\CAN\ENQ \SOH(\v2<.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterH\NULR\SOqueryParameter\DC2^\n\
      \\ffilter_state\CAN\ACK \SOH(\v29.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateH\NULR\vfilterState\DC2\SUB\n\
      \\bterminal\CAN\EOT \SOH(\bR\bterminal\SUB\198\SOH\n\
      \\ACKHeader\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2S\n\
      \\rregex_rewrite\CAN\STX \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Header\SUB\159\SOH\n\
      \\ACKCookie\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2+\n\
      \\ETXttl\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\ETXttl\DC2\DC2\n\
      \\EOTpath\CAN\ETX \SOH(\tR\EOTpath:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Cookie\SUBz\n\
      \\DC4ConnectionProperties\DC2\ESC\n\
      \\tsource_ip\CAN\SOH \SOH(\bR\bsourceIp:E\154\197\136\RS@\n\
      \>envoy.api.v2.route.RouteAction.HashPolicy.ConnectionProperties\SUBn\n\
      \\SOQueryParameter\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:?\154\197\136\RS:\n\
      \8envoy.api.v2.route.RouteAction.HashPolicy.QueryParameter\SUBf\n\
      \\vFilterState\DC2\EM\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkeyB\a\250B\EOTr\STX\DLE\SOH:<\154\197\136\RS7\n\
      \5envoy.api.v2.route.RouteAction.HashPolicy.FilterStateB\ETB\n\
      \\DLEpolicy_specifier\DC2\ETX\248B\SOH:0\154\197\136\RS+\n\
      \)envoy.api.v2.route.RouteAction.HashPolicy"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        terminal__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "terminal"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"terminal")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
        header__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy'Header)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'header")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
        cookie__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cookie"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy'Cookie)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'cookie")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
        connectionProperties__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "connection_properties"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy'ConnectionProperties)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'connectionProperties")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
        queryParameter__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_parameter"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy'QueryParameter)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'queryParameter")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
        filterState__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "filter_state"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'HashPolicy'FilterState)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'filterState")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 4, terminal__field_descriptor),
           (Data.ProtoLens.Tag 1, header__field_descriptor),
           (Data.ProtoLens.Tag 2, cookie__field_descriptor),
           (Data.ProtoLens.Tag 3, connectionProperties__field_descriptor),
           (Data.ProtoLens.Tag 5, queryParameter__field_descriptor),
           (Data.ProtoLens.Tag 6, filterState__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'_unknownFields
        (\ x__ y__ -> x__ {_RouteAction'HashPolicy'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'_constructor
        {_RouteAction'HashPolicy'terminal = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'policySpecifier = Prelude.Nothing,
         _RouteAction'HashPolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "terminal"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"terminal") y x)
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "header"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"header") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "cookie"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"cookie") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "connection_properties"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"connectionProperties") y x)
                        42
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "query_parameter"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"queryParameter") y x)
                        50
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "filter_state"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"filterState") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "HashPolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"terminal") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt
                         (\ b -> if b then 1 else 0)
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'policySpecifier") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just (RouteAction'HashPolicy'Header' v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v)
                   (Prelude.Just (RouteAction'HashPolicy'Cookie' v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v)
                   (Prelude.Just (RouteAction'HashPolicy'ConnectionProperties' v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v)
                   (Prelude.Just (RouteAction'HashPolicy'QueryParameter' v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v)
                   (Prelude.Just (RouteAction'HashPolicy'FilterState' v))
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RouteAction'HashPolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'terminal x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'HashPolicy'policySpecifier x__) ()))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'PolicySpecifier where
  rnf (RouteAction'HashPolicy'Header' x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'HashPolicy'Cookie' x__) = Control.DeepSeq.rnf x__
  rnf (RouteAction'HashPolicy'ConnectionProperties' x__)
    = Control.DeepSeq.rnf x__
  rnf (RouteAction'HashPolicy'QueryParameter' x__)
    = Control.DeepSeq.rnf x__
  rnf (RouteAction'HashPolicy'FilterState' x__)
    = Control.DeepSeq.rnf x__
_RouteAction'HashPolicy'Header' ::
  Data.ProtoLens.Prism.Prism' RouteAction'HashPolicy'PolicySpecifier RouteAction'HashPolicy'Header
_RouteAction'HashPolicy'Header'
  = Data.ProtoLens.Prism.prism'
      RouteAction'HashPolicy'Header'
      (\ p__
         -> case p__ of
              (RouteAction'HashPolicy'Header' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HashPolicy'Cookie' ::
  Data.ProtoLens.Prism.Prism' RouteAction'HashPolicy'PolicySpecifier RouteAction'HashPolicy'Cookie
_RouteAction'HashPolicy'Cookie'
  = Data.ProtoLens.Prism.prism'
      RouteAction'HashPolicy'Cookie'
      (\ p__
         -> case p__ of
              (RouteAction'HashPolicy'Cookie' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HashPolicy'ConnectionProperties' ::
  Data.ProtoLens.Prism.Prism' RouteAction'HashPolicy'PolicySpecifier RouteAction'HashPolicy'ConnectionProperties
_RouteAction'HashPolicy'ConnectionProperties'
  = Data.ProtoLens.Prism.prism'
      RouteAction'HashPolicy'ConnectionProperties'
      (\ p__
         -> case p__ of
              (RouteAction'HashPolicy'ConnectionProperties' p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HashPolicy'QueryParameter' ::
  Data.ProtoLens.Prism.Prism' RouteAction'HashPolicy'PolicySpecifier RouteAction'HashPolicy'QueryParameter
_RouteAction'HashPolicy'QueryParameter'
  = Data.ProtoLens.Prism.prism'
      RouteAction'HashPolicy'QueryParameter'
      (\ p__
         -> case p__ of
              (RouteAction'HashPolicy'QueryParameter' p__val)
                -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteAction'HashPolicy'FilterState' ::
  Data.ProtoLens.Prism.Prism' RouteAction'HashPolicy'PolicySpecifier RouteAction'HashPolicy'FilterState
_RouteAction'HashPolicy'FilterState'
  = Data.ProtoLens.Prism.prism'
      RouteAction'HashPolicy'FilterState'
      (\ p__
         -> case p__ of
              (RouteAction'HashPolicy'FilterState' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.sourceIp' @:: Lens' RouteAction'HashPolicy'ConnectionProperties Prelude.Bool@ -}
data RouteAction'HashPolicy'ConnectionProperties
  = RouteAction'HashPolicy'ConnectionProperties'_constructor {_RouteAction'HashPolicy'ConnectionProperties'sourceIp :: !Prelude.Bool,
                                                              _RouteAction'HashPolicy'ConnectionProperties'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy'ConnectionProperties where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'ConnectionProperties "sourceIp" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'ConnectionProperties'sourceIp
           (\ x__ y__
              -> x__
                   {_RouteAction'HashPolicy'ConnectionProperties'sourceIp = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'HashPolicy'ConnectionProperties where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.HashPolicy.ConnectionProperties"
  packedMessageDescriptor _
    = "\n\
      \\DC4ConnectionProperties\DC2\ESC\n\
      \\tsource_ip\CAN\SOH \SOH(\bR\bsourceIp:E\154\197\136\RS@\n\
      \>envoy.api.v2.route.RouteAction.HashPolicy.ConnectionProperties"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        sourceIp__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "source_ip"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"sourceIp")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'ConnectionProperties
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, sourceIp__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'ConnectionProperties'_unknownFields
        (\ x__ y__
           -> x__
                {_RouteAction'HashPolicy'ConnectionProperties'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'ConnectionProperties'_constructor
        {_RouteAction'HashPolicy'ConnectionProperties'sourceIp = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'ConnectionProperties'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy'ConnectionProperties
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy'ConnectionProperties
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        8 -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "source_ip"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"sourceIp") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ConnectionProperties"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"sourceIp") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 8)
                      ((Prelude..)
                         Data.ProtoLens.Encoding.Bytes.putVarInt
                         (\ b -> if b then 1 else 0)
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'ConnectionProperties where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'ConnectionProperties'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'ConnectionProperties'sourceIp x__) ())
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' RouteAction'HashPolicy'Cookie Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.ttl' @:: Lens' RouteAction'HashPolicy'Cookie Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'ttl' @:: Lens' RouteAction'HashPolicy'Cookie (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.path' @:: Lens' RouteAction'HashPolicy'Cookie Data.Text.Text@ -}
data RouteAction'HashPolicy'Cookie
  = RouteAction'HashPolicy'Cookie'_constructor {_RouteAction'HashPolicy'Cookie'name :: !Data.Text.Text,
                                                _RouteAction'HashPolicy'Cookie'ttl :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _RouteAction'HashPolicy'Cookie'path :: !Data.Text.Text,
                                                _RouteAction'HashPolicy'Cookie'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy'Cookie where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Cookie "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Cookie'name
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'Cookie'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Cookie "ttl" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Cookie'ttl
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'Cookie'ttl = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Cookie "maybe'ttl" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Cookie'ttl
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'Cookie'ttl = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Cookie "path" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Cookie'path
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'Cookie'path = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'HashPolicy'Cookie where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.HashPolicy.Cookie"
  packedMessageDescriptor _
    = "\n\
      \\ACKCookie\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2+\n\
      \\ETXttl\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\ETXttl\DC2\DC2\n\
      \\EOTpath\CAN\ETX \SOH(\tR\EOTpath:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Cookie"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'Cookie
        ttl__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "ttl"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'ttl")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'Cookie
        path__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "path"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"path")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'Cookie
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 2, ttl__field_descriptor),
           (Data.ProtoLens.Tag 3, path__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'Cookie'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'HashPolicy'Cookie'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'Cookie'_constructor
        {_RouteAction'HashPolicy'Cookie'name = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'Cookie'ttl = Prelude.Nothing,
         _RouteAction'HashPolicy'Cookie'path = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'Cookie'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy'Cookie
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy'Cookie
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "ttl"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"ttl") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "path"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"path") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Cookie"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'ttl") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"path") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'Cookie where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'Cookie'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'Cookie'name x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'HashPolicy'Cookie'ttl x__)
                   (Control.DeepSeq.deepseq
                      (_RouteAction'HashPolicy'Cookie'path x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.key' @:: Lens' RouteAction'HashPolicy'FilterState Data.Text.Text@ -}
data RouteAction'HashPolicy'FilterState
  = RouteAction'HashPolicy'FilterState'_constructor {_RouteAction'HashPolicy'FilterState'key :: !Data.Text.Text,
                                                     _RouteAction'HashPolicy'FilterState'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy'FilterState where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'FilterState "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'FilterState'key
           (\ x__ y__ -> x__ {_RouteAction'HashPolicy'FilterState'key = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'HashPolicy'FilterState where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.HashPolicy.FilterState"
  packedMessageDescriptor _
    = "\n\
      \\vFilterState\DC2\EM\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkeyB\a\250B\EOTr\STX\DLE\SOH:<\154\197\136\RS7\n\
      \5envoy.api.v2.route.RouteAction.HashPolicy.FilterState"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'FilterState
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, key__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'FilterState'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'HashPolicy'FilterState'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'FilterState'_constructor
        {_RouteAction'HashPolicy'FilterState'key = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'FilterState'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy'FilterState
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy'FilterState
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "FilterState"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'FilterState where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'FilterState'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'FilterState'key x__) ())
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headerName' @:: Lens' RouteAction'HashPolicy'Header Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.regexRewrite' @:: Lens' RouteAction'HashPolicy'Header Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'regexRewrite' @:: Lens' RouteAction'HashPolicy'Header (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)@ -}
data RouteAction'HashPolicy'Header
  = RouteAction'HashPolicy'Header'_constructor {_RouteAction'HashPolicy'Header'headerName :: !Data.Text.Text,
                                                _RouteAction'HashPolicy'Header'regexRewrite :: !(Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute),
                                                _RouteAction'HashPolicy'Header'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy'Header where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Header "headerName" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Header'headerName
           (\ x__ y__
              -> x__ {_RouteAction'HashPolicy'Header'headerName = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Header "regexRewrite" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Header'regexRewrite
           (\ x__ y__
              -> x__ {_RouteAction'HashPolicy'Header'regexRewrite = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'Header "maybe'regexRewrite" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'Header'regexRewrite
           (\ x__ y__
              -> x__ {_RouteAction'HashPolicy'Header'regexRewrite = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'HashPolicy'Header where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.HashPolicy.Header"
  packedMessageDescriptor _
    = "\n\
      \\ACKHeader\DC2.\n\
      \\vheader_name\CAN\SOH \SOH(\tR\n\
      \headerNameB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2S\n\
      \\rregex_rewrite\CAN\STX \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.RouteAction.HashPolicy.Header"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        headerName__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "header_name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"headerName")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'Header
        regexRewrite__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "regex_rewrite"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatchAndSubstitute)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'regexRewrite")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'Header
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, headerName__field_descriptor),
           (Data.ProtoLens.Tag 2, regexRewrite__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'Header'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'HashPolicy'Header'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'Header'_constructor
        {_RouteAction'HashPolicy'Header'headerName = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'Header'regexRewrite = Prelude.Nothing,
         _RouteAction'HashPolicy'Header'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy'Header
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy'Header
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "header_name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"headerName") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "regex_rewrite"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"regexRewrite") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "Header"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view (Data.ProtoLens.Field.field @"headerName") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'regexRewrite") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'Header where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'Header'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'Header'headerName x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'HashPolicy'Header'regexRewrite x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' RouteAction'HashPolicy'QueryParameter Data.Text.Text@ -}
data RouteAction'HashPolicy'QueryParameter
  = RouteAction'HashPolicy'QueryParameter'_constructor {_RouteAction'HashPolicy'QueryParameter'name :: !Data.Text.Text,
                                                        _RouteAction'HashPolicy'QueryParameter'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'HashPolicy'QueryParameter where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'HashPolicy'QueryParameter "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'HashPolicy'QueryParameter'name
           (\ x__ y__
              -> x__ {_RouteAction'HashPolicy'QueryParameter'name = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'HashPolicy'QueryParameter where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.HashPolicy.QueryParameter"
  packedMessageDescriptor _
    = "\n\
      \\SOQueryParameter\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:?\154\197\136\RS:\n\
      \8envoy.api.v2.route.RouteAction.HashPolicy.QueryParameter"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'HashPolicy'QueryParameter
      in
        Data.Map.fromList [(Data.ProtoLens.Tag 1, name__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'HashPolicy'QueryParameter'_unknownFields
        (\ x__ y__
           -> x__
                {_RouteAction'HashPolicy'QueryParameter'_unknownFields = y__})
  defMessage
    = RouteAction'HashPolicy'QueryParameter'_constructor
        {_RouteAction'HashPolicy'QueryParameter'name = Data.ProtoLens.fieldDefault,
         _RouteAction'HashPolicy'QueryParameter'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'HashPolicy'QueryParameter
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'HashPolicy'QueryParameter
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "QueryParameter"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             (Data.ProtoLens.Encoding.Wire.buildFieldSet
                (Lens.Family2.view Data.ProtoLens.unknownFields _x))
instance Control.DeepSeq.NFData RouteAction'HashPolicy'QueryParameter where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'HashPolicy'QueryParameter'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'HashPolicy'QueryParameter'name x__) ())
newtype RouteAction'InternalRedirectAction'UnrecognizedValue
  = RouteAction'InternalRedirectAction'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data RouteAction'InternalRedirectAction
  = RouteAction'PASS_THROUGH_INTERNAL_REDIRECT |
    RouteAction'HANDLE_INTERNAL_REDIRECT |
    RouteAction'InternalRedirectAction'Unrecognized !RouteAction'InternalRedirectAction'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum RouteAction'InternalRedirectAction where
  maybeToEnum 0
    = Prelude.Just RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
  maybeToEnum 1 = Prelude.Just RouteAction'HANDLE_INTERNAL_REDIRECT
  maybeToEnum k
    = Prelude.Just
        (RouteAction'InternalRedirectAction'Unrecognized
           (RouteAction'InternalRedirectAction'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
    = "PASS_THROUGH_INTERNAL_REDIRECT"
  showEnum RouteAction'HANDLE_INTERNAL_REDIRECT
    = "HANDLE_INTERNAL_REDIRECT"
  showEnum
    (RouteAction'InternalRedirectAction'Unrecognized (RouteAction'InternalRedirectAction'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "PASS_THROUGH_INTERNAL_REDIRECT"
    = Prelude.Just RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
    | (Prelude.==) k "HANDLE_INTERNAL_REDIRECT"
    = Prelude.Just RouteAction'HANDLE_INTERNAL_REDIRECT
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded RouteAction'InternalRedirectAction where
  minBound = RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
  maxBound = RouteAction'HANDLE_INTERNAL_REDIRECT
instance Prelude.Enum RouteAction'InternalRedirectAction where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum InternalRedirectAction: "
              (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum RouteAction'PASS_THROUGH_INTERNAL_REDIRECT = 0
  fromEnum RouteAction'HANDLE_INTERNAL_REDIRECT = 1
  fromEnum
    (RouteAction'InternalRedirectAction'Unrecognized (RouteAction'InternalRedirectAction'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ RouteAction'HANDLE_INTERNAL_REDIRECT
    = Prelude.error
        "RouteAction'InternalRedirectAction.succ: bad argument RouteAction'HANDLE_INTERNAL_REDIRECT. This value would be out of bounds."
  succ RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
    = RouteAction'HANDLE_INTERNAL_REDIRECT
  succ (RouteAction'InternalRedirectAction'Unrecognized _)
    = Prelude.error
        "RouteAction'InternalRedirectAction.succ: bad argument: unrecognized value"
  pred RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
    = Prelude.error
        "RouteAction'InternalRedirectAction.pred: bad argument RouteAction'PASS_THROUGH_INTERNAL_REDIRECT. This value would be out of bounds."
  pred RouteAction'HANDLE_INTERNAL_REDIRECT
    = RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
  pred (RouteAction'InternalRedirectAction'Unrecognized _)
    = Prelude.error
        "RouteAction'InternalRedirectAction.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault RouteAction'InternalRedirectAction where
  fieldDefault = RouteAction'PASS_THROUGH_INTERNAL_REDIRECT
instance Control.DeepSeq.NFData RouteAction'InternalRedirectAction where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maxStreamDuration' @:: Lens' RouteAction'MaxStreamDuration Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'maxStreamDuration' @:: Lens' RouteAction'MaxStreamDuration (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.grpcTimeoutHeaderMax' @:: Lens' RouteAction'MaxStreamDuration Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'grpcTimeoutHeaderMax' @:: Lens' RouteAction'MaxStreamDuration (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.grpcTimeoutHeaderOffset' @:: Lens' RouteAction'MaxStreamDuration Proto.Google.Protobuf.Duration.Duration@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'grpcTimeoutHeaderOffset' @:: Lens' RouteAction'MaxStreamDuration (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration)@ -}
data RouteAction'MaxStreamDuration
  = RouteAction'MaxStreamDuration'_constructor {_RouteAction'MaxStreamDuration'maxStreamDuration :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset :: !(Prelude.Maybe Proto.Google.Protobuf.Duration.Duration),
                                                _RouteAction'MaxStreamDuration'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'MaxStreamDuration where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "maxStreamDuration" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'maxStreamDuration
           (\ x__ y__
              -> x__ {_RouteAction'MaxStreamDuration'maxStreamDuration = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "maybe'maxStreamDuration" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'maxStreamDuration
           (\ x__ y__
              -> x__ {_RouteAction'MaxStreamDuration'maxStreamDuration = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "grpcTimeoutHeaderMax" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax
           (\ x__ y__
              -> x__
                   {_RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "maybe'grpcTimeoutHeaderMax" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax
           (\ x__ y__
              -> x__
                   {_RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "grpcTimeoutHeaderOffset" Proto.Google.Protobuf.Duration.Duration where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset
           (\ x__ y__
              -> x__
                   {_RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'MaxStreamDuration "maybe'grpcTimeoutHeaderOffset" (Prelude.Maybe Proto.Google.Protobuf.Duration.Duration) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset
           (\ x__ y__
              -> x__
                   {_RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'MaxStreamDuration where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.MaxStreamDuration"
  packedMessageDescriptor _
    = "\n\
      \\DC1MaxStreamDuration\DC2I\n\
      \\DC3max_stream_duration\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\DC1maxStreamDuration\DC2P\n\
      \\ETBgrpc_timeout_header_max\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\DC4grpcTimeoutHeaderMax\DC2V\n\
      \\SUBgrpc_timeout_header_offset\CAN\ETX \SOH(\v2\EM.google.protobuf.DurationR\ETBgrpcTimeoutHeaderOffset"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        maxStreamDuration__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "max_stream_duration"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'maxStreamDuration")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'MaxStreamDuration
        grpcTimeoutHeaderMax__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "grpc_timeout_header_max"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'grpcTimeoutHeaderMax")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'MaxStreamDuration
        grpcTimeoutHeaderOffset__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "grpc_timeout_header_offset"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Duration.Duration)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'grpcTimeoutHeaderOffset")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'MaxStreamDuration
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, maxStreamDuration__field_descriptor),
           (Data.ProtoLens.Tag 2, grpcTimeoutHeaderMax__field_descriptor),
           (Data.ProtoLens.Tag 3, grpcTimeoutHeaderOffset__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'MaxStreamDuration'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'MaxStreamDuration'_unknownFields = y__})
  defMessage
    = RouteAction'MaxStreamDuration'_constructor
        {_RouteAction'MaxStreamDuration'maxStreamDuration = Prelude.Nothing,
         _RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax = Prelude.Nothing,
         _RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset = Prelude.Nothing,
         _RouteAction'MaxStreamDuration'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'MaxStreamDuration
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'MaxStreamDuration
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "max_stream_duration"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"maxStreamDuration") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "grpc_timeout_header_max"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"grpcTimeoutHeaderMax") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "grpc_timeout_header_offset"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"grpcTimeoutHeaderOffset") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "MaxStreamDuration"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'maxStreamDuration") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'grpcTimeoutHeaderMax") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'grpcTimeoutHeaderOffset") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RouteAction'MaxStreamDuration where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'MaxStreamDuration'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'MaxStreamDuration'maxStreamDuration x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'MaxStreamDuration'grpcTimeoutHeaderMax x__)
                   (Control.DeepSeq.deepseq
                      (_RouteAction'MaxStreamDuration'grpcTimeoutHeaderOffset x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.cluster' @:: Lens' RouteAction'RequestMirrorPolicy Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.runtimeFraction' @:: Lens' RouteAction'RequestMirrorPolicy Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'runtimeFraction' @:: Lens' RouteAction'RequestMirrorPolicy (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.traceSampled' @:: Lens' RouteAction'RequestMirrorPolicy Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'traceSampled' @:: Lens' RouteAction'RequestMirrorPolicy (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@ -}
data RouteAction'RequestMirrorPolicy
  = RouteAction'RequestMirrorPolicy'_constructor {_RouteAction'RequestMirrorPolicy'cluster :: !Data.Text.Text,
                                                  _RouteAction'RequestMirrorPolicy'runtimeFraction :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent),
                                                  _RouteAction'RequestMirrorPolicy'traceSampled :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                                                  _RouteAction'RequestMirrorPolicy'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'RequestMirrorPolicy where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'RequestMirrorPolicy "cluster" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'RequestMirrorPolicy'cluster
           (\ x__ y__
              -> x__ {_RouteAction'RequestMirrorPolicy'cluster = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'RequestMirrorPolicy "runtimeFraction" Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'RequestMirrorPolicy'runtimeFraction
           (\ x__ y__
              -> x__ {_RouteAction'RequestMirrorPolicy'runtimeFraction = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'RequestMirrorPolicy "maybe'runtimeFraction" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'RequestMirrorPolicy'runtimeFraction
           (\ x__ y__
              -> x__ {_RouteAction'RequestMirrorPolicy'runtimeFraction = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'RequestMirrorPolicy "traceSampled" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'RequestMirrorPolicy'traceSampled
           (\ x__ y__
              -> x__ {_RouteAction'RequestMirrorPolicy'traceSampled = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'RequestMirrorPolicy "maybe'traceSampled" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'RequestMirrorPolicy'traceSampled
           (\ x__ y__
              -> x__ {_RouteAction'RequestMirrorPolicy'traceSampled = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'RequestMirrorPolicy where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.RequestMirrorPolicy"
  packedMessageDescriptor _
    = "\n\
      \\DC3RequestMirrorPolicy\DC2!\n\
      \\acluster\CAN\SOH \SOH(\tR\aclusterB\a\250B\EOTr\STX\DLE\SOH\DC2Y\n\
      \\DLEruntime_fraction\CAN\ETX \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\SIruntimeFraction\DC2?\n\
      \\rtrace_sampled\CAN\EOT \SOH(\v2\SUB.google.protobuf.BoolValueR\ftraceSampled:9\154\197\136\RS4\n\
      \2envoy.api.v2.route.RouteAction.RequestMirrorPolicyJ\EOT\b\STX\DLE\ETXR\vruntime_key"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        cluster__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cluster"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"cluster")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'RequestMirrorPolicy
        runtimeFraction__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "runtime_fraction"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'runtimeFraction")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'RequestMirrorPolicy
        traceSampled__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "trace_sampled"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'traceSampled")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'RequestMirrorPolicy
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, cluster__field_descriptor),
           (Data.ProtoLens.Tag 3, runtimeFraction__field_descriptor),
           (Data.ProtoLens.Tag 4, traceSampled__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'RequestMirrorPolicy'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'RequestMirrorPolicy'_unknownFields = y__})
  defMessage
    = RouteAction'RequestMirrorPolicy'_constructor
        {_RouteAction'RequestMirrorPolicy'cluster = Data.ProtoLens.fieldDefault,
         _RouteAction'RequestMirrorPolicy'runtimeFraction = Prelude.Nothing,
         _RouteAction'RequestMirrorPolicy'traceSampled = Prelude.Nothing,
         _RouteAction'RequestMirrorPolicy'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'RequestMirrorPolicy
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'RequestMirrorPolicy
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "cluster"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"cluster") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "runtime_fraction"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"runtimeFraction") y x)
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "trace_sampled"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"traceSampled") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "RequestMirrorPolicy"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v = Lens.Family2.view (Data.ProtoLens.Field.field @"cluster") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'runtimeFraction") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'traceSampled") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RouteAction'RequestMirrorPolicy where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'RequestMirrorPolicy'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'RequestMirrorPolicy'cluster x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'RequestMirrorPolicy'runtimeFraction x__)
                   (Control.DeepSeq.deepseq
                      (_RouteAction'RequestMirrorPolicy'traceSampled x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.upgradeType' @:: Lens' RouteAction'UpgradeConfig Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.enabled' @:: Lens' RouteAction'UpgradeConfig Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'enabled' @:: Lens' RouteAction'UpgradeConfig (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.connectConfig' @:: Lens' RouteAction'UpgradeConfig RouteAction'UpgradeConfig'ConnectConfig@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'connectConfig' @:: Lens' RouteAction'UpgradeConfig (Prelude.Maybe RouteAction'UpgradeConfig'ConnectConfig)@ -}
data RouteAction'UpgradeConfig
  = RouteAction'UpgradeConfig'_constructor {_RouteAction'UpgradeConfig'upgradeType :: !Data.Text.Text,
                                            _RouteAction'UpgradeConfig'enabled :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                                            _RouteAction'UpgradeConfig'connectConfig :: !(Prelude.Maybe RouteAction'UpgradeConfig'ConnectConfig),
                                            _RouteAction'UpgradeConfig'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'UpgradeConfig where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig "upgradeType" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'upgradeType
           (\ x__ y__ -> x__ {_RouteAction'UpgradeConfig'upgradeType = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig "enabled" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'enabled
           (\ x__ y__ -> x__ {_RouteAction'UpgradeConfig'enabled = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig "maybe'enabled" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'enabled
           (\ x__ y__ -> x__ {_RouteAction'UpgradeConfig'enabled = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig "connectConfig" RouteAction'UpgradeConfig'ConnectConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'connectConfig
           (\ x__ y__
              -> x__ {_RouteAction'UpgradeConfig'connectConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig "maybe'connectConfig" (Prelude.Maybe RouteAction'UpgradeConfig'ConnectConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'connectConfig
           (\ x__ y__
              -> x__ {_RouteAction'UpgradeConfig'connectConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'UpgradeConfig where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RouteAction.UpgradeConfig"
  packedMessageDescriptor _
    = "\n\
      \\rUpgradeConfig\DC20\n\
      \\fupgrade_type\CAN\SOH \SOH(\tR\vupgradeTypeB\r\250B\n\
      \r\b\DLE\SOH\192\SOH\STX\200\SOH\NUL\DC24\n\
      \\aenabled\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\aenabled\DC2e\n\
      \\SOconnect_config\CAN\ETX \SOH(\v2>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigR\rconnectConfig\SUB\141\SOH\n\
      \\rConnectConfig\DC2]\n\
      \\NAKproxy_protocol_config\CAN\SOH \SOH(\v2).envoy.config.core.v3.ProxyProtocolConfigR\DC3proxyProtocolConfig\DC2\GS\n\
      \\n\
      \allow_post\CAN\STX \SOH(\bR\tallowPost:3\154\197\136\RS.\n\
      \,envoy.api.v2.route.RouteAction.UpgradeConfig"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        upgradeType__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "upgrade_type"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"upgradeType")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'UpgradeConfig
        enabled__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "enabled"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'enabled")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'UpgradeConfig
        connectConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "connect_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteAction'UpgradeConfig'ConnectConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'connectConfig")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'UpgradeConfig
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, upgradeType__field_descriptor),
           (Data.ProtoLens.Tag 2, enabled__field_descriptor),
           (Data.ProtoLens.Tag 3, connectConfig__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'UpgradeConfig'_unknownFields
        (\ x__ y__
           -> x__ {_RouteAction'UpgradeConfig'_unknownFields = y__})
  defMessage
    = RouteAction'UpgradeConfig'_constructor
        {_RouteAction'UpgradeConfig'upgradeType = Data.ProtoLens.fieldDefault,
         _RouteAction'UpgradeConfig'enabled = Prelude.Nothing,
         _RouteAction'UpgradeConfig'connectConfig = Prelude.Nothing,
         _RouteAction'UpgradeConfig'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'UpgradeConfig
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'UpgradeConfig
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "upgrade_type"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"upgradeType") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "enabled"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"enabled") y x)
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "connect_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"connectConfig") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "UpgradeConfig"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let
                _v
                  = Lens.Family2.view (Data.ProtoLens.Field.field @"upgradeType") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'enabled") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'connectConfig") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData RouteAction'UpgradeConfig where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'UpgradeConfig'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'UpgradeConfig'upgradeType x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'UpgradeConfig'enabled x__)
                   (Control.DeepSeq.deepseq
                      (_RouteAction'UpgradeConfig'connectConfig x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.proxyProtocolConfig' @:: Lens' RouteAction'UpgradeConfig'ConnectConfig Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'proxyProtocolConfig' @:: Lens' RouteAction'UpgradeConfig'ConnectConfig (Prelude.Maybe Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.allowPost' @:: Lens' RouteAction'UpgradeConfig'ConnectConfig Prelude.Bool@ -}
data RouteAction'UpgradeConfig'ConnectConfig
  = RouteAction'UpgradeConfig'ConnectConfig'_constructor {_RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig),
                                                          _RouteAction'UpgradeConfig'ConnectConfig'allowPost :: !Prelude.Bool,
                                                          _RouteAction'UpgradeConfig'ConnectConfig'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteAction'UpgradeConfig'ConnectConfig where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig'ConnectConfig "proxyProtocolConfig" Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig
           (\ x__ y__
              -> x__
                   {_RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig'ConnectConfig "maybe'proxyProtocolConfig" (Prelude.Maybe Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig
           (\ x__ y__
              -> x__
                   {_RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteAction'UpgradeConfig'ConnectConfig "allowPost" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteAction'UpgradeConfig'ConnectConfig'allowPost
           (\ x__ y__
              -> x__ {_RouteAction'UpgradeConfig'ConnectConfig'allowPost = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteAction'UpgradeConfig'ConnectConfig where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfig"
  packedMessageDescriptor _
    = "\n\
      \\rConnectConfig\DC2]\n\
      \\NAKproxy_protocol_config\CAN\SOH \SOH(\v2).envoy.config.core.v3.ProxyProtocolConfigR\DC3proxyProtocolConfig\DC2\GS\n\
      \\n\
      \allow_post\CAN\STX \SOH(\bR\tallowPost"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        proxyProtocolConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "proxy_protocol_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.ProxyProtocol.ProxyProtocolConfig)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'proxyProtocolConfig")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'UpgradeConfig'ConnectConfig
        allowPost__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "allow_post"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"allowPost")) ::
              Data.ProtoLens.FieldDescriptor RouteAction'UpgradeConfig'ConnectConfig
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, proxyProtocolConfig__field_descriptor),
           (Data.ProtoLens.Tag 2, allowPost__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteAction'UpgradeConfig'ConnectConfig'_unknownFields
        (\ x__ y__
           -> x__
                {_RouteAction'UpgradeConfig'ConnectConfig'_unknownFields = y__})
  defMessage
    = RouteAction'UpgradeConfig'ConnectConfig'_constructor
        {_RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig = Prelude.Nothing,
         _RouteAction'UpgradeConfig'ConnectConfig'allowPost = Data.ProtoLens.fieldDefault,
         _RouteAction'UpgradeConfig'ConnectConfig'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteAction'UpgradeConfig'ConnectConfig
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteAction'UpgradeConfig'ConnectConfig
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "proxy_protocol_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"proxyProtocolConfig") y x)
                        16
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "allow_post"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"allowPost") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ConnectConfig"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'proxyProtocolConfig") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (let
                   _v = Lens.Family2.view (Data.ProtoLens.Field.field @"allowPost") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 16)
                         ((Prelude..)
                            Data.ProtoLens.Encoding.Bytes.putVarInt
                            (\ b -> if b then 1 else 0)
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RouteAction'UpgradeConfig'ConnectConfig where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteAction'UpgradeConfig'ConnectConfig'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteAction'UpgradeConfig'ConnectConfig'proxyProtocolConfig x__)
                (Control.DeepSeq.deepseq
                   (_RouteAction'UpgradeConfig'ConnectConfig'allowPost x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.caseSensitive' @:: Lens' RouteMatch Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'caseSensitive' @:: Lens' RouteMatch (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.runtimeFraction' @:: Lens' RouteMatch Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'runtimeFraction' @:: Lens' RouteMatch (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headers' @:: Lens' RouteMatch [HeaderMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'headers' @:: Lens' RouteMatch (Data.Vector.Vector HeaderMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.queryParameters' @:: Lens' RouteMatch [QueryParameterMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'queryParameters' @:: Lens' RouteMatch (Data.Vector.Vector QueryParameterMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.grpc' @:: Lens' RouteMatch RouteMatch'GrpcRouteMatchOptions@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'grpc' @:: Lens' RouteMatch (Prelude.Maybe RouteMatch'GrpcRouteMatchOptions)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.tlsContext' @:: Lens' RouteMatch RouteMatch'TlsContextMatchOptions@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'tlsContext' @:: Lens' RouteMatch (Prelude.Maybe RouteMatch'TlsContextMatchOptions)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'pathSpecifier' @:: Lens' RouteMatch (Prelude.Maybe RouteMatch'PathSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'prefix' @:: Lens' RouteMatch (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.prefix' @:: Lens' RouteMatch Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'path' @:: Lens' RouteMatch (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.path' @:: Lens' RouteMatch Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'safeRegex' @:: Lens' RouteMatch (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.safeRegex' @:: Lens' RouteMatch Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'connectMatcher' @:: Lens' RouteMatch (Prelude.Maybe RouteMatch'ConnectMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.connectMatcher' @:: Lens' RouteMatch RouteMatch'ConnectMatcher@ -}
data RouteMatch
  = RouteMatch'_constructor {_RouteMatch'caseSensitive :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                             _RouteMatch'runtimeFraction :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent),
                             _RouteMatch'headers :: !(Data.Vector.Vector HeaderMatcher),
                             _RouteMatch'queryParameters :: !(Data.Vector.Vector QueryParameterMatcher),
                             _RouteMatch'grpc :: !(Prelude.Maybe RouteMatch'GrpcRouteMatchOptions),
                             _RouteMatch'tlsContext :: !(Prelude.Maybe RouteMatch'TlsContextMatchOptions),
                             _RouteMatch'pathSpecifier :: !(Prelude.Maybe RouteMatch'PathSpecifier),
                             _RouteMatch'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteMatch where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data RouteMatch'PathSpecifier
  = RouteMatch'Prefix !Data.Text.Text |
    RouteMatch'Path !Data.Text.Text |
    RouteMatch'SafeRegex !Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher |
    RouteMatch'ConnectMatcher' !RouteMatch'ConnectMatcher
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField RouteMatch "caseSensitive" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'caseSensitive
           (\ x__ y__ -> x__ {_RouteMatch'caseSensitive = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'caseSensitive" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'caseSensitive
           (\ x__ y__ -> x__ {_RouteMatch'caseSensitive = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "runtimeFraction" Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'runtimeFraction
           (\ x__ y__ -> x__ {_RouteMatch'runtimeFraction = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'runtimeFraction" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'runtimeFraction
           (\ x__ y__ -> x__ {_RouteMatch'runtimeFraction = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "headers" [HeaderMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'headers (\ x__ y__ -> x__ {_RouteMatch'headers = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteMatch "vec'headers" (Data.Vector.Vector HeaderMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'headers (\ x__ y__ -> x__ {_RouteMatch'headers = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "queryParameters" [QueryParameterMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'queryParameters
           (\ x__ y__ -> x__ {_RouteMatch'queryParameters = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField RouteMatch "vec'queryParameters" (Data.Vector.Vector QueryParameterMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'queryParameters
           (\ x__ y__ -> x__ {_RouteMatch'queryParameters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "grpc" RouteMatch'GrpcRouteMatchOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'grpc (\ x__ y__ -> x__ {_RouteMatch'grpc = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'grpc" (Prelude.Maybe RouteMatch'GrpcRouteMatchOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'grpc (\ x__ y__ -> x__ {_RouteMatch'grpc = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "tlsContext" RouteMatch'TlsContextMatchOptions where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'tlsContext
           (\ x__ y__ -> x__ {_RouteMatch'tlsContext = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'tlsContext" (Prelude.Maybe RouteMatch'TlsContextMatchOptions) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'tlsContext
           (\ x__ y__ -> x__ {_RouteMatch'tlsContext = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'pathSpecifier" (Prelude.Maybe RouteMatch'PathSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'prefix" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteMatch'Prefix x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteMatch'Prefix y__))
instance Data.ProtoLens.Field.HasField RouteMatch "prefix" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteMatch'Prefix x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteMatch'Prefix y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'path" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteMatch'Path x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteMatch'Path y__))
instance Data.ProtoLens.Field.HasField RouteMatch "path" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteMatch'Path x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteMatch'Path y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'safeRegex" (Prelude.Maybe Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteMatch'SafeRegex x__val)) -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteMatch'SafeRegex y__))
instance Data.ProtoLens.Field.HasField RouteMatch "safeRegex" Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteMatch'SafeRegex x__val)) -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteMatch'SafeRegex y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Field.HasField RouteMatch "maybe'connectMatcher" (Prelude.Maybe RouteMatch'ConnectMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (RouteMatch'ConnectMatcher' x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__ -> Prelude.fmap RouteMatch'ConnectMatcher' y__))
instance Data.ProtoLens.Field.HasField RouteMatch "connectMatcher" RouteMatch'ConnectMatcher where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'pathSpecifier
           (\ x__ y__ -> x__ {_RouteMatch'pathSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (RouteMatch'ConnectMatcher' x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__ -> Prelude.fmap RouteMatch'ConnectMatcher' y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage))
instance Data.ProtoLens.Message RouteMatch where
  messageName _ = Data.Text.pack "envoy.config.route.v3.RouteMatch"
  packedMessageDescriptor _
    = "\n\
      \\n\
      \RouteMatch\DC2\CAN\n\
      \\ACKprefix\CAN\SOH \SOH(\tH\NULR\ACKprefix\DC2\DC4\n\
      \\EOTpath\CAN\STX \SOH(\tH\NULR\EOTpath\DC2N\n\
      \\n\
      \safe_regex\CAN\n\
      \ \SOH(\v2#.envoy.type.matcher.v3.RegexMatcherH\NULR\tsafeRegexB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2[\n\
      \\SIconnect_matcher\CAN\f \SOH(\v20.envoy.config.route.v3.RouteMatch.ConnectMatcherH\NULR\SOconnectMatcher\DC2A\n\
      \\SOcase_sensitive\CAN\EOT \SOH(\v2\SUB.google.protobuf.BoolValueR\rcaseSensitive\DC2Y\n\
      \\DLEruntime_fraction\CAN\t \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\SIruntimeFraction\DC2>\n\
      \\aheaders\CAN\ACK \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheaders\DC2W\n\
      \\DLEquery_parameters\CAN\a \ETX(\v2,.envoy.config.route.v3.QueryParameterMatcherR\SIqueryParameters\DC2K\n\
      \\EOTgrpc\CAN\b \SOH(\v27.envoy.config.route.v3.RouteMatch.GrpcRouteMatchOptionsR\EOTgrpc\DC2Y\n\
      \\vtls_context\CAN\v \SOH(\v28.envoy.config.route.v3.RouteMatch.TlsContextMatchOptionsR\n\
      \tlsContext\SUBS\n\
      \\NAKGrpcRouteMatchOptions::\154\197\136\RS5\n\
      \3envoy.api.v2.route.RouteMatch.GrpcRouteMatchOptions\SUB\201\SOH\n\
      \\SYNTlsContextMatchOptions\DC28\n\
      \\tpresented\CAN\SOH \SOH(\v2\SUB.google.protobuf.BoolValueR\tpresented\DC28\n\
      \\tvalidated\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\tvalidated:;\154\197\136\RS6\n\
      \4envoy.api.v2.route.RouteMatch.TlsContextMatchOptions\SUB\DLE\n\
      \\SOConnectMatcherB\NAK\n\
      \\SOpath_specifier\DC2\ETX\248B\SOH:$\154\197\136\RS\US\n\
      \\GSenvoy.api.v2.route.RouteMatchJ\EOT\b\ENQ\DLE\ACKJ\EOT\b\ETX\DLE\EOTR\ENQregex"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        caseSensitive__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "case_sensitive"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'caseSensitive")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        runtimeFraction__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "runtime_fraction"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.RuntimeFractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'runtimeFraction")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        headers__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HeaderMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"headers")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        queryParameters__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "query_parameters"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor QueryParameterMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"queryParameters")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        grpc__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "grpc"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteMatch'GrpcRouteMatchOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'grpc")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        tlsContext__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "tls_context"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteMatch'TlsContextMatchOptions)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'tlsContext")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        prefix__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "prefix"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'prefix")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        path__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "path"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'path")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        safeRegex__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "safe_regex"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'safeRegex")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
        connectMatcher__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "connect_matcher"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RouteMatch'ConnectMatcher)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'connectMatcher")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 4, caseSensitive__field_descriptor),
           (Data.ProtoLens.Tag 9, runtimeFraction__field_descriptor),
           (Data.ProtoLens.Tag 6, headers__field_descriptor),
           (Data.ProtoLens.Tag 7, queryParameters__field_descriptor),
           (Data.ProtoLens.Tag 8, grpc__field_descriptor),
           (Data.ProtoLens.Tag 11, tlsContext__field_descriptor),
           (Data.ProtoLens.Tag 1, prefix__field_descriptor),
           (Data.ProtoLens.Tag 2, path__field_descriptor),
           (Data.ProtoLens.Tag 10, safeRegex__field_descriptor),
           (Data.ProtoLens.Tag 12, connectMatcher__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteMatch'_unknownFields
        (\ x__ y__ -> x__ {_RouteMatch'_unknownFields = y__})
  defMessage
    = RouteMatch'_constructor
        {_RouteMatch'caseSensitive = Prelude.Nothing,
         _RouteMatch'runtimeFraction = Prelude.Nothing,
         _RouteMatch'headers = Data.Vector.Generic.empty,
         _RouteMatch'queryParameters = Data.Vector.Generic.empty,
         _RouteMatch'grpc = Prelude.Nothing,
         _RouteMatch'tlsContext = Prelude.Nothing,
         _RouteMatch'pathSpecifier = Prelude.Nothing,
         _RouteMatch'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteMatch
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld HeaderMatcher
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld QueryParameterMatcher
                -> Data.ProtoLens.Encoding.Bytes.Parser RouteMatch
        loop x mutable'headers mutable'queryParameters
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'headers)
                      frozen'queryParameters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'queryParameters)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'headers")
                              frozen'headers
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'queryParameters")
                                 frozen'queryParameters
                                 x)))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        34
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "case_sensitive"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"caseSensitive") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        74
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "runtime_fraction"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"runtimeFraction") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        50
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'headers y)
                                loop x v mutable'queryParameters
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "query_parameters"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'queryParameters y)
                                loop x mutable'headers v
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "grpc"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"grpc") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "tls_context"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"tlsContext") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "prefix"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"prefix") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "path"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"path") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        82
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "safe_regex"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"safeRegex") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        98
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "connect_matcher"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"connectMatcher") y x)
                                  mutable'headers
                                  mutable'queryParameters
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'headers
                                  mutable'queryParameters
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              mutable'queryParameters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage mutable'headers mutable'queryParameters)
          "RouteMatch"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'caseSensitive") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'runtimeFraction") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage
                                 _v))
                      (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'headers") _x))
                   ((Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage
                                    _v))
                         (Lens.Family2.view
                            (Data.ProtoLens.Field.field @"vec'queryParameters") _x))
                      ((Data.Monoid.<>)
                         (case
                              Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'grpc") _x
                          of
                            Prelude.Nothing -> Data.Monoid.mempty
                            (Prelude.Just _v)
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                   ((Prelude..)
                                      (\ bs
                                         -> (Data.Monoid.<>)
                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                 (Prelude.fromIntegral (Data.ByteString.length bs)))
                                              (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                      Data.ProtoLens.encodeMessage
                                      _v))
                         ((Data.Monoid.<>)
                            (case
                                 Lens.Family2.view
                                   (Data.ProtoLens.Field.field @"maybe'tlsContext") _x
                             of
                               Prelude.Nothing -> Data.Monoid.mempty
                               (Prelude.Just _v)
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                      ((Prelude..)
                                         (\ bs
                                            -> (Data.Monoid.<>)
                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                    (Prelude.fromIntegral
                                                       (Data.ByteString.length bs)))
                                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                         Data.ProtoLens.encodeMessage
                                         _v))
                            ((Data.Monoid.<>)
                               (case
                                    Lens.Family2.view
                                      (Data.ProtoLens.Field.field @"maybe'pathSpecifier") _x
                                of
                                  Prelude.Nothing -> Data.Monoid.mempty
                                  (Prelude.Just (RouteMatch'Prefix v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8
                                            v)
                                  (Prelude.Just (RouteMatch'Path v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.Text.Encoding.encodeUtf8
                                            v)
                                  (Prelude.Just (RouteMatch'SafeRegex v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage
                                            v)
                                  (Prelude.Just (RouteMatch'ConnectMatcher' v))
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt 98)
                                         ((Prelude..)
                                            (\ bs
                                               -> (Data.Monoid.<>)
                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                       (Prelude.fromIntegral
                                                          (Data.ByteString.length bs)))
                                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                            Data.ProtoLens.encodeMessage
                                            v))
                               (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                  (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))
instance Control.DeepSeq.NFData RouteMatch where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteMatch'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteMatch'caseSensitive x__)
                (Control.DeepSeq.deepseq
                   (_RouteMatch'runtimeFraction x__)
                   (Control.DeepSeq.deepseq
                      (_RouteMatch'headers x__)
                      (Control.DeepSeq.deepseq
                         (_RouteMatch'queryParameters x__)
                         (Control.DeepSeq.deepseq
                            (_RouteMatch'grpc x__)
                            (Control.DeepSeq.deepseq
                               (_RouteMatch'tlsContext x__)
                               (Control.DeepSeq.deepseq (_RouteMatch'pathSpecifier x__) ())))))))
instance Control.DeepSeq.NFData RouteMatch'PathSpecifier where
  rnf (RouteMatch'Prefix x__) = Control.DeepSeq.rnf x__
  rnf (RouteMatch'Path x__) = Control.DeepSeq.rnf x__
  rnf (RouteMatch'SafeRegex x__) = Control.DeepSeq.rnf x__
  rnf (RouteMatch'ConnectMatcher' x__) = Control.DeepSeq.rnf x__
_RouteMatch'Prefix ::
  Data.ProtoLens.Prism.Prism' RouteMatch'PathSpecifier Data.Text.Text
_RouteMatch'Prefix
  = Data.ProtoLens.Prism.prism'
      RouteMatch'Prefix
      (\ p__
         -> case p__ of
              (RouteMatch'Prefix p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteMatch'Path ::
  Data.ProtoLens.Prism.Prism' RouteMatch'PathSpecifier Data.Text.Text
_RouteMatch'Path
  = Data.ProtoLens.Prism.prism'
      RouteMatch'Path
      (\ p__
         -> case p__ of
              (RouteMatch'Path p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteMatch'SafeRegex ::
  Data.ProtoLens.Prism.Prism' RouteMatch'PathSpecifier Proto.Envoy.Type.Matcher.V3.Regex.RegexMatcher
_RouteMatch'SafeRegex
  = Data.ProtoLens.Prism.prism'
      RouteMatch'SafeRegex
      (\ p__
         -> case p__ of
              (RouteMatch'SafeRegex p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
_RouteMatch'ConnectMatcher' ::
  Data.ProtoLens.Prism.Prism' RouteMatch'PathSpecifier RouteMatch'ConnectMatcher
_RouteMatch'ConnectMatcher'
  = Data.ProtoLens.Prism.prism'
      RouteMatch'ConnectMatcher'
      (\ p__
         -> case p__ of
              (RouteMatch'ConnectMatcher' p__val) -> Prelude.Just p__val
              _otherwise -> Prelude.Nothing)
{- | Fields :
      -}
data RouteMatch'ConnectMatcher
  = RouteMatch'ConnectMatcher'_constructor {_RouteMatch'ConnectMatcher'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteMatch'ConnectMatcher where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RouteMatch'ConnectMatcher where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.RouteMatch.ConnectMatcher"
  packedMessageDescriptor _
    = "\n\
      \\SOConnectMatcher"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteMatch'ConnectMatcher'_unknownFields
        (\ x__ y__
           -> x__ {_RouteMatch'ConnectMatcher'_unknownFields = y__})
  defMessage
    = RouteMatch'ConnectMatcher'_constructor
        {_RouteMatch'ConnectMatcher'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteMatch'ConnectMatcher
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteMatch'ConnectMatcher
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "ConnectMatcher"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RouteMatch'ConnectMatcher where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteMatch'ConnectMatcher'_unknownFields x__) ()
{- | Fields :
      -}
data RouteMatch'GrpcRouteMatchOptions
  = RouteMatch'GrpcRouteMatchOptions'_constructor {_RouteMatch'GrpcRouteMatchOptions'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteMatch'GrpcRouteMatchOptions where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Message RouteMatch'GrpcRouteMatchOptions where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteMatch.GrpcRouteMatchOptions"
  packedMessageDescriptor _
    = "\n\
      \\NAKGrpcRouteMatchOptions::\154\197\136\RS5\n\
      \3envoy.api.v2.route.RouteMatch.GrpcRouteMatchOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag = let in Data.Map.fromList []
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteMatch'GrpcRouteMatchOptions'_unknownFields
        (\ x__ y__
           -> x__ {_RouteMatch'GrpcRouteMatchOptions'_unknownFields = y__})
  defMessage
    = RouteMatch'GrpcRouteMatchOptions'_constructor
        {_RouteMatch'GrpcRouteMatchOptions'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteMatch'GrpcRouteMatchOptions
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteMatch'GrpcRouteMatchOptions
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of {
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x) }
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "GrpcRouteMatchOptions"
  buildMessage
    = \ _x
        -> Data.ProtoLens.Encoding.Wire.buildFieldSet
             (Lens.Family2.view Data.ProtoLens.unknownFields _x)
instance Control.DeepSeq.NFData RouteMatch'GrpcRouteMatchOptions where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteMatch'GrpcRouteMatchOptions'_unknownFields x__) ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.presented' @:: Lens' RouteMatch'TlsContextMatchOptions Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'presented' @:: Lens' RouteMatch'TlsContextMatchOptions (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.validated' @:: Lens' RouteMatch'TlsContextMatchOptions Proto.Google.Protobuf.Wrappers.BoolValue@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'validated' @:: Lens' RouteMatch'TlsContextMatchOptions (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue)@ -}
data RouteMatch'TlsContextMatchOptions
  = RouteMatch'TlsContextMatchOptions'_constructor {_RouteMatch'TlsContextMatchOptions'presented :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                                                    _RouteMatch'TlsContextMatchOptions'validated :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue),
                                                    _RouteMatch'TlsContextMatchOptions'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show RouteMatch'TlsContextMatchOptions where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField RouteMatch'TlsContextMatchOptions "presented" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'TlsContextMatchOptions'presented
           (\ x__ y__
              -> x__ {_RouteMatch'TlsContextMatchOptions'presented = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch'TlsContextMatchOptions "maybe'presented" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'TlsContextMatchOptions'presented
           (\ x__ y__
              -> x__ {_RouteMatch'TlsContextMatchOptions'presented = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField RouteMatch'TlsContextMatchOptions "validated" Proto.Google.Protobuf.Wrappers.BoolValue where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'TlsContextMatchOptions'validated
           (\ x__ y__
              -> x__ {_RouteMatch'TlsContextMatchOptions'validated = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField RouteMatch'TlsContextMatchOptions "maybe'validated" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.BoolValue) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _RouteMatch'TlsContextMatchOptions'validated
           (\ x__ y__
              -> x__ {_RouteMatch'TlsContextMatchOptions'validated = y__}))
        Prelude.id
instance Data.ProtoLens.Message RouteMatch'TlsContextMatchOptions where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.RouteMatch.TlsContextMatchOptions"
  packedMessageDescriptor _
    = "\n\
      \\SYNTlsContextMatchOptions\DC28\n\
      \\tpresented\CAN\SOH \SOH(\v2\SUB.google.protobuf.BoolValueR\tpresented\DC28\n\
      \\tvalidated\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\tvalidated:;\154\197\136\RS6\n\
      \4envoy.api.v2.route.RouteMatch.TlsContextMatchOptions"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        presented__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "presented"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'presented")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch'TlsContextMatchOptions
        validated__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "validated"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.BoolValue)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'validated")) ::
              Data.ProtoLens.FieldDescriptor RouteMatch'TlsContextMatchOptions
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, presented__field_descriptor),
           (Data.ProtoLens.Tag 2, validated__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _RouteMatch'TlsContextMatchOptions'_unknownFields
        (\ x__ y__
           -> x__ {_RouteMatch'TlsContextMatchOptions'_unknownFields = y__})
  defMessage
    = RouteMatch'TlsContextMatchOptions'_constructor
        {_RouteMatch'TlsContextMatchOptions'presented = Prelude.Nothing,
         _RouteMatch'TlsContextMatchOptions'validated = Prelude.Nothing,
         _RouteMatch'TlsContextMatchOptions'_unknownFields = []}
  parseMessage
    = let
        loop ::
          RouteMatch'TlsContextMatchOptions
          -> Data.ProtoLens.Encoding.Bytes.Parser RouteMatch'TlsContextMatchOptions
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "presented"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"presented") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "validated"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"validated") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TlsContextMatchOptions"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'presented") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'validated") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData RouteMatch'TlsContextMatchOptions where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_RouteMatch'TlsContextMatchOptions'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_RouteMatch'TlsContextMatchOptions'presented x__)
                (Control.DeepSeq.deepseq
                   (_RouteMatch'TlsContextMatchOptions'validated x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.clientSampling' @:: Lens' Tracing Proto.Envoy.Type.V3.Percent.FractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'clientSampling' @:: Lens' Tracing (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.randomSampling' @:: Lens' Tracing Proto.Envoy.Type.V3.Percent.FractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'randomSampling' @:: Lens' Tracing (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.overallSampling' @:: Lens' Tracing Proto.Envoy.Type.V3.Percent.FractionalPercent@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'overallSampling' @:: Lens' Tracing (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.customTags' @:: Lens' Tracing [Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'customTags' @:: Lens' Tracing (Data.Vector.Vector Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag)@ -}
data Tracing
  = Tracing'_constructor {_Tracing'clientSampling :: !(Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent),
                          _Tracing'randomSampling :: !(Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent),
                          _Tracing'overallSampling :: !(Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent),
                          _Tracing'customTags :: !(Data.Vector.Vector Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag),
                          _Tracing'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show Tracing where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField Tracing "clientSampling" Proto.Envoy.Type.V3.Percent.FractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'clientSampling
           (\ x__ y__ -> x__ {_Tracing'clientSampling = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Tracing "maybe'clientSampling" (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'clientSampling
           (\ x__ y__ -> x__ {_Tracing'clientSampling = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Tracing "randomSampling" Proto.Envoy.Type.V3.Percent.FractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'randomSampling
           (\ x__ y__ -> x__ {_Tracing'randomSampling = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Tracing "maybe'randomSampling" (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'randomSampling
           (\ x__ y__ -> x__ {_Tracing'randomSampling = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Tracing "overallSampling" Proto.Envoy.Type.V3.Percent.FractionalPercent where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'overallSampling
           (\ x__ y__ -> x__ {_Tracing'overallSampling = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField Tracing "maybe'overallSampling" (Prelude.Maybe Proto.Envoy.Type.V3.Percent.FractionalPercent) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'overallSampling
           (\ x__ y__ -> x__ {_Tracing'overallSampling = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField Tracing "customTags" [Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'customTags (\ x__ y__ -> x__ {_Tracing'customTags = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField Tracing "vec'customTags" (Data.Vector.Vector Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _Tracing'customTags (\ x__ y__ -> x__ {_Tracing'customTags = y__}))
        Prelude.id
instance Data.ProtoLens.Message Tracing where
  messageName _ = Data.Text.pack "envoy.config.route.v3.Tracing"
  packedMessageDescriptor _
    = "\n\
      \\aTracing\DC2I\n\
      \\SIclient_sampling\CAN\SOH \SOH(\v2 .envoy.type.v3.FractionalPercentR\SOclientSampling\DC2I\n\
      \\SIrandom_sampling\CAN\STX \SOH(\v2 .envoy.type.v3.FractionalPercentR\SOrandomSampling\DC2K\n\
      \\DLEoverall_sampling\CAN\ETX \SOH(\v2 .envoy.type.v3.FractionalPercentR\SIoverallSampling\DC2A\n\
      \\vcustom_tags\CAN\EOT \ETX(\v2 .envoy.type.tracing.v3.CustomTagR\n\
      \customTags:!\154\197\136\RS\FS\n\
      \\SUBenvoy.api.v2.route.Tracing"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        clientSampling__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "client_sampling"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.V3.Percent.FractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'clientSampling")) ::
              Data.ProtoLens.FieldDescriptor Tracing
        randomSampling__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "random_sampling"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.V3.Percent.FractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'randomSampling")) ::
              Data.ProtoLens.FieldDescriptor Tracing
        overallSampling__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "overall_sampling"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.V3.Percent.FractionalPercent)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'overallSampling")) ::
              Data.ProtoLens.FieldDescriptor Tracing
        customTags__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "custom_tags"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"customTags")) ::
              Data.ProtoLens.FieldDescriptor Tracing
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, clientSampling__field_descriptor),
           (Data.ProtoLens.Tag 2, randomSampling__field_descriptor),
           (Data.ProtoLens.Tag 3, overallSampling__field_descriptor),
           (Data.ProtoLens.Tag 4, customTags__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _Tracing'_unknownFields
        (\ x__ y__ -> x__ {_Tracing'_unknownFields = y__})
  defMessage
    = Tracing'_constructor
        {_Tracing'clientSampling = Prelude.Nothing,
         _Tracing'randomSampling = Prelude.Nothing,
         _Tracing'overallSampling = Prelude.Nothing,
         _Tracing'customTags = Data.Vector.Generic.empty,
         _Tracing'_unknownFields = []}
  parseMessage
    = let
        loop ::
          Tracing
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Type.Tracing.V3.CustomTag.CustomTag
             -> Data.ProtoLens.Encoding.Bytes.Parser Tracing
        loop x mutable'customTags
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'customTags <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'customTags)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'customTags")
                              frozen'customTags
                              x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "client_sampling"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"clientSampling") y x)
                                  mutable'customTags
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "random_sampling"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"randomSampling") y x)
                                  mutable'customTags
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "overall_sampling"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"overallSampling") y x)
                                  mutable'customTags
                        34
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "custom_tags"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'customTags y)
                                loop x v
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'customTags
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'customTags <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'customTags)
          "Tracing"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (case
                  Lens.Family2.view
                    (Data.ProtoLens.Field.field @"maybe'clientSampling") _x
              of
                Prelude.Nothing -> Data.Monoid.mempty
                (Prelude.Just _v)
                  -> (Data.Monoid.<>)
                       (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                       ((Prelude..)
                          (\ bs
                             -> (Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                     (Prelude.fromIntegral (Data.ByteString.length bs)))
                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                          Data.ProtoLens.encodeMessage
                          _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'randomSampling") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'overallSampling") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   ((Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage
                                    _v))
                         (Lens.Family2.view
                            (Data.ProtoLens.Field.field @"vec'customTags") _x))
                      (Data.ProtoLens.Encoding.Wire.buildFieldSet
                         (Lens.Family2.view Data.ProtoLens.unknownFields _x)))))
instance Control.DeepSeq.NFData Tracing where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_Tracing'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_Tracing'clientSampling x__)
                (Control.DeepSeq.deepseq
                   (_Tracing'randomSampling x__)
                   (Control.DeepSeq.deepseq
                      (_Tracing'overallSampling x__)
                      (Control.DeepSeq.deepseq (_Tracing'customTags x__) ()))))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.headers' @:: Lens' VirtualCluster [HeaderMatcher]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'headers' @:: Lens' VirtualCluster (Data.Vector.Vector HeaderMatcher)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' VirtualCluster Data.Text.Text@ -}
data VirtualCluster
  = VirtualCluster'_constructor {_VirtualCluster'headers :: !(Data.Vector.Vector HeaderMatcher),
                                 _VirtualCluster'name :: !Data.Text.Text,
                                 _VirtualCluster'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show VirtualCluster where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField VirtualCluster "headers" [HeaderMatcher] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualCluster'headers
           (\ x__ y__ -> x__ {_VirtualCluster'headers = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualCluster "vec'headers" (Data.Vector.Vector HeaderMatcher) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualCluster'headers
           (\ x__ y__ -> x__ {_VirtualCluster'headers = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualCluster "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualCluster'name
           (\ x__ y__ -> x__ {_VirtualCluster'name = y__}))
        Prelude.id
instance Data.ProtoLens.Message VirtualCluster where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.VirtualCluster"
  packedMessageDescriptor _
    = "\n\
      \\SOVirtualCluster\DC2>\n\
      \\aheaders\CAN\EOT \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheaders\DC2\ESC\n\
      \\EOTname\CAN\STX \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:(\154\197\136\RS#\n\
      \!envoy.api.v2.route.VirtualClusterJ\EOT\b\SOH\DLE\STXJ\EOT\b\ETX\DLE\EOTR\apatternR\ACKmethod"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        headers__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "headers"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HeaderMatcher)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"headers")) ::
              Data.ProtoLens.FieldDescriptor VirtualCluster
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor VirtualCluster
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 4, headers__field_descriptor),
           (Data.ProtoLens.Tag 2, name__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _VirtualCluster'_unknownFields
        (\ x__ y__ -> x__ {_VirtualCluster'_unknownFields = y__})
  defMessage
    = VirtualCluster'_constructor
        {_VirtualCluster'headers = Data.Vector.Generic.empty,
         _VirtualCluster'name = Data.ProtoLens.fieldDefault,
         _VirtualCluster'_unknownFields = []}
  parseMessage
    = let
        loop ::
          VirtualCluster
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld HeaderMatcher
             -> Data.ProtoLens.Encoding.Bytes.Parser VirtualCluster
        loop x mutable'headers
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'headers)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'headers") frozen'headers x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        34
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "headers"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'headers y)
                                loop x v
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                                  mutable'headers
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'headers
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'headers <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'headers)
          "VirtualCluster"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage
                           _v))
                (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'headers") _x))
             ((Data.Monoid.<>)
                (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
                 in
                   if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                       Data.Monoid.mempty
                   else
                       (Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                         ((Prelude..)
                            (\ bs
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                       (Prelude.fromIntegral (Data.ByteString.length bs)))
                                    (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                            Data.Text.Encoding.encodeUtf8
                            _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData VirtualCluster where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_VirtualCluster'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_VirtualCluster'headers x__)
                (Control.DeepSeq.deepseq (_VirtualCluster'name x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' VirtualHost Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.domains' @:: Lens' VirtualHost [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'domains' @:: Lens' VirtualHost (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.routes' @:: Lens' VirtualHost [Route]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'routes' @:: Lens' VirtualHost (Data.Vector.Vector Route)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requireTls' @:: Lens' VirtualHost VirtualHost'TlsRequirementType@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.virtualClusters' @:: Lens' VirtualHost [VirtualCluster]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'virtualClusters' @:: Lens' VirtualHost (Data.Vector.Vector VirtualCluster)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.rateLimits' @:: Lens' VirtualHost [RateLimit]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'rateLimits' @:: Lens' VirtualHost (Data.Vector.Vector RateLimit)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToAdd' @:: Lens' VirtualHost [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToAdd' @:: Lens' VirtualHost (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToRemove' @:: Lens' VirtualHost [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToRemove' @:: Lens' VirtualHost (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToAdd' @:: Lens' VirtualHost [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToAdd' @:: Lens' VirtualHost (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToRemove' @:: Lens' VirtualHost [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToRemove' @:: Lens' VirtualHost (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.cors' @:: Lens' VirtualHost CorsPolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'cors' @:: Lens' VirtualHost (Prelude.Maybe CorsPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.typedPerFilterConfig' @:: Lens' VirtualHost (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.includeRequestAttemptCount' @:: Lens' VirtualHost Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.includeAttemptCountInResponse' @:: Lens' VirtualHost Prelude.Bool@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryPolicy' @:: Lens' VirtualHost RetryPolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryPolicy' @:: Lens' VirtualHost (Prelude.Maybe RetryPolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.retryPolicyTypedConfig' @:: Lens' VirtualHost Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'retryPolicyTypedConfig' @:: Lens' VirtualHost (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hedgePolicy' @:: Lens' VirtualHost HedgePolicy@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hedgePolicy' @:: Lens' VirtualHost (Prelude.Maybe HedgePolicy)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.perRequestBufferLimitBytes' @:: Lens' VirtualHost Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'perRequestBufferLimitBytes' @:: Lens' VirtualHost (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@ -}
data VirtualHost
  = VirtualHost'_constructor {_VirtualHost'name :: !Data.Text.Text,
                              _VirtualHost'domains :: !(Data.Vector.Vector Data.Text.Text),
                              _VirtualHost'routes :: !(Data.Vector.Vector Route),
                              _VirtualHost'requireTls :: !VirtualHost'TlsRequirementType,
                              _VirtualHost'virtualClusters :: !(Data.Vector.Vector VirtualCluster),
                              _VirtualHost'rateLimits :: !(Data.Vector.Vector RateLimit),
                              _VirtualHost'requestHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                              _VirtualHost'requestHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                              _VirtualHost'responseHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                              _VirtualHost'responseHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                              _VirtualHost'cors :: !(Prelude.Maybe CorsPolicy),
                              _VirtualHost'typedPerFilterConfig :: !(Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any),
                              _VirtualHost'includeRequestAttemptCount :: !Prelude.Bool,
                              _VirtualHost'includeAttemptCountInResponse :: !Prelude.Bool,
                              _VirtualHost'retryPolicy :: !(Prelude.Maybe RetryPolicy),
                              _VirtualHost'retryPolicyTypedConfig :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                              _VirtualHost'hedgePolicy :: !(Prelude.Maybe HedgePolicy),
                              _VirtualHost'perRequestBufferLimitBytes :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                              _VirtualHost'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show VirtualHost where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField VirtualHost "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'name (\ x__ y__ -> x__ {_VirtualHost'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "domains" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'domains
           (\ x__ y__ -> x__ {_VirtualHost'domains = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'domains" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'domains
           (\ x__ y__ -> x__ {_VirtualHost'domains = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "routes" [Route] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'routes (\ x__ y__ -> x__ {_VirtualHost'routes = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'routes" (Data.Vector.Vector Route) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'routes (\ x__ y__ -> x__ {_VirtualHost'routes = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "requireTls" VirtualHost'TlsRequirementType where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'requireTls
           (\ x__ y__ -> x__ {_VirtualHost'requireTls = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "virtualClusters" [VirtualCluster] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'virtualClusters
           (\ x__ y__ -> x__ {_VirtualHost'virtualClusters = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'virtualClusters" (Data.Vector.Vector VirtualCluster) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'virtualClusters
           (\ x__ y__ -> x__ {_VirtualHost'virtualClusters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "rateLimits" [RateLimit] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'rateLimits
           (\ x__ y__ -> x__ {_VirtualHost'rateLimits = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'rateLimits" (Data.Vector.Vector RateLimit) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'rateLimits
           (\ x__ y__ -> x__ {_VirtualHost'rateLimits = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "requestHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'requestHeadersToAdd
           (\ x__ y__ -> x__ {_VirtualHost'requestHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'requestHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'requestHeadersToAdd
           (\ x__ y__ -> x__ {_VirtualHost'requestHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "requestHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'requestHeadersToRemove
           (\ x__ y__ -> x__ {_VirtualHost'requestHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'requestHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'requestHeadersToRemove
           (\ x__ y__ -> x__ {_VirtualHost'requestHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "responseHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'responseHeadersToAdd
           (\ x__ y__ -> x__ {_VirtualHost'responseHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'responseHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'responseHeadersToAdd
           (\ x__ y__ -> x__ {_VirtualHost'responseHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "responseHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'responseHeadersToRemove
           (\ x__ y__ -> x__ {_VirtualHost'responseHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField VirtualHost "vec'responseHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'responseHeadersToRemove
           (\ x__ y__ -> x__ {_VirtualHost'responseHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "cors" CorsPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'cors (\ x__ y__ -> x__ {_VirtualHost'cors = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost "maybe'cors" (Prelude.Maybe CorsPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'cors (\ x__ y__ -> x__ {_VirtualHost'cors = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "typedPerFilterConfig" (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'typedPerFilterConfig
           (\ x__ y__ -> x__ {_VirtualHost'typedPerFilterConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "includeRequestAttemptCount" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'includeRequestAttemptCount
           (\ x__ y__ -> x__ {_VirtualHost'includeRequestAttemptCount = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "includeAttemptCountInResponse" Prelude.Bool where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'includeAttemptCountInResponse
           (\ x__ y__
              -> x__ {_VirtualHost'includeAttemptCountInResponse = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "retryPolicy" RetryPolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'retryPolicy
           (\ x__ y__ -> x__ {_VirtualHost'retryPolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost "maybe'retryPolicy" (Prelude.Maybe RetryPolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'retryPolicy
           (\ x__ y__ -> x__ {_VirtualHost'retryPolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "retryPolicyTypedConfig" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'retryPolicyTypedConfig
           (\ x__ y__ -> x__ {_VirtualHost'retryPolicyTypedConfig = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost "maybe'retryPolicyTypedConfig" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'retryPolicyTypedConfig
           (\ x__ y__ -> x__ {_VirtualHost'retryPolicyTypedConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "hedgePolicy" HedgePolicy where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'hedgePolicy
           (\ x__ y__ -> x__ {_VirtualHost'hedgePolicy = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost "maybe'hedgePolicy" (Prelude.Maybe HedgePolicy) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'hedgePolicy
           (\ x__ y__ -> x__ {_VirtualHost'hedgePolicy = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost "perRequestBufferLimitBytes" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'perRequestBufferLimitBytes
           (\ x__ y__ -> x__ {_VirtualHost'perRequestBufferLimitBytes = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost "maybe'perRequestBufferLimitBytes" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'perRequestBufferLimitBytes
           (\ x__ y__ -> x__ {_VirtualHost'perRequestBufferLimitBytes = y__}))
        Prelude.id
instance Data.ProtoLens.Message VirtualHost where
  messageName _ = Data.Text.pack "envoy.config.route.v3.VirtualHost"
  packedMessageDescriptor _
    = "\n\
      \\vVirtualHost\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2,\n\
      \\adomains\CAN\STX \ETX(\tR\adomainsB\DC2\250B\SI\146\SOH\f\b\SOH\"\br\ACK\192\SOH\STX\200\SOH\NUL\DC24\n\
      \\ACKroutes\CAN\ETX \ETX(\v2\FS.envoy.config.route.v3.RouteR\ACKroutes\DC2`\n\
      \\vrequire_tls\CAN\EOT \SOH(\SO25.envoy.config.route.v3.VirtualHost.TlsRequirementTypeR\n\
      \requireTlsB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2P\n\
      \\DLEvirtual_clusters\CAN\ENQ \ETX(\v2%.envoy.config.route.v3.VirtualClusterR\SIvirtualClusters\DC2A\n\
      \\vrate_limits\CAN\ACK \ETX(\v2 .envoy.config.route.v3.RateLimitR\n\
      \rateLimits\DC2g\n\
      \\SYNrequest_headers_to_add\CAN\a \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
      \\EMrequest_headers_to_remove\CAN\r \ETX(\tR\SYNrequestHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2i\n\
      \\ETBresponse_headers_to_add\CAN\n\
      \ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2O\n\
      \\SUBresponse_headers_to_remove\CAN\v \ETX(\tR\ETBresponseHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
      \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC25\n\
      \\EOTcors\CAN\b \SOH(\v2!.envoy.config.route.v3.CorsPolicyR\EOTcors\DC2s\n\
      \\ETBtyped_per_filter_config\CAN\SI \ETX(\v2<.envoy.config.route.v3.VirtualHost.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2A\n\
      \\GSinclude_request_attempt_count\CAN\SO \SOH(\bR\SUBincludeRequestAttemptCount\DC2H\n\
      \!include_attempt_count_in_response\CAN\DC3 \SOH(\bR\GSincludeAttemptCountInResponse\DC2E\n\
      \\fretry_policy\CAN\DLE \SOH(\v2\".envoy.config.route.v3.RetryPolicyR\vretryPolicy\DC2O\n\
      \\EMretry_policy_typed_config\CAN\DC4 \SOH(\v2\DC4.google.protobuf.AnyR\SYNretryPolicyTypedConfig\DC2E\n\
      \\fhedge_policy\CAN\DC1 \SOH(\v2\".envoy.config.route.v3.HedgePolicyR\vhedgePolicy\DC2`\n\
      \\RSper_request_buffer_limit_bytes\CAN\DC2 \SOH(\v2\FS.google.protobuf.UInt32ValueR\SUBperRequestBufferLimitBytes\SUB]\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOH\":\n\
      \\DC2TlsRequirementType\DC2\b\n\
      \\EOTNONE\DLE\NUL\DC2\DC1\n\
      \\rEXTERNAL_ONLY\DLE\SOH\DC2\a\n\
      \\ETXALL\DLE\STX:%\154\197\136\RS \n\
      \\RSenvoy.api.v2.route.VirtualHostJ\EOT\b\t\DLE\n\
      \J\EOT\b\f\DLE\rR\DC1per_filter_config"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        domains__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "domains"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"domains")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        routes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "routes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Route)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked (Data.ProtoLens.Field.field @"routes")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        requireTls__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "require_tls"
              (Data.ProtoLens.ScalarField Data.ProtoLens.EnumField ::
                 Data.ProtoLens.FieldTypeDescriptor VirtualHost'TlsRequirementType)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"requireTls")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        virtualClusters__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "virtual_clusters"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor VirtualCluster)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"virtualClusters")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        rateLimits__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "rate_limits"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RateLimit)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"rateLimits")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        requestHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        requestHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        responseHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        responseHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        cors__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "cors"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor CorsPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'cors")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        typedPerFilterConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "typed_per_filter_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor VirtualHost'TypedPerFilterConfigEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"typedPerFilterConfig")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        includeRequestAttemptCount__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "include_request_attempt_count"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"includeRequestAttemptCount")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        includeAttemptCountInResponse__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "include_attempt_count_in_response"
              (Data.ProtoLens.ScalarField Data.ProtoLens.BoolField ::
                 Data.ProtoLens.FieldTypeDescriptor Prelude.Bool)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"includeAttemptCountInResponse")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        retryPolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor RetryPolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicy")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        retryPolicyTypedConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "retry_policy_typed_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'retryPolicyTypedConfig")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        hedgePolicy__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "hedge_policy"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor HedgePolicy)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hedgePolicy")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
        perRequestBufferLimitBytes__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "per_request_buffer_limit_bytes"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field
                    @"maybe'perRequestBufferLimitBytes")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 2, domains__field_descriptor),
           (Data.ProtoLens.Tag 3, routes__field_descriptor),
           (Data.ProtoLens.Tag 4, requireTls__field_descriptor),
           (Data.ProtoLens.Tag 5, virtualClusters__field_descriptor),
           (Data.ProtoLens.Tag 6, rateLimits__field_descriptor),
           (Data.ProtoLens.Tag 7, requestHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 13, requestHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 10, responseHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 11, responseHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 8, cors__field_descriptor),
           (Data.ProtoLens.Tag 15, typedPerFilterConfig__field_descriptor),
           (Data.ProtoLens.Tag 14, 
            includeRequestAttemptCount__field_descriptor),
           (Data.ProtoLens.Tag 19, 
            includeAttemptCountInResponse__field_descriptor),
           (Data.ProtoLens.Tag 16, retryPolicy__field_descriptor),
           (Data.ProtoLens.Tag 20, retryPolicyTypedConfig__field_descriptor),
           (Data.ProtoLens.Tag 17, hedgePolicy__field_descriptor),
           (Data.ProtoLens.Tag 18, 
            perRequestBufferLimitBytes__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _VirtualHost'_unknownFields
        (\ x__ y__ -> x__ {_VirtualHost'_unknownFields = y__})
  defMessage
    = VirtualHost'_constructor
        {_VirtualHost'name = Data.ProtoLens.fieldDefault,
         _VirtualHost'domains = Data.Vector.Generic.empty,
         _VirtualHost'routes = Data.Vector.Generic.empty,
         _VirtualHost'requireTls = Data.ProtoLens.fieldDefault,
         _VirtualHost'virtualClusters = Data.Vector.Generic.empty,
         _VirtualHost'rateLimits = Data.Vector.Generic.empty,
         _VirtualHost'requestHeadersToAdd = Data.Vector.Generic.empty,
         _VirtualHost'requestHeadersToRemove = Data.Vector.Generic.empty,
         _VirtualHost'responseHeadersToAdd = Data.Vector.Generic.empty,
         _VirtualHost'responseHeadersToRemove = Data.Vector.Generic.empty,
         _VirtualHost'cors = Prelude.Nothing,
         _VirtualHost'typedPerFilterConfig = Data.Map.empty,
         _VirtualHost'includeRequestAttemptCount = Data.ProtoLens.fieldDefault,
         _VirtualHost'includeAttemptCountInResponse = Data.ProtoLens.fieldDefault,
         _VirtualHost'retryPolicy = Prelude.Nothing,
         _VirtualHost'retryPolicyTypedConfig = Prelude.Nothing,
         _VirtualHost'hedgePolicy = Prelude.Nothing,
         _VirtualHost'perRequestBufferLimitBytes = Prelude.Nothing,
         _VirtualHost'_unknownFields = []}
  parseMessage
    = let
        loop ::
          VirtualHost
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld RateLimit
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                      -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
                         -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                            -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Route
                               -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld VirtualCluster
                                  -> Data.ProtoLens.Encoding.Bytes.Parser VirtualHost
        loop
          x
          mutable'domains
          mutable'rateLimits
          mutable'requestHeadersToAdd
          mutable'requestHeadersToRemove
          mutable'responseHeadersToAdd
          mutable'responseHeadersToRemove
          mutable'routes
          mutable'virtualClusters
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'domains <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                             mutable'domains)
                      frozen'rateLimits <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                             (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                mutable'rateLimits)
                      frozen'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                      (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                         mutable'requestHeadersToAdd)
                      frozen'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                            mutable'requestHeadersToRemove)
                      frozen'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                          mutable'responseHeadersToAdd)
                      frozen'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'responseHeadersToRemove)
                      frozen'routes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                            mutable'routes)
                      frozen'virtualClusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                     mutable'virtualClusters)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'domains")
                              frozen'domains
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'rateLimits")
                                 frozen'rateLimits
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd")
                                    frozen'requestHeadersToAdd
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove")
                                       frozen'requestHeadersToRemove
                                       (Lens.Family2.set
                                          (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd")
                                          frozen'responseHeadersToAdd
                                          (Lens.Family2.set
                                             (Data.ProtoLens.Field.field
                                                @"vec'responseHeadersToRemove")
                                             frozen'responseHeadersToRemove
                                             (Lens.Family2.set
                                                (Data.ProtoLens.Field.field @"vec'routes")
                                                frozen'routes
                                                (Lens.Family2.set
                                                   (Data.ProtoLens.Field.field
                                                      @"vec'virtualClusters")
                                                   frozen'virtualClusters
                                                   x)))))))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        18
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "domains"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'domains y)
                                loop
                                  x
                                  v
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        26
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "routes"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'routes y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  v
                                  mutable'virtualClusters
                        32
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          Prelude.toEnum
                                          (Prelude.fmap
                                             Prelude.fromIntegral
                                             Data.ProtoLens.Encoding.Bytes.getVarInt))
                                       "require_tls"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"requireTls") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        42
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "virtual_clusters"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'virtualClusters y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  v
                        50
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "rate_limits"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'rateLimits y)
                                loop
                                  x
                                  mutable'domains
                                  v
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        58
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "request_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToAdd y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  v
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        106
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "request_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToRemove y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  v
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        82
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "response_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToAdd y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  v
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        90
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "response_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToRemove y)
                                loop
                                  x
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  v
                                  mutable'routes
                                  mutable'virtualClusters
                        66
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "cors"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"cors") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        122
                          -> do !(entry :: VirtualHost'TypedPerFilterConfigEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                           Data.ProtoLens.Encoding.Bytes.isolate
                                                                                             (Prelude.fromIntegral
                                                                                                len)
                                                                                             Data.ProtoLens.parseMessage)
                                                                                       "typed_per_filter_config"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"typedPerFilterConfig")
                                        (\ !t -> Data.Map.insert key value t)
                                        x)
                                     mutable'domains
                                     mutable'rateLimits
                                     mutable'requestHeadersToAdd
                                     mutable'requestHeadersToRemove
                                     mutable'responseHeadersToAdd
                                     mutable'responseHeadersToRemove
                                     mutable'routes
                                     mutable'virtualClusters)
                        112
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "include_request_attempt_count"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"includeRequestAttemptCount") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        152
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (Prelude.fmap
                                          ((Prelude./=) 0) Data.ProtoLens.Encoding.Bytes.getVarInt)
                                       "include_attempt_count_in_response"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"includeAttemptCountInResponse")
                                     y
                                     x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        130
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"retryPolicy") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        162
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "retry_policy_typed_config"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"retryPolicyTypedConfig") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        138
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "hedge_policy"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"hedgePolicy") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        146
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "per_request_buffer_limit_bytes"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"perRequestBufferLimitBytes") y x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'domains
                                  mutable'rateLimits
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                                  mutable'routes
                                  mutable'virtualClusters
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'domains <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                   Data.ProtoLens.Encoding.Growing.new
              mutable'rateLimits <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                      Data.ProtoLens.Encoding.Growing.new
              mutable'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               Data.ProtoLens.Encoding.Growing.new
              mutable'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              mutable'routes <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                  Data.ProtoLens.Encoding.Growing.new
              mutable'virtualClusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'domains
                mutable'rateLimits
                mutable'requestHeadersToAdd
                mutable'requestHeadersToRemove
                mutable'responseHeadersToAdd
                mutable'responseHeadersToRemove
                mutable'routes
                mutable'virtualClusters)
          "VirtualHost"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                   (\ _v
                      -> (Data.Monoid.<>)
                           (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                           ((Prelude..)
                              (\ bs
                                 -> (Data.Monoid.<>)
                                      (Data.ProtoLens.Encoding.Bytes.putVarInt
                                         (Prelude.fromIntegral (Data.ByteString.length bs)))
                                      (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                              Data.Text.Encoding.encodeUtf8
                              _v))
                   (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'domains") _x))
                ((Data.Monoid.<>)
                   (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                      (\ _v
                         -> (Data.Monoid.<>)
                              (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                              ((Prelude..)
                                 (\ bs
                                    -> (Data.Monoid.<>)
                                         (Data.ProtoLens.Encoding.Bytes.putVarInt
                                            (Prelude.fromIntegral (Data.ByteString.length bs)))
                                         (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                 Data.ProtoLens.encodeMessage
                                 _v))
                      (Lens.Family2.view (Data.ProtoLens.Field.field @"vec'routes") _x))
                   ((Data.Monoid.<>)
                      (let
                         _v
                           = Lens.Family2.view (Data.ProtoLens.Field.field @"requireTls") _x
                       in
                         if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                             Data.Monoid.mempty
                         else
                             (Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.putVarInt 32)
                               ((Prelude..)
                                  ((Prelude..)
                                     Data.ProtoLens.Encoding.Bytes.putVarInt Prelude.fromIntegral)
                                  Prelude.fromEnum
                                  _v))
                      ((Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                            (\ _v
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                    ((Prelude..)
                                       (\ bs
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                  (Prelude.fromIntegral
                                                     (Data.ByteString.length bs)))
                                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                       Data.ProtoLens.encodeMessage
                                       _v))
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"vec'virtualClusters") _x))
                         ((Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage
                                          _v))
                               (Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"vec'rateLimits") _x))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 58)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.ProtoLens.encodeMessage
                                             _v))
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd") _x))
                               ((Data.Monoid.<>)
                                  (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                     (\ _v
                                        -> (Data.Monoid.<>)
                                             (Data.ProtoLens.Encoding.Bytes.putVarInt 106)
                                             ((Prelude..)
                                                (\ bs
                                                   -> (Data.Monoid.<>)
                                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                           (Prelude.fromIntegral
                                                              (Data.ByteString.length bs)))
                                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                                Data.Text.Encoding.encodeUtf8
                                                _v))
                                     (Lens.Family2.view
                                        (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove")
                                        _x))
                                  ((Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.ProtoLens.encodeMessage
                                                   _v))
                                        (Lens.Family2.view
                                           (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd")
                                           _x))
                                     ((Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                           (\ _v
                                              -> (Data.Monoid.<>)
                                                   (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                                   ((Prelude..)
                                                      (\ bs
                                                         -> (Data.Monoid.<>)
                                                              (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                 (Prelude.fromIntegral
                                                                    (Data.ByteString.length bs)))
                                                              (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                 bs))
                                                      Data.Text.Encoding.encodeUtf8
                                                      _v))
                                           (Lens.Family2.view
                                              (Data.ProtoLens.Field.field
                                                 @"vec'responseHeadersToRemove")
                                              _x))
                                        ((Data.Monoid.<>)
                                           (case
                                                Lens.Family2.view
                                                  (Data.ProtoLens.Field.field @"maybe'cors") _x
                                            of
                                              Prelude.Nothing -> Data.Monoid.mempty
                                              (Prelude.Just _v)
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt 66)
                                                     ((Prelude..)
                                                        (\ bs
                                                           -> (Data.Monoid.<>)
                                                                (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                   (Prelude.fromIntegral
                                                                      (Data.ByteString.length bs)))
                                                                (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                   bs))
                                                        Data.ProtoLens.encodeMessage
                                                        _v))
                                           ((Data.Monoid.<>)
                                              (Data.Monoid.mconcat
                                                 (Prelude.map
                                                    (\ _v
                                                       -> (Data.Monoid.<>)
                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                               122)
                                                            ((Prelude..)
                                                               (\ bs
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          (Prelude.fromIntegral
                                                                             (Data.ByteString.length
                                                                                bs)))
                                                                       (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                          bs))
                                                               Data.ProtoLens.encodeMessage
                                                               (Lens.Family2.set
                                                                  (Data.ProtoLens.Field.field
                                                                     @"key")
                                                                  (Prelude.fst _v)
                                                                  (Lens.Family2.set
                                                                     (Data.ProtoLens.Field.field
                                                                        @"value")
                                                                     (Prelude.snd _v)
                                                                     (Data.ProtoLens.defMessage ::
                                                                        VirtualHost'TypedPerFilterConfigEntry)))))
                                                    (Data.Map.toList
                                                       (Lens.Family2.view
                                                          (Data.ProtoLens.Field.field
                                                             @"typedPerFilterConfig")
                                                          _x))))
                                              ((Data.Monoid.<>)
                                                 (let
                                                    _v
                                                      = Lens.Family2.view
                                                          (Data.ProtoLens.Field.field
                                                             @"includeRequestAttemptCount")
                                                          _x
                                                  in
                                                    if (Prelude.==)
                                                         _v Data.ProtoLens.fieldDefault then
                                                        Data.Monoid.mempty
                                                    else
                                                        (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             112)
                                                          ((Prelude..)
                                                             Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             (\ b -> if b then 1 else 0)
                                                             _v))
                                                 ((Data.Monoid.<>)
                                                    (let
                                                       _v
                                                         = Lens.Family2.view
                                                             (Data.ProtoLens.Field.field
                                                                @"includeAttemptCountInResponse")
                                                             _x
                                                     in
                                                       if (Prelude.==)
                                                            _v Data.ProtoLens.fieldDefault then
                                                           Data.Monoid.mempty
                                                       else
                                                           (Data.Monoid.<>)
                                                             (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                152)
                                                             ((Prelude..)
                                                                Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                (\ b -> if b then 1 else 0)
                                                                _v))
                                                    ((Data.Monoid.<>)
                                                       (case
                                                            Lens.Family2.view
                                                              (Data.ProtoLens.Field.field
                                                                 @"maybe'retryPolicy")
                                                              _x
                                                        of
                                                          Prelude.Nothing -> Data.Monoid.mempty
                                                          (Prelude.Just _v)
                                                            -> (Data.Monoid.<>)
                                                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                    130)
                                                                 ((Prelude..)
                                                                    (\ bs
                                                                       -> (Data.Monoid.<>)
                                                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                               (Prelude.fromIntegral
                                                                                  (Data.ByteString.length
                                                                                     bs)))
                                                                            (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                               bs))
                                                                    Data.ProtoLens.encodeMessage
                                                                    _v))
                                                       ((Data.Monoid.<>)
                                                          (case
                                                               Lens.Family2.view
                                                                 (Data.ProtoLens.Field.field
                                                                    @"maybe'retryPolicyTypedConfig")
                                                                 _x
                                                           of
                                                             Prelude.Nothing -> Data.Monoid.mempty
                                                             (Prelude.Just _v)
                                                               -> (Data.Monoid.<>)
                                                                    (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                       162)
                                                                    ((Prelude..)
                                                                       (\ bs
                                                                          -> (Data.Monoid.<>)
                                                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                  (Prelude.fromIntegral
                                                                                     (Data.ByteString.length
                                                                                        bs)))
                                                                               (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                  bs))
                                                                       Data.ProtoLens.encodeMessage
                                                                       _v))
                                                          ((Data.Monoid.<>)
                                                             (case
                                                                  Lens.Family2.view
                                                                    (Data.ProtoLens.Field.field
                                                                       @"maybe'hedgePolicy")
                                                                    _x
                                                              of
                                                                Prelude.Nothing
                                                                  -> Data.Monoid.mempty
                                                                (Prelude.Just _v)
                                                                  -> (Data.Monoid.<>)
                                                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                          138)
                                                                       ((Prelude..)
                                                                          (\ bs
                                                                             -> (Data.Monoid.<>)
                                                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                     (Prelude.fromIntegral
                                                                                        (Data.ByteString.length
                                                                                           bs)))
                                                                                  (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                     bs))
                                                                          Data.ProtoLens.encodeMessage
                                                                          _v))
                                                             ((Data.Monoid.<>)
                                                                (case
                                                                     Lens.Family2.view
                                                                       (Data.ProtoLens.Field.field
                                                                          @"maybe'perRequestBufferLimitBytes")
                                                                       _x
                                                                 of
                                                                   Prelude.Nothing
                                                                     -> Data.Monoid.mempty
                                                                   (Prelude.Just _v)
                                                                     -> (Data.Monoid.<>)
                                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                             146)
                                                                          ((Prelude..)
                                                                             (\ bs
                                                                                -> (Data.Monoid.<>)
                                                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                                                        (Prelude.fromIntegral
                                                                                           (Data.ByteString.length
                                                                                              bs)))
                                                                                     (Data.ProtoLens.Encoding.Bytes.putBytes
                                                                                        bs))
                                                                             Data.ProtoLens.encodeMessage
                                                                             _v))
                                                                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                                                   (Lens.Family2.view
                                                                      Data.ProtoLens.unknownFields
                                                                      _x)))))))))))))))))))
instance Control.DeepSeq.NFData VirtualHost where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_VirtualHost'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_VirtualHost'name x__)
                (Control.DeepSeq.deepseq
                   (_VirtualHost'domains x__)
                   (Control.DeepSeq.deepseq
                      (_VirtualHost'routes x__)
                      (Control.DeepSeq.deepseq
                         (_VirtualHost'requireTls x__)
                         (Control.DeepSeq.deepseq
                            (_VirtualHost'virtualClusters x__)
                            (Control.DeepSeq.deepseq
                               (_VirtualHost'rateLimits x__)
                               (Control.DeepSeq.deepseq
                                  (_VirtualHost'requestHeadersToAdd x__)
                                  (Control.DeepSeq.deepseq
                                     (_VirtualHost'requestHeadersToRemove x__)
                                     (Control.DeepSeq.deepseq
                                        (_VirtualHost'responseHeadersToAdd x__)
                                        (Control.DeepSeq.deepseq
                                           (_VirtualHost'responseHeadersToRemove x__)
                                           (Control.DeepSeq.deepseq
                                              (_VirtualHost'cors x__)
                                              (Control.DeepSeq.deepseq
                                                 (_VirtualHost'typedPerFilterConfig x__)
                                                 (Control.DeepSeq.deepseq
                                                    (_VirtualHost'includeRequestAttemptCount x__)
                                                    (Control.DeepSeq.deepseq
                                                       (_VirtualHost'includeAttemptCountInResponse
                                                          x__)
                                                       (Control.DeepSeq.deepseq
                                                          (_VirtualHost'retryPolicy x__)
                                                          (Control.DeepSeq.deepseq
                                                             (_VirtualHost'retryPolicyTypedConfig
                                                                x__)
                                                             (Control.DeepSeq.deepseq
                                                                (_VirtualHost'hedgePolicy x__)
                                                                (Control.DeepSeq.deepseq
                                                                   (_VirtualHost'perRequestBufferLimitBytes
                                                                      x__)
                                                                   ()))))))))))))))))))
newtype VirtualHost'TlsRequirementType'UnrecognizedValue
  = VirtualHost'TlsRequirementType'UnrecognizedValue Data.Int.Int32
  deriving stock (Prelude.Eq, Prelude.Ord, Prelude.Show)
data VirtualHost'TlsRequirementType
  = VirtualHost'NONE |
    VirtualHost'EXTERNAL_ONLY |
    VirtualHost'ALL |
    VirtualHost'TlsRequirementType'Unrecognized !VirtualHost'TlsRequirementType'UnrecognizedValue
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.MessageEnum VirtualHost'TlsRequirementType where
  maybeToEnum 0 = Prelude.Just VirtualHost'NONE
  maybeToEnum 1 = Prelude.Just VirtualHost'EXTERNAL_ONLY
  maybeToEnum 2 = Prelude.Just VirtualHost'ALL
  maybeToEnum k
    = Prelude.Just
        (VirtualHost'TlsRequirementType'Unrecognized
           (VirtualHost'TlsRequirementType'UnrecognizedValue
              (Prelude.fromIntegral k)))
  showEnum VirtualHost'NONE = "NONE"
  showEnum VirtualHost'EXTERNAL_ONLY = "EXTERNAL_ONLY"
  showEnum VirtualHost'ALL = "ALL"
  showEnum
    (VirtualHost'TlsRequirementType'Unrecognized (VirtualHost'TlsRequirementType'UnrecognizedValue k))
    = Prelude.show k
  readEnum k
    | (Prelude.==) k "NONE" = Prelude.Just VirtualHost'NONE
    | (Prelude.==) k "EXTERNAL_ONLY"
    = Prelude.Just VirtualHost'EXTERNAL_ONLY
    | (Prelude.==) k "ALL" = Prelude.Just VirtualHost'ALL
    | Prelude.otherwise
    = (Prelude.>>=) (Text.Read.readMaybe k) Data.ProtoLens.maybeToEnum
instance Prelude.Bounded VirtualHost'TlsRequirementType where
  minBound = VirtualHost'NONE
  maxBound = VirtualHost'ALL
instance Prelude.Enum VirtualHost'TlsRequirementType where
  toEnum k__
    = Prelude.maybe
        (Prelude.error
           ((Prelude.++)
              "toEnum: unknown value for enum TlsRequirementType: "
              (Prelude.show k__)))
        Prelude.id
        (Data.ProtoLens.maybeToEnum k__)
  fromEnum VirtualHost'NONE = 0
  fromEnum VirtualHost'EXTERNAL_ONLY = 1
  fromEnum VirtualHost'ALL = 2
  fromEnum
    (VirtualHost'TlsRequirementType'Unrecognized (VirtualHost'TlsRequirementType'UnrecognizedValue k))
    = Prelude.fromIntegral k
  succ VirtualHost'ALL
    = Prelude.error
        "VirtualHost'TlsRequirementType.succ: bad argument VirtualHost'ALL. This value would be out of bounds."
  succ VirtualHost'NONE = VirtualHost'EXTERNAL_ONLY
  succ VirtualHost'EXTERNAL_ONLY = VirtualHost'ALL
  succ (VirtualHost'TlsRequirementType'Unrecognized _)
    = Prelude.error
        "VirtualHost'TlsRequirementType.succ: bad argument: unrecognized value"
  pred VirtualHost'NONE
    = Prelude.error
        "VirtualHost'TlsRequirementType.pred: bad argument VirtualHost'NONE. This value would be out of bounds."
  pred VirtualHost'EXTERNAL_ONLY = VirtualHost'NONE
  pred VirtualHost'ALL = VirtualHost'EXTERNAL_ONLY
  pred (VirtualHost'TlsRequirementType'Unrecognized _)
    = Prelude.error
        "VirtualHost'TlsRequirementType.pred: bad argument: unrecognized value"
  enumFrom = Data.ProtoLens.Message.Enum.messageEnumFrom
  enumFromTo = Data.ProtoLens.Message.Enum.messageEnumFromTo
  enumFromThen = Data.ProtoLens.Message.Enum.messageEnumFromThen
  enumFromThenTo = Data.ProtoLens.Message.Enum.messageEnumFromThenTo
instance Data.ProtoLens.FieldDefault VirtualHost'TlsRequirementType where
  fieldDefault = VirtualHost'NONE
instance Control.DeepSeq.NFData VirtualHost'TlsRequirementType where
  rnf x__ = Prelude.seq x__ ()
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.key' @:: Lens' VirtualHost'TypedPerFilterConfigEntry Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.value' @:: Lens' VirtualHost'TypedPerFilterConfigEntry Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'value' @:: Lens' VirtualHost'TypedPerFilterConfigEntry (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@ -}
data VirtualHost'TypedPerFilterConfigEntry
  = VirtualHost'TypedPerFilterConfigEntry'_constructor {_VirtualHost'TypedPerFilterConfigEntry'key :: !Data.Text.Text,
                                                        _VirtualHost'TypedPerFilterConfigEntry'value :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                                                        _VirtualHost'TypedPerFilterConfigEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show VirtualHost'TypedPerFilterConfigEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField VirtualHost'TypedPerFilterConfigEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'TypedPerFilterConfigEntry'key
           (\ x__ y__
              -> x__ {_VirtualHost'TypedPerFilterConfigEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField VirtualHost'TypedPerFilterConfigEntry "value" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'TypedPerFilterConfigEntry'value
           (\ x__ y__
              -> x__ {_VirtualHost'TypedPerFilterConfigEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField VirtualHost'TypedPerFilterConfigEntry "maybe'value" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _VirtualHost'TypedPerFilterConfigEntry'value
           (\ x__ y__
              -> x__ {_VirtualHost'TypedPerFilterConfigEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message VirtualHost'TypedPerFilterConfigEntry where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.VirtualHost.TypedPerFilterConfigEntry"
  packedMessageDescriptor _
    = "\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost'TypedPerFilterConfigEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor VirtualHost'TypedPerFilterConfigEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _VirtualHost'TypedPerFilterConfigEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_VirtualHost'TypedPerFilterConfigEntry'_unknownFields = y__})
  defMessage
    = VirtualHost'TypedPerFilterConfigEntry'_constructor
        {_VirtualHost'TypedPerFilterConfigEntry'key = Data.ProtoLens.fieldDefault,
         _VirtualHost'TypedPerFilterConfigEntry'value = Prelude.Nothing,
         _VirtualHost'TypedPerFilterConfigEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          VirtualHost'TypedPerFilterConfigEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser VirtualHost'TypedPerFilterConfigEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TypedPerFilterConfigEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData VirtualHost'TypedPerFilterConfigEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_VirtualHost'TypedPerFilterConfigEntry'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_VirtualHost'TypedPerFilterConfigEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_VirtualHost'TypedPerFilterConfigEntry'value x__) ()))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.clusters' @:: Lens' WeightedCluster [WeightedCluster'ClusterWeight]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'clusters' @:: Lens' WeightedCluster (Data.Vector.Vector WeightedCluster'ClusterWeight)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.totalWeight' @:: Lens' WeightedCluster Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'totalWeight' @:: Lens' WeightedCluster (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.runtimeKeyPrefix' @:: Lens' WeightedCluster Data.Text.Text@ -}
data WeightedCluster
  = WeightedCluster'_constructor {_WeightedCluster'clusters :: !(Data.Vector.Vector WeightedCluster'ClusterWeight),
                                  _WeightedCluster'totalWeight :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                                  _WeightedCluster'runtimeKeyPrefix :: !Data.Text.Text,
                                  _WeightedCluster'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show WeightedCluster where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField WeightedCluster "clusters" [WeightedCluster'ClusterWeight] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'clusters
           (\ x__ y__ -> x__ {_WeightedCluster'clusters = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField WeightedCluster "vec'clusters" (Data.Vector.Vector WeightedCluster'ClusterWeight) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'clusters
           (\ x__ y__ -> x__ {_WeightedCluster'clusters = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster "totalWeight" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'totalWeight
           (\ x__ y__ -> x__ {_WeightedCluster'totalWeight = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField WeightedCluster "maybe'totalWeight" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'totalWeight
           (\ x__ y__ -> x__ {_WeightedCluster'totalWeight = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster "runtimeKeyPrefix" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'runtimeKeyPrefix
           (\ x__ y__ -> x__ {_WeightedCluster'runtimeKeyPrefix = y__}))
        Prelude.id
instance Data.ProtoLens.Message WeightedCluster where
  messageName _
    = Data.Text.pack "envoy.config.route.v3.WeightedCluster"
  packedMessageDescriptor _
    = "\n\
      \\SIWeightedCluster\DC2Z\n\
      \\bclusters\CAN\SOH \ETX(\v24.envoy.config.route.v3.WeightedCluster.ClusterWeightR\bclustersB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2H\n\
      \\ftotal_weight\CAN\ETX \SOH(\v2\FS.google.protobuf.UInt32ValueR\vtotalWeightB\a\250B\EOT*\STX(\SOH\DC2,\n\
      \\DC2runtime_key_prefix\CAN\STX \SOH(\tR\DLEruntimeKeyPrefix\SUB\179\a\n\
      \\rClusterWeight\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC24\n\
      \\ACKweight\CAN\STX \SOH(\v2\FS.google.protobuf.UInt32ValueR\ACKweight\DC2E\n\
      \\SOmetadata_match\CAN\ETX \SOH(\v2\RS.envoy.config.core.v3.MetadataR\rmetadataMatch\DC2g\n\
      \\SYNrequest_headers_to_add\CAN\EOT \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2K\n\
      \\EMrequest_headers_to_remove\CAN\t \ETX(\tR\SYNrequestHeadersToRemoveB\DLE\250B\r\146\SOH\n\
      \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2i\n\
      \\ETBresponse_headers_to_add\CAN\ENQ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
      \\SUBresponse_headers_to_remove\CAN\ACK \ETX(\tR\ETBresponseHeadersToRemoveB\DLE\250B\r\146\SOH\n\
      \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2\133\SOH\n\
      \\ETBtyped_per_filter_config\CAN\n\
      \ \ETX(\v2N.envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2?\n\
      \\DC4host_rewrite_literal\CAN\v \SOH(\tH\NULR\DC2hostRewriteLiteralB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\SUB]\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOHB\CAN\n\
      \\SYNhost_rewrite_specifier:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.WeightedCluster.ClusterWeightJ\EOT\b\a\DLE\bJ\EOT\b\b\DLE\tR\DC1per_filter_config:)\154\197\136\RS$\n\
      \\"envoy.api.v2.route.WeightedCluster"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        clusters__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "clusters"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor WeightedCluster'ClusterWeight)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"clusters")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster
        totalWeight__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "total_weight"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'totalWeight")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster
        runtimeKeyPrefix__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "runtime_key_prefix"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional
                 (Data.ProtoLens.Field.field @"runtimeKeyPrefix")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, clusters__field_descriptor),
           (Data.ProtoLens.Tag 3, totalWeight__field_descriptor),
           (Data.ProtoLens.Tag 2, runtimeKeyPrefix__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _WeightedCluster'_unknownFields
        (\ x__ y__ -> x__ {_WeightedCluster'_unknownFields = y__})
  defMessage
    = WeightedCluster'_constructor
        {_WeightedCluster'clusters = Data.Vector.Generic.empty,
         _WeightedCluster'totalWeight = Prelude.Nothing,
         _WeightedCluster'runtimeKeyPrefix = Data.ProtoLens.fieldDefault,
         _WeightedCluster'_unknownFields = []}
  parseMessage
    = let
        loop ::
          WeightedCluster
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld WeightedCluster'ClusterWeight
             -> Data.ProtoLens.Encoding.Bytes.Parser WeightedCluster
        loop x mutable'clusters
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'clusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                           (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                              mutable'clusters)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'clusters") frozen'clusters x))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "clusters"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append mutable'clusters y)
                                loop x v
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "total_weight"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"totalWeight") y x)
                                  mutable'clusters
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "runtime_key_prefix"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"runtimeKeyPrefix") y x)
                                  mutable'clusters
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'clusters
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'clusters <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                    Data.ProtoLens.Encoding.Growing.new
              loop Data.ProtoLens.defMessage mutable'clusters)
          "WeightedCluster"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                (\ _v
                   -> (Data.Monoid.<>)
                        (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                        ((Prelude..)
                           (\ bs
                              -> (Data.Monoid.<>)
                                   (Data.ProtoLens.Encoding.Bytes.putVarInt
                                      (Prelude.fromIntegral (Data.ByteString.length bs)))
                                   (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                           Data.ProtoLens.encodeMessage
                           _v))
                (Lens.Family2.view
                   (Data.ProtoLens.Field.field @"vec'clusters") _x))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view
                       (Data.ProtoLens.Field.field @"maybe'totalWeight") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (let
                      _v
                        = Lens.Family2.view
                            (Data.ProtoLens.Field.field @"runtimeKeyPrefix") _x
                    in
                      if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                          Data.Monoid.mempty
                      else
                          (Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                            ((Prelude..)
                               (\ bs
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt
                                          (Prelude.fromIntegral (Data.ByteString.length bs)))
                                       (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                               Data.Text.Encoding.encodeUtf8
                               _v))
                   (Data.ProtoLens.Encoding.Wire.buildFieldSet
                      (Lens.Family2.view Data.ProtoLens.unknownFields _x))))
instance Control.DeepSeq.NFData WeightedCluster where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_WeightedCluster'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_WeightedCluster'clusters x__)
                (Control.DeepSeq.deepseq
                   (_WeightedCluster'totalWeight x__)
                   (Control.DeepSeq.deepseq
                      (_WeightedCluster'runtimeKeyPrefix x__) ())))
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.name' @:: Lens' WeightedCluster'ClusterWeight Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.weight' @:: Lens' WeightedCluster'ClusterWeight Proto.Google.Protobuf.Wrappers.UInt32Value@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'weight' @:: Lens' WeightedCluster'ClusterWeight (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.metadataMatch' @:: Lens' WeightedCluster'ClusterWeight Proto.Envoy.Config.Core.V3.Base.Metadata@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'metadataMatch' @:: Lens' WeightedCluster'ClusterWeight (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToAdd' @:: Lens' WeightedCluster'ClusterWeight [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToAdd' @:: Lens' WeightedCluster'ClusterWeight (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.requestHeadersToRemove' @:: Lens' WeightedCluster'ClusterWeight [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'requestHeadersToRemove' @:: Lens' WeightedCluster'ClusterWeight (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToAdd' @:: Lens' WeightedCluster'ClusterWeight [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToAdd' @:: Lens' WeightedCluster'ClusterWeight (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.responseHeadersToRemove' @:: Lens' WeightedCluster'ClusterWeight [Data.Text.Text]@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.vec'responseHeadersToRemove' @:: Lens' WeightedCluster'ClusterWeight (Data.Vector.Vector Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.typedPerFilterConfig' @:: Lens' WeightedCluster'ClusterWeight (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewriteSpecifier' @:: Lens' WeightedCluster'ClusterWeight (Prelude.Maybe WeightedCluster'ClusterWeight'HostRewriteSpecifier)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'hostRewriteLiteral' @:: Lens' WeightedCluster'ClusterWeight (Prelude.Maybe Data.Text.Text)@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.hostRewriteLiteral' @:: Lens' WeightedCluster'ClusterWeight Data.Text.Text@ -}
data WeightedCluster'ClusterWeight
  = WeightedCluster'ClusterWeight'_constructor {_WeightedCluster'ClusterWeight'name :: !Data.Text.Text,
                                                _WeightedCluster'ClusterWeight'weight :: !(Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value),
                                                _WeightedCluster'ClusterWeight'metadataMatch :: !(Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata),
                                                _WeightedCluster'ClusterWeight'requestHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                                                _WeightedCluster'ClusterWeight'requestHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                                                _WeightedCluster'ClusterWeight'responseHeadersToAdd :: !(Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption),
                                                _WeightedCluster'ClusterWeight'responseHeadersToRemove :: !(Data.Vector.Vector Data.Text.Text),
                                                _WeightedCluster'ClusterWeight'typedPerFilterConfig :: !(Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any),
                                                _WeightedCluster'ClusterWeight'hostRewriteSpecifier :: !(Prelude.Maybe WeightedCluster'ClusterWeight'HostRewriteSpecifier),
                                                _WeightedCluster'ClusterWeight'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show WeightedCluster'ClusterWeight where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
data WeightedCluster'ClusterWeight'HostRewriteSpecifier
  = WeightedCluster'ClusterWeight'HostRewriteLiteral !Data.Text.Text
  deriving stock (Prelude.Show, Prelude.Eq, Prelude.Ord)
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "name" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'name
           (\ x__ y__ -> x__ {_WeightedCluster'ClusterWeight'name = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "weight" Proto.Google.Protobuf.Wrappers.UInt32Value where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'weight
           (\ x__ y__ -> x__ {_WeightedCluster'ClusterWeight'weight = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "maybe'weight" (Prelude.Maybe Proto.Google.Protobuf.Wrappers.UInt32Value) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'weight
           (\ x__ y__ -> x__ {_WeightedCluster'ClusterWeight'weight = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "metadataMatch" Proto.Envoy.Config.Core.V3.Base.Metadata where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'metadataMatch
           (\ x__ y__
              -> x__ {_WeightedCluster'ClusterWeight'metadataMatch = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "maybe'metadataMatch" (Prelude.Maybe Proto.Envoy.Config.Core.V3.Base.Metadata) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'metadataMatch
           (\ x__ y__
              -> x__ {_WeightedCluster'ClusterWeight'metadataMatch = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "requestHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'requestHeadersToAdd
           (\ x__ y__
              -> x__ {_WeightedCluster'ClusterWeight'requestHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "vec'requestHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'requestHeadersToAdd
           (\ x__ y__
              -> x__ {_WeightedCluster'ClusterWeight'requestHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "requestHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'requestHeadersToRemove
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'requestHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "vec'requestHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'requestHeadersToRemove
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'requestHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "responseHeadersToAdd" [Proto.Envoy.Config.Core.V3.Base.HeaderValueOption] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'responseHeadersToAdd
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'responseHeadersToAdd = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "vec'responseHeadersToAdd" (Data.Vector.Vector Proto.Envoy.Config.Core.V3.Base.HeaderValueOption) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'responseHeadersToAdd
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'responseHeadersToAdd = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "responseHeadersToRemove" [Data.Text.Text] where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'responseHeadersToRemove
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'responseHeadersToRemove = y__}))
        (Lens.Family2.Unchecked.lens
           Data.Vector.Generic.toList
           (\ _ y__ -> Data.Vector.Generic.fromList y__))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "vec'responseHeadersToRemove" (Data.Vector.Vector Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'responseHeadersToRemove
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'responseHeadersToRemove = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "typedPerFilterConfig" (Data.Map.Map Data.Text.Text Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'typedPerFilterConfig
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'typedPerFilterConfig = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "maybe'hostRewriteSpecifier" (Prelude.Maybe WeightedCluster'ClusterWeight'HostRewriteSpecifier) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'hostRewriteSpecifier
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'hostRewriteSpecifier = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "maybe'hostRewriteLiteral" (Prelude.Maybe Data.Text.Text) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'hostRewriteSpecifier
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'hostRewriteSpecifier = y__}))
        (Lens.Family2.Unchecked.lens
           (\ x__
              -> case x__ of
                   (Prelude.Just (WeightedCluster'ClusterWeight'HostRewriteLiteral x__val))
                     -> Prelude.Just x__val
                   _otherwise -> Prelude.Nothing)
           (\ _ y__
              -> Prelude.fmap
                   WeightedCluster'ClusterWeight'HostRewriteLiteral y__))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight "hostRewriteLiteral" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'hostRewriteSpecifier
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'hostRewriteSpecifier = y__}))
        ((Prelude..)
           (Lens.Family2.Unchecked.lens
              (\ x__
                 -> case x__ of
                      (Prelude.Just (WeightedCluster'ClusterWeight'HostRewriteLiteral x__val))
                        -> Prelude.Just x__val
                      _otherwise -> Prelude.Nothing)
              (\ _ y__
                 -> Prelude.fmap
                      WeightedCluster'ClusterWeight'HostRewriteLiteral y__))
           (Data.ProtoLens.maybeLens Data.ProtoLens.fieldDefault))
instance Data.ProtoLens.Message WeightedCluster'ClusterWeight where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.WeightedCluster.ClusterWeight"
  packedMessageDescriptor _
    = "\n\
      \\rClusterWeight\DC2\ESC\n\
      \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC24\n\
      \\ACKweight\CAN\STX \SOH(\v2\FS.google.protobuf.UInt32ValueR\ACKweight\DC2E\n\
      \\SOmetadata_match\CAN\ETX \SOH(\v2\RS.envoy.config.core.v3.MetadataR\rmetadataMatch\DC2g\n\
      \\SYNrequest_headers_to_add\CAN\EOT \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2K\n\
      \\EMrequest_headers_to_remove\CAN\t \ETX(\tR\SYNrequestHeadersToRemoveB\DLE\250B\r\146\SOH\n\
      \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2i\n\
      \\ETBresponse_headers_to_add\CAN\ENQ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
      \\SUBresponse_headers_to_remove\CAN\ACK \ETX(\tR\ETBresponseHeadersToRemoveB\DLE\250B\r\146\SOH\n\
      \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2\133\SOH\n\
      \\ETBtyped_per_filter_config\CAN\n\
      \ \ETX(\v2N.envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2?\n\
      \\DC4host_rewrite_literal\CAN\v \SOH(\tH\NULR\DC2hostRewriteLiteralB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\SUB]\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOHB\CAN\n\
      \\SYNhost_rewrite_specifier:7\154\197\136\RS2\n\
      \0envoy.api.v2.route.WeightedCluster.ClusterWeightJ\EOT\b\a\DLE\bJ\EOT\b\b\DLE\tR\DC1per_filter_config"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        name__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "name"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"name")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        weight__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "weight"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Wrappers.UInt32Value)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'weight")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        metadataMatch__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "metadata_match"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.Metadata)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'metadataMatch")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        requestHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        requestHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "request_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"requestHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        responseHeadersToAdd__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_add"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Envoy.Config.Core.V3.Base.HeaderValueOption)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToAdd")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        responseHeadersToRemove__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "response_headers_to_remove"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.RepeatedField
                 Data.ProtoLens.Unpacked
                 (Data.ProtoLens.Field.field @"responseHeadersToRemove")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        typedPerFilterConfig__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "typed_per_filter_config"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry)
              (Data.ProtoLens.MapField
                 (Data.ProtoLens.Field.field @"key")
                 (Data.ProtoLens.Field.field @"value")
                 (Data.ProtoLens.Field.field @"typedPerFilterConfig")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
        hostRewriteLiteral__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "host_rewrite_literal"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'hostRewriteLiteral")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, name__field_descriptor),
           (Data.ProtoLens.Tag 2, weight__field_descriptor),
           (Data.ProtoLens.Tag 3, metadataMatch__field_descriptor),
           (Data.ProtoLens.Tag 4, requestHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 9, requestHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 5, responseHeadersToAdd__field_descriptor),
           (Data.ProtoLens.Tag 6, responseHeadersToRemove__field_descriptor),
           (Data.ProtoLens.Tag 10, typedPerFilterConfig__field_descriptor),
           (Data.ProtoLens.Tag 11, hostRewriteLiteral__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _WeightedCluster'ClusterWeight'_unknownFields
        (\ x__ y__
           -> x__ {_WeightedCluster'ClusterWeight'_unknownFields = y__})
  defMessage
    = WeightedCluster'ClusterWeight'_constructor
        {_WeightedCluster'ClusterWeight'name = Data.ProtoLens.fieldDefault,
         _WeightedCluster'ClusterWeight'weight = Prelude.Nothing,
         _WeightedCluster'ClusterWeight'metadataMatch = Prelude.Nothing,
         _WeightedCluster'ClusterWeight'requestHeadersToAdd = Data.Vector.Generic.empty,
         _WeightedCluster'ClusterWeight'requestHeadersToRemove = Data.Vector.Generic.empty,
         _WeightedCluster'ClusterWeight'responseHeadersToAdd = Data.Vector.Generic.empty,
         _WeightedCluster'ClusterWeight'responseHeadersToRemove = Data.Vector.Generic.empty,
         _WeightedCluster'ClusterWeight'typedPerFilterConfig = Data.Map.empty,
         _WeightedCluster'ClusterWeight'hostRewriteSpecifier = Prelude.Nothing,
         _WeightedCluster'ClusterWeight'_unknownFields = []}
  parseMessage
    = let
        loop ::
          WeightedCluster'ClusterWeight
          -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
             -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Proto.Envoy.Config.Core.V3.Base.HeaderValueOption
                   -> Data.ProtoLens.Encoding.Growing.Growing Data.Vector.Vector Data.ProtoLens.Encoding.Growing.RealWorld Data.Text.Text
                      -> Data.ProtoLens.Encoding.Bytes.Parser WeightedCluster'ClusterWeight
        loop
          x
          mutable'requestHeadersToAdd
          mutable'requestHeadersToRemove
          mutable'responseHeadersToAdd
          mutable'responseHeadersToRemove
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do frozen'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                      (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                         mutable'requestHeadersToAdd)
                      frozen'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                         (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                            mutable'requestHeadersToRemove)
                      frozen'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                       (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                          mutable'responseHeadersToAdd)
                      frozen'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                          (Data.ProtoLens.Encoding.Growing.unsafeFreeze
                                                             mutable'responseHeadersToRemove)
                      (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields
                           (\ !t -> Prelude.reverse t)
                           (Lens.Family2.set
                              (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd")
                              frozen'requestHeadersToAdd
                              (Lens.Family2.set
                                 (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove")
                                 frozen'requestHeadersToRemove
                                 (Lens.Family2.set
                                    (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd")
                                    frozen'responseHeadersToAdd
                                    (Lens.Family2.set
                                       (Data.ProtoLens.Field.field @"vec'responseHeadersToRemove")
                                       frozen'responseHeadersToRemove
                                       x)))))
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "name"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"name") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "weight"
                                loop
                                  (Lens.Family2.set (Data.ProtoLens.Field.field @"weight") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        26
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "metadata_match"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"metadataMatch") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        34
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "request_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToAdd y)
                                loop
                                  x
                                  v
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        74
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "request_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'requestHeadersToRemove y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  v
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        42
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                            Data.ProtoLens.Encoding.Bytes.isolate
                                              (Prelude.fromIntegral len)
                                              Data.ProtoLens.parseMessage)
                                        "response_headers_to_add"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToAdd y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  v
                                  mutable'responseHeadersToRemove
                        50
                          -> do !y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                        (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                        Data.ProtoLens.Encoding.Bytes.getBytes
                                                          (Prelude.fromIntegral len)
                                            Data.ProtoLens.Encoding.Bytes.runEither
                                              (case Data.Text.Encoding.decodeUtf8' value of
                                                 (Prelude.Left err)
                                                   -> Prelude.Left (Prelude.show err)
                                                 (Prelude.Right r) -> Prelude.Right r))
                                        "response_headers_to_remove"
                                v <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                       (Data.ProtoLens.Encoding.Growing.append
                                          mutable'responseHeadersToRemove y)
                                loop
                                  x
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  v
                        82
                          -> do !(entry :: WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry) <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                                                                                         (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                                                                             Data.ProtoLens.Encoding.Bytes.isolate
                                                                                                               (Prelude.fromIntegral
                                                                                                                  len)
                                                                                                               Data.ProtoLens.parseMessage)
                                                                                                         "typed_per_filter_config"
                                (let
                                   key = Lens.Family2.view (Data.ProtoLens.Field.field @"key") entry
                                   value
                                     = Lens.Family2.view (Data.ProtoLens.Field.field @"value") entry
                                 in
                                   loop
                                     (Lens.Family2.over
                                        (Data.ProtoLens.Field.field @"typedPerFilterConfig")
                                        (\ !t -> Data.Map.insert key value t)
                                        x)
                                     mutable'requestHeadersToAdd
                                     mutable'requestHeadersToRemove
                                     mutable'responseHeadersToAdd
                                     mutable'responseHeadersToRemove)
                        90
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "host_rewrite_literal"
                                loop
                                  (Lens.Family2.set
                                     (Data.ProtoLens.Field.field @"hostRewriteLiteral") y x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
                                  mutable'requestHeadersToAdd
                                  mutable'requestHeadersToRemove
                                  mutable'responseHeadersToAdd
                                  mutable'responseHeadersToRemove
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do mutable'requestHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                               Data.ProtoLens.Encoding.Growing.new
              mutable'requestHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                  Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToAdd <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                Data.ProtoLens.Encoding.Growing.new
              mutable'responseHeadersToRemove <- Data.ProtoLens.Encoding.Parser.Unsafe.unsafeLiftIO
                                                   Data.ProtoLens.Encoding.Growing.new
              loop
                Data.ProtoLens.defMessage
                mutable'requestHeadersToAdd
                mutable'requestHeadersToRemove
                mutable'responseHeadersToAdd
                mutable'responseHeadersToRemove)
          "ClusterWeight"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"name") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'weight") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                ((Data.Monoid.<>)
                   (case
                        Lens.Family2.view
                          (Data.ProtoLens.Field.field @"maybe'metadataMatch") _x
                    of
                      Prelude.Nothing -> Data.Monoid.mempty
                      (Prelude.Just _v)
                        -> (Data.Monoid.<>)
                             (Data.ProtoLens.Encoding.Bytes.putVarInt 26)
                             ((Prelude..)
                                (\ bs
                                   -> (Data.Monoid.<>)
                                        (Data.ProtoLens.Encoding.Bytes.putVarInt
                                           (Prelude.fromIntegral (Data.ByteString.length bs)))
                                        (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                Data.ProtoLens.encodeMessage
                                _v))
                   ((Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                         (\ _v
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt 34)
                                 ((Prelude..)
                                    (\ bs
                                       -> (Data.Monoid.<>)
                                            (Data.ProtoLens.Encoding.Bytes.putVarInt
                                               (Prelude.fromIntegral (Data.ByteString.length bs)))
                                            (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                    Data.ProtoLens.encodeMessage
                                    _v))
                         (Lens.Family2.view
                            (Data.ProtoLens.Field.field @"vec'requestHeadersToAdd") _x))
                      ((Data.Monoid.<>)
                         (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                            (\ _v
                               -> (Data.Monoid.<>)
                                    (Data.ProtoLens.Encoding.Bytes.putVarInt 74)
                                    ((Prelude..)
                                       (\ bs
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                  (Prelude.fromIntegral
                                                     (Data.ByteString.length bs)))
                                               (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                       Data.Text.Encoding.encodeUtf8
                                       _v))
                            (Lens.Family2.view
                               (Data.ProtoLens.Field.field @"vec'requestHeadersToRemove") _x))
                         ((Data.Monoid.<>)
                            (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                               (\ _v
                                  -> (Data.Monoid.<>)
                                       (Data.ProtoLens.Encoding.Bytes.putVarInt 42)
                                       ((Prelude..)
                                          (\ bs
                                             -> (Data.Monoid.<>)
                                                  (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                     (Prelude.fromIntegral
                                                        (Data.ByteString.length bs)))
                                                  (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                          Data.ProtoLens.encodeMessage
                                          _v))
                               (Lens.Family2.view
                                  (Data.ProtoLens.Field.field @"vec'responseHeadersToAdd") _x))
                            ((Data.Monoid.<>)
                               (Data.ProtoLens.Encoding.Bytes.foldMapBuilder
                                  (\ _v
                                     -> (Data.Monoid.<>)
                                          (Data.ProtoLens.Encoding.Bytes.putVarInt 50)
                                          ((Prelude..)
                                             (\ bs
                                                -> (Data.Monoid.<>)
                                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                        (Prelude.fromIntegral
                                                           (Data.ByteString.length bs)))
                                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                                             Data.Text.Encoding.encodeUtf8
                                             _v))
                                  (Lens.Family2.view
                                     (Data.ProtoLens.Field.field @"vec'responseHeadersToRemove")
                                     _x))
                               ((Data.Monoid.<>)
                                  (Data.Monoid.mconcat
                                     (Prelude.map
                                        (\ _v
                                           -> (Data.Monoid.<>)
                                                (Data.ProtoLens.Encoding.Bytes.putVarInt 82)
                                                ((Prelude..)
                                                   (\ bs
                                                      -> (Data.Monoid.<>)
                                                           (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                              (Prelude.fromIntegral
                                                                 (Data.ByteString.length bs)))
                                                           (Data.ProtoLens.Encoding.Bytes.putBytes
                                                              bs))
                                                   Data.ProtoLens.encodeMessage
                                                   (Lens.Family2.set
                                                      (Data.ProtoLens.Field.field @"key")
                                                      (Prelude.fst _v)
                                                      (Lens.Family2.set
                                                         (Data.ProtoLens.Field.field @"value")
                                                         (Prelude.snd _v)
                                                         (Data.ProtoLens.defMessage ::
                                                            WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry)))))
                                        (Data.Map.toList
                                           (Lens.Family2.view
                                              (Data.ProtoLens.Field.field @"typedPerFilterConfig")
                                              _x))))
                                  ((Data.Monoid.<>)
                                     (case
                                          Lens.Family2.view
                                            (Data.ProtoLens.Field.field
                                               @"maybe'hostRewriteSpecifier")
                                            _x
                                      of
                                        Prelude.Nothing -> Data.Monoid.mempty
                                        (Prelude.Just (WeightedCluster'ClusterWeight'HostRewriteLiteral v))
                                          -> (Data.Monoid.<>)
                                               (Data.ProtoLens.Encoding.Bytes.putVarInt 90)
                                               ((Prelude..)
                                                  (\ bs
                                                     -> (Data.Monoid.<>)
                                                          (Data.ProtoLens.Encoding.Bytes.putVarInt
                                                             (Prelude.fromIntegral
                                                                (Data.ByteString.length bs)))
                                                          (Data.ProtoLens.Encoding.Bytes.putBytes
                                                             bs))
                                                  Data.Text.Encoding.encodeUtf8
                                                  v))
                                     (Data.ProtoLens.Encoding.Wire.buildFieldSet
                                        (Lens.Family2.view Data.ProtoLens.unknownFields _x))))))))))
instance Control.DeepSeq.NFData WeightedCluster'ClusterWeight where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_WeightedCluster'ClusterWeight'_unknownFields x__)
             (Control.DeepSeq.deepseq
                (_WeightedCluster'ClusterWeight'name x__)
                (Control.DeepSeq.deepseq
                   (_WeightedCluster'ClusterWeight'weight x__)
                   (Control.DeepSeq.deepseq
                      (_WeightedCluster'ClusterWeight'metadataMatch x__)
                      (Control.DeepSeq.deepseq
                         (_WeightedCluster'ClusterWeight'requestHeadersToAdd x__)
                         (Control.DeepSeq.deepseq
                            (_WeightedCluster'ClusterWeight'requestHeadersToRemove x__)
                            (Control.DeepSeq.deepseq
                               (_WeightedCluster'ClusterWeight'responseHeadersToAdd x__)
                               (Control.DeepSeq.deepseq
                                  (_WeightedCluster'ClusterWeight'responseHeadersToRemove x__)
                                  (Control.DeepSeq.deepseq
                                     (_WeightedCluster'ClusterWeight'typedPerFilterConfig x__)
                                     (Control.DeepSeq.deepseq
                                        (_WeightedCluster'ClusterWeight'hostRewriteSpecifier x__)
                                        ())))))))))
instance Control.DeepSeq.NFData WeightedCluster'ClusterWeight'HostRewriteSpecifier where
  rnf (WeightedCluster'ClusterWeight'HostRewriteLiteral x__)
    = Control.DeepSeq.rnf x__
_WeightedCluster'ClusterWeight'HostRewriteLiteral ::
  Data.ProtoLens.Prism.Prism' WeightedCluster'ClusterWeight'HostRewriteSpecifier Data.Text.Text
_WeightedCluster'ClusterWeight'HostRewriteLiteral
  = Data.ProtoLens.Prism.prism'
      WeightedCluster'ClusterWeight'HostRewriteLiteral
      (\ p__
         -> case p__ of {
              (WeightedCluster'ClusterWeight'HostRewriteLiteral p__val)
                -> Prelude.Just p__val })
{- | Fields :
     
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.key' @:: Lens' WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry Data.Text.Text@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.value' @:: Lens' WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry Proto.Google.Protobuf.Any.Any@
         * 'Proto.Envoy.Config.Route.V3.RouteComponents_Fields.maybe'value' @:: Lens' WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry (Prelude.Maybe Proto.Google.Protobuf.Any.Any)@ -}
data WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry
  = WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_constructor {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'key :: !Data.Text.Text,
                                                                          _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value :: !(Prelude.Maybe Proto.Google.Protobuf.Any.Any),
                                                                          _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_unknownFields :: !Data.ProtoLens.FieldSet}
  deriving stock (Prelude.Eq, Prelude.Ord)
instance Prelude.Show WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry where
  showsPrec _ __x __s
    = Prelude.showChar
        '{'
        (Prelude.showString
           (Data.ProtoLens.showMessageShort __x) (Prelude.showChar '}' __s))
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry "key" Data.Text.Text where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'key
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'key = y__}))
        Prelude.id
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry "value" Proto.Google.Protobuf.Any.Any where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value = y__}))
        (Data.ProtoLens.maybeLens Data.ProtoLens.defMessage)
instance Data.ProtoLens.Field.HasField WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry "maybe'value" (Prelude.Maybe Proto.Google.Protobuf.Any.Any) where
  fieldOf _
    = (Prelude..)
        (Lens.Family2.Unchecked.lens
           _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value
           (\ x__ y__
              -> x__
                   {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value = y__}))
        Prelude.id
instance Data.ProtoLens.Message WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry where
  messageName _
    = Data.Text.pack
        "envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry"
  packedMessageDescriptor _
    = "\n\
      \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
      \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
      \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOH"
  packedFileDescriptor _ = packedFileDescriptor
  fieldsByTag
    = let
        key__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "key"
              (Data.ProtoLens.ScalarField Data.ProtoLens.StringField ::
                 Data.ProtoLens.FieldTypeDescriptor Data.Text.Text)
              (Data.ProtoLens.PlainField
                 Data.ProtoLens.Optional (Data.ProtoLens.Field.field @"key")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry
        value__field_descriptor
          = Data.ProtoLens.FieldDescriptor
              "value"
              (Data.ProtoLens.MessageField Data.ProtoLens.MessageType ::
                 Data.ProtoLens.FieldTypeDescriptor Proto.Google.Protobuf.Any.Any)
              (Data.ProtoLens.OptionalField
                 (Data.ProtoLens.Field.field @"maybe'value")) ::
              Data.ProtoLens.FieldDescriptor WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry
      in
        Data.Map.fromList
          [(Data.ProtoLens.Tag 1, key__field_descriptor),
           (Data.ProtoLens.Tag 2, value__field_descriptor)]
  unknownFields
    = Lens.Family2.Unchecked.lens
        _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_unknownFields
        (\ x__ y__
           -> x__
                {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_unknownFields = y__})
  defMessage
    = WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_constructor
        {_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'key = Data.ProtoLens.fieldDefault,
         _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value = Prelude.Nothing,
         _WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_unknownFields = []}
  parseMessage
    = let
        loop ::
          WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry
          -> Data.ProtoLens.Encoding.Bytes.Parser WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry
        loop x
          = do end <- Data.ProtoLens.Encoding.Bytes.atEnd
               if end then
                   do (let missing = []
                       in
                         if Prelude.null missing then
                             Prelude.return ()
                         else
                             Prelude.fail
                               ((Prelude.++)
                                  "Missing required fields: "
                                  (Prelude.show (missing :: [Prelude.String]))))
                      Prelude.return
                        (Lens.Family2.over
                           Data.ProtoLens.unknownFields (\ !t -> Prelude.reverse t) x)
               else
                   do tag <- Data.ProtoLens.Encoding.Bytes.getVarInt
                      case tag of
                        10
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do value <- do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                                       Data.ProtoLens.Encoding.Bytes.getBytes
                                                         (Prelude.fromIntegral len)
                                           Data.ProtoLens.Encoding.Bytes.runEither
                                             (case Data.Text.Encoding.decodeUtf8' value of
                                                (Prelude.Left err)
                                                  -> Prelude.Left (Prelude.show err)
                                                (Prelude.Right r) -> Prelude.Right r))
                                       "key"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"key") y x)
                        18
                          -> do y <- (Data.ProtoLens.Encoding.Bytes.<?>)
                                       (do len <- Data.ProtoLens.Encoding.Bytes.getVarInt
                                           Data.ProtoLens.Encoding.Bytes.isolate
                                             (Prelude.fromIntegral len) Data.ProtoLens.parseMessage)
                                       "value"
                                loop (Lens.Family2.set (Data.ProtoLens.Field.field @"value") y x)
                        wire
                          -> do !y <- Data.ProtoLens.Encoding.Wire.parseTaggedValueFromWire
                                        wire
                                loop
                                  (Lens.Family2.over
                                     Data.ProtoLens.unknownFields (\ !t -> (:) y t) x)
      in
        (Data.ProtoLens.Encoding.Bytes.<?>)
          (do loop Data.ProtoLens.defMessage) "TypedPerFilterConfigEntry"
  buildMessage
    = \ _x
        -> (Data.Monoid.<>)
             (let _v = Lens.Family2.view (Data.ProtoLens.Field.field @"key") _x
              in
                if (Prelude.==) _v Data.ProtoLens.fieldDefault then
                    Data.Monoid.mempty
                else
                    (Data.Monoid.<>)
                      (Data.ProtoLens.Encoding.Bytes.putVarInt 10)
                      ((Prelude..)
                         (\ bs
                            -> (Data.Monoid.<>)
                                 (Data.ProtoLens.Encoding.Bytes.putVarInt
                                    (Prelude.fromIntegral (Data.ByteString.length bs)))
                                 (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                         Data.Text.Encoding.encodeUtf8
                         _v))
             ((Data.Monoid.<>)
                (case
                     Lens.Family2.view (Data.ProtoLens.Field.field @"maybe'value") _x
                 of
                   Prelude.Nothing -> Data.Monoid.mempty
                   (Prelude.Just _v)
                     -> (Data.Monoid.<>)
                          (Data.ProtoLens.Encoding.Bytes.putVarInt 18)
                          ((Prelude..)
                             (\ bs
                                -> (Data.Monoid.<>)
                                     (Data.ProtoLens.Encoding.Bytes.putVarInt
                                        (Prelude.fromIntegral (Data.ByteString.length bs)))
                                     (Data.ProtoLens.Encoding.Bytes.putBytes bs))
                             Data.ProtoLens.encodeMessage
                             _v))
                (Data.ProtoLens.Encoding.Wire.buildFieldSet
                   (Lens.Family2.view Data.ProtoLens.unknownFields _x)))
instance Control.DeepSeq.NFData WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry where
  rnf
    = \ x__
        -> Control.DeepSeq.deepseq
             (_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'_unknownFields
                x__)
             (Control.DeepSeq.deepseq
                (_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'key x__)
                (Control.DeepSeq.deepseq
                   (_WeightedCluster'ClusterWeight'TypedPerFilterConfigEntry'value
                      x__)
                   ()))
packedFileDescriptor :: Data.ByteString.ByteString
packedFileDescriptor
  = "\n\
    \,envoy/config/route/v3/route_components.proto\DC2\NAKenvoy.config.route.v3\SUB\USenvoy/config/core/v3/base.proto\SUB$envoy/config/core/v3/extension.proto\SUB)envoy/config/core/v3/proxy_protocol.proto\SUB!envoy/type/matcher/v3/regex.proto\SUB\"envoy/type/matcher/v3/string.proto\SUB%envoy/type/metadata/v3/metadata.proto\SUB&envoy/type/tracing/v3/custom_tag.proto\SUB\ESCenvoy/type/v3/percent.proto\SUB\EMenvoy/type/v3/range.proto\SUB\EMgoogle/protobuf/any.proto\SUB\RSgoogle/protobuf/duration.proto\SUB\RSgoogle/protobuf/wrappers.proto\SUB#envoy/annotations/deprecation.proto\SUB\RSudpa/annotations/migrate.proto\SUB\GSudpa/annotations/status.proto\SUB!udpa/annotations/versioning.proto\SUB\ETBvalidate/validate.proto\"\212\f\n\
    \\vVirtualHost\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2,\n\
    \\adomains\CAN\STX \ETX(\tR\adomainsB\DC2\250B\SI\146\SOH\f\b\SOH\"\br\ACK\192\SOH\STX\200\SOH\NUL\DC24\n\
    \\ACKroutes\CAN\ETX \ETX(\v2\FS.envoy.config.route.v3.RouteR\ACKroutes\DC2`\n\
    \\vrequire_tls\CAN\EOT \SOH(\SO25.envoy.config.route.v3.VirtualHost.TlsRequirementTypeR\n\
    \requireTlsB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2P\n\
    \\DLEvirtual_clusters\CAN\ENQ \ETX(\v2%.envoy.config.route.v3.VirtualClusterR\SIvirtualClusters\DC2A\n\
    \\vrate_limits\CAN\ACK \ETX(\v2 .envoy.config.route.v3.RateLimitR\n\
    \rateLimits\DC2g\n\
    \\SYNrequest_headers_to_add\CAN\a \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
    \\EMrequest_headers_to_remove\CAN\r \ETX(\tR\SYNrequestHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2i\n\
    \\ETBresponse_headers_to_add\CAN\n\
    \ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2O\n\
    \\SUBresponse_headers_to_remove\CAN\v \ETX(\tR\ETBresponseHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC25\n\
    \\EOTcors\CAN\b \SOH(\v2!.envoy.config.route.v3.CorsPolicyR\EOTcors\DC2s\n\
    \\ETBtyped_per_filter_config\CAN\SI \ETX(\v2<.envoy.config.route.v3.VirtualHost.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2A\n\
    \\GSinclude_request_attempt_count\CAN\SO \SOH(\bR\SUBincludeRequestAttemptCount\DC2H\n\
    \!include_attempt_count_in_response\CAN\DC3 \SOH(\bR\GSincludeAttemptCountInResponse\DC2E\n\
    \\fretry_policy\CAN\DLE \SOH(\v2\".envoy.config.route.v3.RetryPolicyR\vretryPolicy\DC2O\n\
    \\EMretry_policy_typed_config\CAN\DC4 \SOH(\v2\DC4.google.protobuf.AnyR\SYNretryPolicyTypedConfig\DC2E\n\
    \\fhedge_policy\CAN\DC1 \SOH(\v2\".envoy.config.route.v3.HedgePolicyR\vhedgePolicy\DC2`\n\
    \\RSper_request_buffer_limit_bytes\CAN\DC2 \SOH(\v2\FS.google.protobuf.UInt32ValueR\SUBperRequestBufferLimitBytes\SUB]\n\
    \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
    \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOH\":\n\
    \\DC2TlsRequirementType\DC2\b\n\
    \\EOTNONE\DLE\NUL\DC2\DC1\n\
    \\rEXTERNAL_ONLY\DLE\SOH\DC2\a\n\
    \\ETXALL\DLE\STX:%\154\197\136\RS \n\
    \\RSenvoy.api.v2.route.VirtualHostJ\EOT\b\t\DLE\n\
    \J\EOT\b\f\DLE\rR\DC1per_filter_config\"d\n\
    \\fFilterAction\DC2,\n\
    \\ACKaction\CAN\SOH \SOH(\v2\DC4.google.protobuf.AnyR\ACKaction:&\154\197\136\RS!\n\
    \\USenvoy.api.v2.route.FilterAction\"\142\v\n\
    \\ENQRoute\DC2\DC2\n\
    \\EOTname\CAN\SO \SOH(\tR\EOTname\DC2A\n\
    \\ENQmatch\CAN\SOH \SOH(\v2!.envoy.config.route.v3.RouteMatchR\ENQmatchB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2:\n\
    \\ENQroute\CAN\STX \SOH(\v2\".envoy.config.route.v3.RouteActionH\NULR\ENQroute\DC2C\n\
    \\bredirect\CAN\ETX \SOH(\v2%.envoy.config.route.v3.RedirectActionH\NULR\bredirect\DC2V\n\
    \\SIdirect_response\CAN\a \SOH(\v2+.envoy.config.route.v3.DirectResponseActionH\NULR\SOdirectResponse\DC2J\n\
    \\rfilter_action\CAN\DC1 \SOH(\v2#.envoy.config.route.v3.FilterActionH\NULR\ffilterAction\DC2`\n\
    \\NAKnon_forwarding_action\CAN\DC2 \SOH(\v2*.envoy.config.route.v3.NonForwardingActionH\NULR\DC3nonForwardingAction\DC2:\n\
    \\bmetadata\CAN\EOT \SOH(\v2\RS.envoy.config.core.v3.MetadataR\bmetadata\DC2>\n\
    \\tdecorator\CAN\ENQ \SOH(\v2 .envoy.config.route.v3.DecoratorR\tdecorator\DC2m\n\
    \\ETBtyped_per_filter_config\CAN\r \ETX(\v26.envoy.config.route.v3.Route.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2g\n\
    \\SYNrequest_headers_to_add\CAN\t \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
    \\EMrequest_headers_to_remove\CAN\f \ETX(\tR\SYNrequestHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2i\n\
    \\ETBresponse_headers_to_add\CAN\n\
    \ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2O\n\
    \\SUBresponse_headers_to_remove\CAN\v \ETX(\tR\ETBresponseHeadersToRemoveB\DC2\250B\SI\146\SOH\f\"\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC28\n\
    \\atracing\CAN\SI \SOH(\v2\RS.envoy.config.route.v3.TracingR\atracing\DC2`\n\
    \\RSper_request_buffer_limit_bytes\CAN\DLE \SOH(\v2\FS.google.protobuf.UInt32ValueR\SUBperRequestBufferLimitBytes\SUB]\n\
    \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
    \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOHB\r\n\
    \\ACKaction\DC2\ETX\248B\SOH:\US\154\197\136\RS\SUB\n\
    \\CANenvoy.api.v2.route.RouteJ\EOT\b\ACK\DLE\aJ\EOT\b\b\DLE\tR\DC1per_filter_config\"\198\t\n\
    \\SIWeightedCluster\DC2Z\n\
    \\bclusters\CAN\SOH \ETX(\v24.envoy.config.route.v3.WeightedCluster.ClusterWeightR\bclustersB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2H\n\
    \\ftotal_weight\CAN\ETX \SOH(\v2\FS.google.protobuf.UInt32ValueR\vtotalWeightB\a\250B\EOT*\STX(\SOH\DC2,\n\
    \\DC2runtime_key_prefix\CAN\STX \SOH(\tR\DLEruntimeKeyPrefix\SUB\179\a\n\
    \\rClusterWeight\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC24\n\
    \\ACKweight\CAN\STX \SOH(\v2\FS.google.protobuf.UInt32ValueR\ACKweight\DC2E\n\
    \\SOmetadata_match\CAN\ETX \SOH(\v2\RS.envoy.config.core.v3.MetadataR\rmetadataMatch\DC2g\n\
    \\SYNrequest_headers_to_add\CAN\EOT \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC3requestHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2K\n\
    \\EMrequest_headers_to_remove\CAN\t \ETX(\tR\SYNrequestHeadersToRemoveB\DLE\250B\r\146\SOH\n\
    \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2i\n\
    \\ETBresponse_headers_to_add\CAN\ENQ \ETX(\v2'.envoy.config.core.v3.HeaderValueOptionR\DC4responseHeadersToAddB\t\250B\ACK\146\SOH\ETX\DLE\232\a\DC2M\n\
    \\SUBresponse_headers_to_remove\CAN\ACK \ETX(\tR\ETBresponseHeadersToRemoveB\DLE\250B\r\146\SOH\n\
    \\"\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2\133\SOH\n\
    \\ETBtyped_per_filter_config\CAN\n\
    \ \ETX(\v2N.envoy.config.route.v3.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntryR\DC4typedPerFilterConfig\DC2?\n\
    \\DC4host_rewrite_literal\CAN\v \SOH(\tH\NULR\DC2hostRewriteLiteralB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\SUB]\n\
    \\EMTypedPerFilterConfigEntry\DC2\DLE\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkey\DC2*\n\
    \\ENQvalue\CAN\STX \SOH(\v2\DC4.google.protobuf.AnyR\ENQvalue:\STX8\SOHB\CAN\n\
    \\SYNhost_rewrite_specifier:7\154\197\136\RS2\n\
    \0envoy.api.v2.route.WeightedCluster.ClusterWeightJ\EOT\b\a\DLE\bJ\EOT\b\b\DLE\tR\DC1per_filter_config:)\154\197\136\RS$\n\
    \\"envoy.api.v2.route.WeightedCluster\"\203\b\n\
    \\n\
    \RouteMatch\DC2\CAN\n\
    \\ACKprefix\CAN\SOH \SOH(\tH\NULR\ACKprefix\DC2\DC4\n\
    \\EOTpath\CAN\STX \SOH(\tH\NULR\EOTpath\DC2N\n\
    \\n\
    \safe_regex\CAN\n\
    \ \SOH(\v2#.envoy.type.matcher.v3.RegexMatcherH\NULR\tsafeRegexB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2[\n\
    \\SIconnect_matcher\CAN\f \SOH(\v20.envoy.config.route.v3.RouteMatch.ConnectMatcherH\NULR\SOconnectMatcher\DC2A\n\
    \\SOcase_sensitive\CAN\EOT \SOH(\v2\SUB.google.protobuf.BoolValueR\rcaseSensitive\DC2Y\n\
    \\DLEruntime_fraction\CAN\t \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\SIruntimeFraction\DC2>\n\
    \\aheaders\CAN\ACK \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheaders\DC2W\n\
    \\DLEquery_parameters\CAN\a \ETX(\v2,.envoy.config.route.v3.QueryParameterMatcherR\SIqueryParameters\DC2K\n\
    \\EOTgrpc\CAN\b \SOH(\v27.envoy.config.route.v3.RouteMatch.GrpcRouteMatchOptionsR\EOTgrpc\DC2Y\n\
    \\vtls_context\CAN\v \SOH(\v28.envoy.config.route.v3.RouteMatch.TlsContextMatchOptionsR\n\
    \tlsContext\SUBS\n\
    \\NAKGrpcRouteMatchOptions::\154\197\136\RS5\n\
    \3envoy.api.v2.route.RouteMatch.GrpcRouteMatchOptions\SUB\201\SOH\n\
    \\SYNTlsContextMatchOptions\DC28\n\
    \\tpresented\CAN\SOH \SOH(\v2\SUB.google.protobuf.BoolValueR\tpresented\DC28\n\
    \\tvalidated\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\tvalidated:;\154\197\136\RS6\n\
    \4envoy.api.v2.route.RouteMatch.TlsContextMatchOptions\SUB\DLE\n\
    \\SOConnectMatcherB\NAK\n\
    \\SOpath_specifier\DC2\ETX\248B\SOH:$\154\197\136\RS\US\n\
    \\GSenvoy.api.v2.route.RouteMatchJ\EOT\b\ENQ\DLE\ACKJ\EOT\b\ETX\DLE\EOTR\ENQregex\"\232\EOT\n\
    \\n\
    \CorsPolicy\DC2_\n\
    \\EMallow_origin_string_match\CAN\v \ETX(\v2$.envoy.type.matcher.v3.StringMatcherR\SYNallowOriginStringMatch\DC2#\n\
    \\rallow_methods\CAN\STX \SOH(\tR\fallowMethods\DC2#\n\
    \\rallow_headers\CAN\ETX \SOH(\tR\fallowHeaders\DC2%\n\
    \\SOexpose_headers\CAN\EOT \SOH(\tR\rexposeHeaders\DC2\ETB\n\
    \\amax_age\CAN\ENQ \SOH(\tR\ACKmaxAge\DC2G\n\
    \\DC1allow_credentials\CAN\ACK \SOH(\v2\SUB.google.protobuf.BoolValueR\DLEallowCredentials\DC2W\n\
    \\SOfilter_enabled\CAN\t \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentH\NULR\rfilterEnabled\DC2U\n\
    \\SOshadow_enabled\CAN\n\
    \ \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\rshadowEnabledB\DC3\n\
    \\DC1enabled_specifier:$\154\197\136\RS\US\n\
    \\GSenvoy.api.v2.route.CorsPolicyJ\EOT\b\SOH\DLE\STXJ\EOT\b\b\DLE\tJ\EOT\b\a\DLE\bR\fallow_originR\DC2allow_origin_regexR\aenabled\"\178'\n\
    \\vRouteAction\DC2#\n\
    \\acluster\CAN\SOH \SOH(\tH\NULR\aclusterB\a\250B\EOTr\STX\DLE\SOH\DC26\n\
    \\SOcluster_header\CAN\STX \SOH(\tH\NULR\rclusterHeaderB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2U\n\
    \\DC1weighted_clusters\CAN\ETX \SOH(\v2&.envoy.config.route.v3.WeightedClusterH\NULR\DLEweightedClusters\DC2:\n\
    \\CANcluster_specifier_plugin\CAN% \SOH(\tH\NULR\SYNclusterSpecifierPlugin\DC2\142\SOH\n\
    \\UScluster_not_found_response_code\CAN\DC4 \SOH(\SO2>.envoy.config.route.v3.RouteAction.ClusterNotFoundResponseCodeR\ESCclusterNotFoundResponseCodeB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2E\n\
    \\SOmetadata_match\CAN\EOT \SOH(\v2\RS.envoy.config.core.v3.MetadataR\rmetadataMatch\DC22\n\
    \\SOprefix_rewrite\CAN\ENQ \SOH(\tR\rprefixRewriteB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2S\n\
    \\rregex_rewrite\CAN  \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite\DC2?\n\
    \\DC4host_rewrite_literal\CAN\ACK \SOH(\tH\SOHR\DC2hostRewriteLiteralB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2H\n\
    \\DC1auto_host_rewrite\CAN\a \SOH(\v2\SUB.google.protobuf.BoolValueH\SOHR\SIautoHostRewrite\DC2=\n\
    \\DC3host_rewrite_header\CAN\GS \SOH(\tH\SOHR\DC1hostRewriteHeaderB\v\250B\br\ACK\192\SOH\SOH\200\SOH\NUL\DC2g\n\
    \\ETBhost_rewrite_path_regex\CAN# \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteH\SOHR\DC4hostRewritePathRegex\DC23\n\
    \\atimeout\CAN\b \SOH(\v2\EM.google.protobuf.DurationR\atimeout\DC2<\n\
    \\fidle_timeout\CAN\CAN \SOH(\v2\EM.google.protobuf.DurationR\vidleTimeout\DC2E\n\
    \\fretry_policy\CAN\t \SOH(\v2\".envoy.config.route.v3.RetryPolicyR\vretryPolicy\DC2O\n\
    \\EMretry_policy_typed_config\CAN! \SOH(\v2\DC4.google.protobuf.AnyR\SYNretryPolicyTypedConfig\DC2n\n\
    \\ETBrequest_mirror_policies\CAN\RS \ETX(\v26.envoy.config.route.v3.RouteAction.RequestMirrorPolicyR\NAKrequestMirrorPolicies\DC2K\n\
    \\bpriority\CAN\v \SOH(\SO2%.envoy.config.core.v3.RoutingPriorityR\bpriorityB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2A\n\
    \\vrate_limits\CAN\r \ETX(\v2 .envoy.config.route.v3.RateLimitR\n\
    \rateLimits\DC2\\\n\
    \\SYNinclude_vh_rate_limits\CAN\SO \SOH(\v2\SUB.google.protobuf.BoolValueR\DC3includeVhRateLimitsB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2N\n\
    \\vhash_policy\CAN\SI \ETX(\v2-.envoy.config.route.v3.RouteAction.HashPolicyR\n\
    \hashPolicy\DC25\n\
    \\EOTcors\CAN\DC1 \SOH(\v2!.envoy.config.route.v3.CorsPolicyR\EOTcors\DC2P\n\
    \\DLEmax_grpc_timeout\CAN\ETB \SOH(\v2\EM.google.protobuf.DurationR\SOmaxGrpcTimeoutB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2V\n\
    \\DC3grpc_timeout_offset\CAN\FS \SOH(\v2\EM.google.protobuf.DurationR\DC1grpcTimeoutOffsetB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2Y\n\
    \\SIupgrade_configs\CAN\EM \ETX(\v20.envoy.config.route.v3.RouteAction.UpgradeConfigR\SOupgradeConfigs\DC2g\n\
    \\CANinternal_redirect_policy\CAN\" \SOH(\v2-.envoy.config.route.v3.InternalRedirectPolicyR\SYNinternalRedirectPolicy\DC2\128\SOH\n\
    \\CANinternal_redirect_action\CAN\SUB \SOH(\SO29.envoy.config.route.v3.RouteAction.InternalRedirectActionR\SYNinternalRedirectActionB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2_\n\
    \\SYNmax_internal_redirects\CAN\US \SOH(\v2\FS.google.protobuf.UInt32ValueR\DC4maxInternalRedirectsB\v\CAN\SOH\146\199\134\216\EOT\ETX3.0\DC2E\n\
    \\fhedge_policy\CAN\ESC \SOH(\v2\".envoy.config.route.v3.HedgePolicyR\vhedgePolicy\DC2d\n\
    \\DC3max_stream_duration\CAN$ \SOH(\v24.envoy.config.route.v3.RouteAction.MaxStreamDurationR\DC1maxStreamDuration\SUB\162\STX\n\
    \\DC3RequestMirrorPolicy\DC2!\n\
    \\acluster\CAN\SOH \SOH(\tR\aclusterB\a\250B\EOTr\STX\DLE\SOH\DC2Y\n\
    \\DLEruntime_fraction\CAN\ETX \SOH(\v2..envoy.config.core.v3.RuntimeFractionalPercentR\SIruntimeFraction\DC2?\n\
    \\rtrace_sampled\CAN\EOT \SOH(\v2\SUB.google.protobuf.BoolValueR\ftraceSampled:9\154\197\136\RS4\n\
    \2envoy.api.v2.route.RouteAction.RequestMirrorPolicyJ\EOT\b\STX\DLE\ETXR\vruntime_key\SUB\150\n\
    \\n\
    \\n\
    \HashPolicy\DC2N\n\
    \\ACKheader\CAN\SOH \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.HeaderH\NULR\ACKheader\DC2N\n\
    \\ACKcookie\CAN\STX \SOH(\v24.envoy.config.route.v3.RouteAction.HashPolicy.CookieH\NULR\ACKcookie\DC2y\n\
    \\NAKconnection_properties\CAN\ETX \SOH(\v2B.envoy.config.route.v3.RouteAction.HashPolicy.ConnectionPropertiesH\NULR\DC4connectionProperties\DC2g\n\
    \\SIquery_parameter\CAN\ENQ \SOH(\v2<.envoy.config.route.v3.RouteAction.HashPolicy.QueryParameterH\NULR\SOqueryParameter\DC2^\n\
    \\ffilter_state\CAN\ACK \SOH(\v29.envoy.config.route.v3.RouteAction.HashPolicy.FilterStateH\NULR\vfilterState\DC2\SUB\n\
    \\bterminal\CAN\EOT \SOH(\bR\bterminal\SUB\198\SOH\n\
    \\ACKHeader\DC2.\n\
    \\vheader_name\CAN\SOH \SOH(\tR\n\
    \headerNameB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2S\n\
    \\rregex_rewrite\CAN\STX \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteR\fregexRewrite:7\154\197\136\RS2\n\
    \0envoy.api.v2.route.RouteAction.HashPolicy.Header\SUB\159\SOH\n\
    \\ACKCookie\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC2+\n\
    \\ETXttl\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\ETXttl\DC2\DC2\n\
    \\EOTpath\CAN\ETX \SOH(\tR\EOTpath:7\154\197\136\RS2\n\
    \0envoy.api.v2.route.RouteAction.HashPolicy.Cookie\SUBz\n\
    \\DC4ConnectionProperties\DC2\ESC\n\
    \\tsource_ip\CAN\SOH \SOH(\bR\bsourceIp:E\154\197\136\RS@\n\
    \>envoy.api.v2.route.RouteAction.HashPolicy.ConnectionProperties\SUBn\n\
    \\SOQueryParameter\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:?\154\197\136\RS:\n\
    \8envoy.api.v2.route.RouteAction.HashPolicy.QueryParameter\SUBf\n\
    \\vFilterState\DC2\EM\n\
    \\ETXkey\CAN\SOH \SOH(\tR\ETXkeyB\a\250B\EOTr\STX\DLE\SOH:<\154\197\136\RS7\n\
    \5envoy.api.v2.route.RouteAction.HashPolicy.FilterStateB\ETB\n\
    \\DLEpolicy_specifier\DC2\ETX\248B\SOH:0\154\197\136\RS+\n\
    \)envoy.api.v2.route.RouteAction.HashPolicy\SUB\163\ETX\n\
    \\rUpgradeConfig\DC20\n\
    \\fupgrade_type\CAN\SOH \SOH(\tR\vupgradeTypeB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\STX\200\SOH\NUL\DC24\n\
    \\aenabled\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\aenabled\DC2e\n\
    \\SOconnect_config\CAN\ETX \SOH(\v2>.envoy.config.route.v3.RouteAction.UpgradeConfig.ConnectConfigR\rconnectConfig\SUB\141\SOH\n\
    \\rConnectConfig\DC2]\n\
    \\NAKproxy_protocol_config\CAN\SOH \SOH(\v2).envoy.config.core.v3.ProxyProtocolConfigR\DC3proxyProtocolConfig\DC2\GS\n\
    \\n\
    \allow_post\CAN\STX \SOH(\bR\tallowPost:3\154\197\136\RS.\n\
    \,envoy.api.v2.route.RouteAction.UpgradeConfig\SUB\136\STX\n\
    \\DC1MaxStreamDuration\DC2I\n\
    \\DC3max_stream_duration\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\DC1maxStreamDuration\DC2P\n\
    \\ETBgrpc_timeout_header_max\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\DC4grpcTimeoutHeaderMax\DC2V\n\
    \\SUBgrpc_timeout_header_offset\CAN\ETX \SOH(\v2\EM.google.protobuf.DurationR\ETBgrpcTimeoutHeaderOffset\"E\n\
    \\ESCClusterNotFoundResponseCode\DC2\ETB\n\
    \\DC3SERVICE_UNAVAILABLE\DLE\NUL\DC2\r\n\
    \\tNOT_FOUND\DLE\SOH\"^\n\
    \\SYNInternalRedirectAction\DC2\"\n\
    \\RSPASS_THROUGH_INTERNAL_REDIRECT\DLE\NUL\DC2\FS\n\
    \\CANHANDLE_INTERNAL_REDIRECT\DLE\SOH\SUB\STX\CAN\SOHB\CAN\n\
    \\DC1cluster_specifier\DC2\ETX\248B\SOHB\CAN\n\
    \\SYNhost_rewrite_specifier:%\154\197\136\RS \n\
    \\RSenvoy.api.v2.route.RouteActionJ\EOT\b\f\DLE\rJ\EOT\b\DC2\DLE\DC3J\EOT\b\DC3\DLE\DC4J\EOT\b\DLE\DLE\DC1J\EOT\b\SYN\DLE\ETBJ\EOT\b\NAK\DLE\SYNJ\EOT\b\n\
    \\DLE\vR\NAKrequest_mirror_policy\"\141\SI\n\
    \\vRetryPolicy\DC2\EM\n\
    \\bretry_on\CAN\SOH \SOH(\tR\aretryOn\DC2R\n\
    \\vnum_retries\CAN\STX \SOH(\v2\FS.google.protobuf.UInt32ValueR\n\
    \numRetriesB\DC3\242\152\254\143\ENQ\r\n\
    \\vmax_retries\DC2A\n\
    \\SIper_try_timeout\CAN\ETX \SOH(\v2\EM.google.protobuf.DurationR\rperTryTimeout\DC2W\n\
    \\SOretry_priority\CAN\EOT \SOH(\v20.envoy.config.route.v3.RetryPolicy.RetryPriorityR\rretryPriority\DC2g\n\
    \\DC4retry_host_predicate\CAN\ENQ \ETX(\v25.envoy.config.route.v3.RetryPolicy.RetryHostPredicateR\DC2retryHostPredicate\DC2H\n\
    \!host_selection_retry_max_attempts\CAN\ACK \SOH(\ETXR\GShostSelectionRetryMaxAttempts\DC24\n\
    \\SYNretriable_status_codes\CAN\a \ETX(\rR\DC4retriableStatusCodes\DC2U\n\
    \\SOretry_back_off\CAN\b \SOH(\v2/.envoy.config.route.v3.RetryPolicy.RetryBackOffR\fretryBackOff\DC2x\n\
    \\ESCrate_limited_retry_back_off\CAN\v \SOH(\v2:.envoy.config.route.v3.RetryPolicy.RateLimitedRetryBackOffR\ETBrateLimitedRetryBackOff\DC2Q\n\
    \\DC1retriable_headers\CAN\t \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\DLEretriableHeaders\DC2`\n\
    \\EMretriable_request_headers\CAN\n\
    \ \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\ETBretriableRequestHeaders\SUB\185\SOH\n\
    \\rRetryPriority\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
    \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
    \\vconfig_type:3\154\197\136\RS.\n\
    \,envoy.api.v2.route.RetryPolicy.RetryPriorityJ\EOT\b\STX\DLE\ETXR\ACKconfig\SUB\195\SOH\n\
    \\DC2RetryHostPredicate\DC2\ESC\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH\DC29\n\
    \\ftyped_config\CAN\ETX \SOH(\v2\DC4.google.protobuf.AnyH\NULR\vtypedConfigB\r\n\
    \\vconfig_type:8\154\197\136\RS3\n\
    \1envoy.api.v2.route.RetryPolicy.RetryHostPredicateJ\EOT\b\STX\DLE\ETXR\ACKconfig\SUB\214\SOH\n\
    \\fRetryBackOff\DC2J\n\
    \\rbase_interval\CAN\SOH \SOH(\v2\EM.google.protobuf.DurationR\fbaseIntervalB\n\
    \\250B\a\170\SOH\EOT\b\SOH*\NUL\DC2F\n\
    \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL:2\154\197\136\RS-\n\
    \+envoy.api.v2.route.RetryPolicy.RetryBackOff\SUB\136\SOH\n\
    \\vResetHeader\DC2!\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2V\n\
    \\ACKformat\CAN\STX \SOH(\SO24.envoy.config.route.v3.RetryPolicy.ResetHeaderFormatR\ACKformatB\b\250B\ENQ\130\SOH\STX\DLE\SOH\SUB\192\SOH\n\
    \\ETBRateLimitedRetryBackOff\DC2]\n\
    \\rreset_headers\CAN\SOH \ETX(\v2..envoy.config.route.v3.RetryPolicy.ResetHeaderR\fresetHeadersB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2F\n\
    \\fmax_interval\CAN\STX \SOH(\v2\EM.google.protobuf.DurationR\vmaxIntervalB\b\250B\ENQ\170\SOH\STX*\NUL\"4\n\
    \\DC1ResetHeaderFormat\DC2\v\n\
    \\aSECONDS\DLE\NUL\DC2\DC2\n\
    \\SOUNIX_TIMESTAMP\DLE\SOH:%\154\197\136\RS \n\
    \\RSenvoy.api.v2.route.RetryPolicy\"\156\STX\n\
    \\vHedgePolicy\DC2P\n\
    \\DLEinitial_requests\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\SIinitialRequestsB\a\250B\EOT*\STX(\SOH\DC2\\\n\
    \\EMadditional_request_chance\CAN\STX \SOH(\v2 .envoy.type.v3.FractionalPercentR\ETBadditionalRequestChance\DC26\n\
    \\CANhedge_on_per_try_timeout\CAN\ETX \SOH(\bR\DC4hedgeOnPerTryTimeout:%\154\197\136\RS \n\
    \\RSenvoy.api.v2.route.HedgePolicy\"\225\ENQ\n\
    \\SORedirectAction\DC2'\n\
    \\SOhttps_redirect\CAN\EOT \SOH(\bH\NULR\rhttpsRedirect\DC2)\n\
    \\SIscheme_redirect\CAN\a \SOH(\tH\NULR\SOschemeRedirect\DC20\n\
    \\rhost_redirect\CAN\SOH \SOH(\tR\fhostRedirectB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2#\n\
    \\rport_redirect\CAN\b \SOH(\rR\fportRedirect\DC22\n\
    \\rpath_redirect\CAN\STX \SOH(\tH\SOHR\fpathRedirectB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC24\n\
    \\SOprefix_rewrite\CAN\ENQ \SOH(\tH\SOHR\rprefixRewriteB\v\250B\br\ACK\192\SOH\STX\200\SOH\NUL\DC2U\n\
    \\rregex_rewrite\CAN\t \SOH(\v2..envoy.type.matcher.v3.RegexMatchAndSubstituteH\SOHR\fregexRewrite\DC2i\n\
    \\rresponse_code\CAN\ETX \SOH(\SO2:.envoy.config.route.v3.RedirectAction.RedirectResponseCodeR\fresponseCodeB\b\250B\ENQ\130\SOH\STX\DLE\SOH\DC2\US\n\
    \\vstrip_query\CAN\ACK \SOH(\bR\n\
    \stripQuery\"w\n\
    \\DC4RedirectResponseCode\DC2\NAK\n\
    \\DC1MOVED_PERMANENTLY\DLE\NUL\DC2\t\n\
    \\ENQFOUND\DLE\SOH\DC2\r\n\
    \\tSEE_OTHER\DLE\STX\DC2\SYN\n\
    \\DC2TEMPORARY_REDIRECT\DLE\ETX\DC2\SYN\n\
    \\DC2PERMANENT_REDIRECT\DLE\EOTB\SUB\n\
    \\CANscheme_rewrite_specifierB\CAN\n\
    \\SYNpath_rewrite_specifier:(\154\197\136\RS#\n\
    \!envoy.api.v2.route.RedirectAction\"\160\SOH\n\
    \\DC4DirectResponseAction\DC2\"\n\
    \\ACKstatus\CAN\SOH \SOH(\rR\ACKstatusB\n\
    \\250B\a*\ENQ\DLE\216\EOT(d\DC24\n\
    \\EOTbody\CAN\STX \SOH(\v2 .envoy.config.core.v3.DataSourceR\EOTbody:.\154\197\136\RS)\n\
    \'envoy.api.v2.route.DirectResponseAction\"\NAK\n\
    \\DC3NonForwardingAction\"\145\SOH\n\
    \\tDecorator\DC2%\n\
    \\toperation\CAN\SOH \SOH(\tR\toperationB\a\250B\EOTr\STX\DLE\SOH\DC28\n\
    \\tpropagate\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\tpropagate:#\154\197\136\RS\RS\n\
    \\FSenvoy.api.v2.route.Decorator\"\210\STX\n\
    \\aTracing\DC2I\n\
    \\SIclient_sampling\CAN\SOH \SOH(\v2 .envoy.type.v3.FractionalPercentR\SOclientSampling\DC2I\n\
    \\SIrandom_sampling\CAN\STX \SOH(\v2 .envoy.type.v3.FractionalPercentR\SOrandomSampling\DC2K\n\
    \\DLEoverall_sampling\CAN\ETX \SOH(\v2 .envoy.type.v3.FractionalPercentR\SIoverallSampling\DC2A\n\
    \\vcustom_tags\CAN\EOT \ETX(\v2 .envoy.type.tracing.v3.CustomTagR\n\
    \customTags:!\154\197\136\RS\FS\n\
    \\SUBenvoy.api.v2.route.Tracing\"\180\SOH\n\
    \\SOVirtualCluster\DC2>\n\
    \\aheaders\CAN\EOT \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheaders\DC2\ESC\n\
    \\EOTname\CAN\STX \SOH(\tR\EOTnameB\a\250B\EOTr\STX\DLE\SOH:(\154\197\136\RS#\n\
    \!envoy.api.v2.route.VirtualClusterJ\EOT\b\SOH\DLE\STXJ\EOT\b\ETX\DLE\EOTR\apatternR\ACKmethod\"\170\SYN\n\
    \\tRateLimit\DC2;\n\
    \\ENQstage\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\ENQstageB\a\250B\EOT*\STX\CAN\n\
    \\DC2\US\n\
    \\vdisable_key\CAN\STX \SOH(\tR\n\
    \disableKey\DC2K\n\
    \\aactions\CAN\ETX \ETX(\v2'.envoy.config.route.v3.RateLimit.ActionR\aactionsB\b\250B\ENQ\146\SOH\STX\b\SOH\DC2?\n\
    \\ENQlimit\CAN\EOT \SOH(\v2).envoy.config.route.v3.RateLimit.OverrideR\ENQlimit\SUB\150\DC2\n\
    \\ACKAction\DC2^\n\
    \\SOsource_cluster\CAN\SOH \SOH(\v25.envoy.config.route.v3.RateLimit.Action.SourceClusterH\NULR\rsourceCluster\DC2m\n\
    \\DC3destination_cluster\CAN\STX \SOH(\v2:.envoy.config.route.v3.RateLimit.Action.DestinationClusterH\NULR\DC2destinationCluster\DC2a\n\
    \\SIrequest_headers\CAN\ETX \SOH(\v26.envoy.config.route.v3.RateLimit.Action.RequestHeadersH\NULR\SOrequestHeaders\DC2^\n\
    \\SOremote_address\CAN\EOT \SOH(\v25.envoy.config.route.v3.RateLimit.Action.RemoteAddressH\NULR\rremoteAddress\DC2U\n\
    \\vgeneric_key\CAN\ENQ \SOH(\v22.envoy.config.route.v3.RateLimit.Action.GenericKeyH\NULR\n\
    \genericKey\DC2h\n\
    \\DC2header_value_match\CAN\ACK \SOH(\v28.envoy.config.route.v3.RateLimit.Action.HeaderValueMatchH\NULR\DLEheaderValueMatch\DC2w\n\
    \\DLEdynamic_metadata\CAN\a \SOH(\v27.envoy.config.route.v3.RateLimit.Action.DynamicMetaDataH\NULR\SIdynamicMetadataB\DC1\CAN\SOH\146\199\134\216\EOT\ETX3.0\184\238\242\210\ENQ\SOH\DC2N\n\
    \\bmetadata\CAN\b \SOH(\v20.envoy.config.route.v3.RateLimit.Action.MetaDataH\NULR\bmetadata\DC2J\n\
    \\textension\CAN\t \SOH(\v2*.envoy.config.core.v3.TypedExtensionConfigH\NULR\textension\SUBI\n\
    \\rSourceCluster:8\154\197\136\RS3\n\
    \1envoy.api.v2.route.RateLimit.Action.SourceCluster\SUBS\n\
    \\DC2DestinationCluster:=\154\197\136\RS8\n\
    \6envoy.api.v2.route.RateLimit.Action.DestinationCluster\SUB\209\SOH\n\
    \\SORequestHeaders\DC2.\n\
    \\vheader_name\CAN\SOH \SOH(\tR\n\
    \headerNameB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2.\n\
    \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2$\n\
    \\SOskip_if_absent\CAN\ETX \SOH(\bR\fskipIfAbsent:9\154\197\136\RS4\n\
    \2envoy.api.v2.route.RateLimit.Action.RequestHeaders\SUBI\n\
    \\rRemoteAddress:8\154\197\136\RS3\n\
    \1envoy.api.v2.route.RateLimit.Action.RemoteAddress\SUB\158\SOH\n\
    \\n\
    \GenericKey\DC22\n\
    \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2%\n\
    \\SOdescriptor_key\CAN\STX \SOH(\tR\rdescriptorKey:5\154\197\136\RS0\n\
    \.envoy.api.v2.route.RateLimit.Action.GenericKey\SUB\140\STX\n\
    \\DLEHeaderValueMatch\DC22\n\
    \\DLEdescriptor_value\CAN\SOH \SOH(\tR\SIdescriptorValueB\a\250B\EOTr\STX\DLE\SOH\DC2=\n\
    \\fexpect_match\CAN\STX \SOH(\v2\SUB.google.protobuf.BoolValueR\vexpectMatch\DC2H\n\
    \\aheaders\CAN\ETX \ETX(\v2$.envoy.config.route.v3.HeaderMatcherR\aheadersB\b\250B\ENQ\146\SOH\STX\b\SOH:;\154\197\136\RS6\n\
    \4envoy.api.v2.route.RateLimit.Action.HeaderValueMatch\SUB\184\SOH\n\
    \\SIDynamicMetaData\DC2.\n\
    \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
    \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
    \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\SUB\180\STX\n\
    \\bMetaData\DC2.\n\
    \\SOdescriptor_key\CAN\SOH \SOH(\tR\rdescriptorKeyB\a\250B\EOTr\STX\DLE\SOH\DC2P\n\
    \\fmetadata_key\CAN\STX \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2#\n\
    \\rdefault_value\CAN\ETX \SOH(\tR\fdefaultValue\DC2Y\n\
    \\ACKsource\CAN\EOT \SOH(\SO27.envoy.config.route.v3.RateLimit.Action.MetaData.SourceR\ACKsourceB\b\250B\ENQ\130\SOH\STX\DLE\SOH\"&\n\
    \\ACKSource\DC2\v\n\
    \\aDYNAMIC\DLE\NUL\DC2\SI\n\
    \\vROUTE_ENTRY\DLE\SOHB\ETB\n\
    \\DLEaction_specifier\DC2\ETX\248B\SOH:*\154\197\136\RS%\n\
    \#envoy.api.v2.route.RateLimit.Action\SUB\242\SOH\n\
    \\bOverride\DC2f\n\
    \\DLEdynamic_metadata\CAN\SOH \SOH(\v29.envoy.config.route.v3.RateLimit.Override.DynamicMetadataH\NULR\SIdynamicMetadata\SUBc\n\
    \\SIDynamicMetadata\DC2P\n\
    \\fmetadata_key\CAN\SOH \SOH(\v2#.envoy.type.metadata.v3.MetadataKeyR\vmetadataKeyB\b\250B\ENQ\138\SOH\STX\DLE\SOHB\EM\n\
    \\DC2override_specifier\DC2\ETX\248B\SOH:#\154\197\136\RS\RS\n\
    \\FSenvoy.api.v2.route.RateLimit\"\158\EOT\n\
    \\rHeaderMatcher\DC2!\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\r\250B\n\
    \r\b\DLE\SOH\192\SOH\SOH\200\SOH\NUL\DC2!\n\
    \\vexact_match\CAN\EOT \SOH(\tH\NULR\n\
    \exactMatch\DC2O\n\
    \\DLEsafe_regex_match\CAN\v \SOH(\v2#.envoy.type.matcher.v3.RegexMatcherH\NULR\SOsafeRegexMatch\DC2<\n\
    \\vrange_match\CAN\ACK \SOH(\v2\EM.envoy.type.v3.Int64RangeH\NULR\n\
    \rangeMatch\DC2%\n\
    \\rpresent_match\CAN\a \SOH(\bH\NULR\fpresentMatch\DC2,\n\
    \\fprefix_match\CAN\t \SOH(\tH\NULR\vprefixMatchB\a\250B\EOTr\STX\DLE\SOH\DC2,\n\
    \\fsuffix_match\CAN\n\
    \ \SOH(\tH\NULR\vsuffixMatchB\a\250B\EOTr\STX\DLE\SOH\DC20\n\
    \\SOcontains_match\CAN\f \SOH(\tH\NULR\rcontainsMatchB\a\250B\EOTr\STX\DLE\SOH\DC2!\n\
    \\finvert_match\CAN\b \SOH(\bR\vinvertMatchB\CAN\n\
    \\SYNheader_match_specifier:'\154\197\136\RS\"\n\
    \ envoy.api.v2.route.HeaderMatcherJ\EOT\b\STX\DLE\ETXJ\EOT\b\ETX\DLE\EOTJ\EOT\b\ENQ\DLE\ACKR\vregex_match\"\161\STX\n\
    \\NAKQueryParameterMatcher\DC2\RS\n\
    \\EOTname\CAN\SOH \SOH(\tR\EOTnameB\n\
    \\250B\ar\ENQ\DLE\SOH(\128\b\DC2S\n\
    \\fstring_match\CAN\ENQ \SOH(\v2$.envoy.type.matcher.v3.StringMatcherH\NULR\vstringMatchB\b\250B\ENQ\138\SOH\STX\DLE\SOH\DC2%\n\
    \\rpresent_match\CAN\ACK \SOH(\bH\NULR\fpresentMatchB!\n\
    \\USquery_parameter_match_specifier:/\154\197\136\RS*\n\
    \(envoy.api.v2.route.QueryParameterMatcherJ\EOT\b\ETX\DLE\EOTJ\EOT\b\EOT\DLE\ENQR\ENQvalueR\ENQregex\"\185\STX\n\
    \\SYNInternalRedirectPolicy\DC2R\n\
    \\SYNmax_internal_redirects\CAN\SOH \SOH(\v2\FS.google.protobuf.UInt32ValueR\DC4maxInternalRedirects\DC2@\n\
    \\ETBredirect_response_codes\CAN\STX \ETX(\rR\NAKredirectResponseCodesB\b\250B\ENQ\146\SOH\STX\DLE\ENQ\DC2J\n\
    \\n\
    \predicates\CAN\ETX \ETX(\v2*.envoy.config.core.v3.TypedExtensionConfigR\n\
    \predicates\DC2=\n\
    \\ESCallow_cross_scheme_redirect\CAN\EOT \SOH(\bR\CANallowCrossSchemeRedirect\"]\n\
    \\fFilterConfig\DC2,\n\
    \\ACKconfig\CAN\SOH \SOH(\v2\DC4.google.protobuf.AnyR\ACKconfig\DC2\US\n\
    \\vis_optional\CAN\STX \SOH(\bR\n\
    \isOptionalBE\n\
    \#io.envoyproxy.envoy.config.route.v3B\DC4RouteComponentsProtoP\SOH\186\128\200\209\ACK\STX\DLE\STXJ\193\206\ENQ\n\
    \\a\DC2\ENQ\NUL\NUL\216\SI\SOH\n\
    \\b\n\
    \\SOH\f\DC2\ETX\NUL\NUL\DC2\n\
    \\b\n\
    \\SOH\STX\DC2\ETX\STX\NUL\RS\n\
    \\t\n\
    \\STX\ETX\NUL\DC2\ETX\EOT\NUL)\n\
    \\t\n\
    \\STX\ETX\SOH\DC2\ETX\ENQ\NUL.\n\
    \\t\n\
    \\STX\ETX\STX\DC2\ETX\ACK\NUL3\n\
    \\t\n\
    \\STX\ETX\ETX\DC2\ETX\a\NUL+\n\
    \\t\n\
    \\STX\ETX\EOT\DC2\ETX\b\NUL,\n\
    \\t\n\
    \\STX\ETX\ENQ\DC2\ETX\t\NUL/\n\
    \\t\n\
    \\STX\ETX\ACK\DC2\ETX\n\
    \\NUL0\n\
    \\t\n\
    \\STX\ETX\a\DC2\ETX\v\NUL%\n\
    \\t\n\
    \\STX\ETX\b\DC2\ETX\f\NUL#\n\
    \\t\n\
    \\STX\ETX\t\DC2\ETX\SO\NUL#\n\
    \\t\n\
    \\STX\ETX\n\
    \\DC2\ETX\SI\NUL(\n\
    \\t\n\
    \\STX\ETX\v\DC2\ETX\DLE\NUL(\n\
    \\t\n\
    \\STX\ETX\f\DC2\ETX\DC2\NUL-\n\
    \\t\n\
    \\STX\ETX\r\DC2\ETX\DC3\NUL(\n\
    \\t\n\
    \\STX\ETX\SO\DC2\ETX\DC4\NUL'\n\
    \\t\n\
    \\STX\ETX\SI\DC2\ETX\NAK\NUL+\n\
    \\t\n\
    \\STX\ETX\DLE\DC2\ETX\SYN\NUL!\n\
    \\b\n\
    \\SOH\b\DC2\ETX\CAN\NUL<\n\
    \\t\n\
    \\STX\b\SOH\DC2\ETX\CAN\NUL<\n\
    \\b\n\
    \\SOH\b\DC2\ETX\EM\NUL5\n\
    \\t\n\
    \\STX\b\b\DC2\ETX\EM\NUL5\n\
    \\b\n\
    \\SOH\b\DC2\ETX\SUB\NUL\"\n\
    \\t\n\
    \\STX\b\n\
    \\DC2\ETX\SUB\NUL\"\n\
    \\b\n\
    \\SOH\b\DC2\ETX\ESC\NULF\n\
    \\r\n\
    \\ACK\b\135\128\153j\STX\DC2\ETX\ESC\NULF\n\
    \\147\ENQ\n\
    \\STX\EOT\NUL\DC2\ENQ'\NUL\188\SOH\SOH\SUB\217\ETX The top level element in the routing configuration is a virtual host. Each virtual host has\n\
    \ a logical name as well as a set of domains that get routed to it based on the incoming request's\n\
    \ host header. This allows a single listener to service multiple top level domain path trees. Once\n\
    \ a virtual host is selected based on the domain, the routes are processed in order to see which\n\
    \ upstream cluster to route to or whether to perform a redirect.\n\
    \ [#next-free-field: 21]\n\
    \2\169\SOH [#protodoc-title: HTTP route components]\n\
    \ * Routing :ref:`architecture overview <arch_overview_http_routing>`\n\
    \ * HTTP :ref:`router filter <config_http_filters_router>`\n\
    \\n\
    \\n\
    \\n\
    \\ETX\EOT\NUL\SOH\DC2\ETX'\b\DC3\n\
    \\n\
    \\n\
    \\ETX\EOT\NUL\a\DC2\ETX(\STX`\n\
    \\SI\n\
    \\b\EOT\NUL\a\211\136\225\ETX\SOH\DC2\ETX(\STX`\n\
    \\f\n\
    \\EOT\EOT\NUL\EOT\NUL\DC2\EOT*\STX5\ETX\n\
    \\f\n\
    \\ENQ\EOT\NUL\EOT\NUL\SOH\DC2\ETX*\a\EM\n\
    \9\n\
    \\ACK\EOT\NUL\EOT\NUL\STX\NUL\DC2\ETX,\EOT\r\SUB* No TLS requirement for the virtual host.\n\
    \\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\NUL\SOH\DC2\ETX,\EOT\b\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\NUL\STX\DC2\ETX,\v\f\n\
    \\161\SOH\n\
    \\ACK\EOT\NUL\EOT\NUL\STX\SOH\DC2\ETX0\EOT\SYN\SUB\145\SOH External requests must use TLS. If a request is external and it is not\n\
    \ using TLS, a 301 redirect will be sent telling the client to use HTTPS.\n\
    \\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\SOH\SOH\DC2\ETX0\EOT\DC1\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\SOH\STX\DC2\ETX0\DC4\NAK\n\
    \\136\SOH\n\
    \\ACK\EOT\NUL\EOT\NUL\STX\STX\DC2\ETX4\EOT\f\SUBy All requests must use TLS. If a request is not using TLS, a 301 redirect\n\
    \ will be sent telling the client to use HTTPS.\n\
    \\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\STX\SOH\DC2\ETX4\EOT\a\n\
    \\SO\n\
    \\a\EOT\NUL\EOT\NUL\STX\STX\STX\DC2\ETX4\n\
    \\v\n\
    \\n\
    \\n\
    \\ETX\EOT\NUL\t\DC2\ETX7\STX\DC1\n\
    \\v\n\
    \\EOT\EOT\NUL\t\NUL\DC2\ETX7\v\f\n\
    \\f\n\
    \\ENQ\EOT\NUL\t\NUL\SOH\DC2\ETX7\v\f\n\
    \\f\n\
    \\ENQ\EOT\NUL\t\NUL\STX\DC2\ETX7\v\f\n\
    \\v\n\
    \\EOT\EOT\NUL\t\SOH\DC2\ETX7\SO\DLE\n\
    \\f\n\
    \\ENQ\EOT\NUL\t\SOH\SOH\DC2\ETX7\SO\DLE\n\
    \\f\n\
    \\ENQ\EOT\NUL\t\SOH\STX\DC2\ETX7\SO\DLE\n\
    \\n\
    \\n\
    \\ETX\EOT\NUL\n\
    \\DC2\ETX9\STX\US\n\
    \\v\n\
    \\EOT\EOT\NUL\n\
    \\NUL\DC2\ETX9\v\RS\n\
    \\132\SOH\n\
    \\EOT\EOT\NUL\STX\NUL\DC2\ETX=\STX;\SUBw The logical name of the virtual host. This is used when emitting certain\n\
    \ statistics but is not relevant for routing.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\ENQ\DC2\ETX=\STX\b\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\SOH\DC2\ETX=\t\r\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\ETX\DC2\ETX=\DLE\DC1\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\NUL\b\DC2\ETX=\DC2:\n\
    \\SI\n\
    \\b\EOT\NUL\STX\NUL\b\175\b\SO\DC2\ETX=\DC39\n\
    \\213\ACK\n\
    \\EOT\EOT\NUL\STX\SOH\DC2\EOTQ\STXT\ENQ\SUB\198\ACK A list of domains (host/authority header) that will be matched to this\n\
    \ virtual host. Wildcard hosts are supported in the suffix or prefix form.\n\
    \\n\
    \ Domain search order:\n\
    \  1. Exact domain names: ``www.foo.com``.\n\
    \  2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.\n\
    \  3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.\n\
    \  4. Special wildcard ``*`` matching any domain.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   The wildcard will not match the empty string.\n\
    \   e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``.\n\
    \   The longest wildcards match first.\n\
    \   Only a single virtual host in the entire route configuration can match on ``*``. A domain\n\
    \   must be unique across all virtual hosts or the config will fail to load.\n\
    \\n\
    \ Domains cannot contain control characters. This is validated by the well_known_regex HTTP_HEADER_VALUE.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\EOT\DC2\ETXQ\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\ENQ\DC2\ETXQ\v\DC1\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\SOH\DC2\ETXQ\DC2\EM\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\SOH\ETX\DC2\ETXQ\FS\GS\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SOH\b\DC2\EOTQ\RST\EOT\n\
    \\DLE\n\
    \\b\EOT\NUL\STX\SOH\b\175\b\DC2\DC2\EOTQ\UST\ETX\n\
    \\132\SOH\n\
    \\EOT\EOT\NUL\STX\STX\DC2\ETXX\STX\FS\SUBw The list of routes that will be matched, in order, for incoming requests.\n\
    \ The first route that matches will be used.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\EOT\DC2\ETXX\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\ACK\DC2\ETXX\v\DLE\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\SOH\DC2\ETXX\DC1\ETB\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\STX\ETX\DC2\ETXX\SUB\ESC\n\
    \\163\SOH\n\
    \\EOT\EOT\NUL\STX\ETX\DC2\ETX\\\STXT\SUB\149\SOH Specifies the type of TLS enforcement the virtual host expects. If this option is not\n\
    \ specified, there is no TLS requirement for the virtual host.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\ACK\DC2\ETX\\\STX\DC4\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\SOH\DC2\ETX\\\NAK \n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\ETX\DC2\ETX\\#$\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ETX\b\DC2\ETX\\%S\n\
    \\SI\n\
    \\b\EOT\NUL\STX\ETX\b\175\b\DLE\DC2\ETX\\&R\n\
    \\136\SOH\n\
    \\EOT\EOT\NUL\STX\EOT\DC2\ETX`\STX/\SUB{ A list of virtual clusters defined for this virtual host. Virtual clusters\n\
    \ are used for additional statistics gathering.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\EOT\DC2\ETX`\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\ACK\DC2\ETX`\v\EM\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\SOH\DC2\ETX`\SUB*\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\EOT\ETX\DC2\ETX`-.\n\
    \f\n\
    \\EOT\EOT\NUL\STX\ENQ\DC2\ETXd\STX%\SUBY Specifies a set of rate limit configurations that will be applied to the\n\
    \ virtual host.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\EOT\DC2\ETXd\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\ACK\DC2\ETXd\v\DC4\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\SOH\DC2\ETXd\NAK \n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ENQ\ETX\DC2\ETXd#$\n\
    \\255\ETX\n\
    \\EOT\EOT\NUL\STX\ACK\DC2\EOTl\STXm6\SUB\240\ETX Specifies a list of HTTP headers that should be added to each request\n\
    \ handled by this virtual host. Headers specified at this level are applied\n\
    \ after headers from enclosed :ref:`envoy_v3_api_msg_config.route.v3.Route` and before headers from the\n\
    \ enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including\n\
    \ details on header value syntax, see the documentation on :ref:`custom request headers\n\
    \ <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\EOT\DC2\ETXl\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\ACK\DC2\ETXl\v$\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\SOH\DC2\ETXl%;\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\ETX\DC2\ETXl>?\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\ACK\b\DC2\ETXm\ACK5\n\
    \\SI\n\
    \\b\EOT\NUL\STX\ACK\b\175\b\DC2\DC2\ETXm\a4\n\
    \x\n\
    \\EOT\EOT\NUL\STX\a\DC2\EOTq\STXs\ENQ\SUBj Specifies a list of HTTP headers that should be removed from each request\n\
    \ handled by this virtual host.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\EOT\DC2\ETXq\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\ENQ\DC2\ETXq\v\DC1\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\SOH\DC2\ETXq\DC2+\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\a\ETX\DC2\ETXq.0\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\a\b\DC2\EOTq1s\EOT\n\
    \\DLE\n\
    \\b\EOT\NUL\STX\a\b\175\b\DC2\DC2\EOTq2s\ETX\n\
    \\128\EOT\n\
    \\EOT\EOT\NUL\STX\b\DC2\EOT{\STX|6\SUB\241\ETX Specifies a list of HTTP headers that should be added to each response\n\
    \ handled by this virtual host. Headers specified at this level are applied\n\
    \ after headers from enclosed :ref:`envoy_v3_api_msg_config.route.v3.Route` and before headers from the\n\
    \ enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including\n\
    \ details on header value syntax, see the documentation on :ref:`custom request headers\n\
    \ <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\EOT\DC2\ETX{\STX\n\
    \\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\ACK\DC2\ETX{\v$\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\SOH\DC2\ETX{%<\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\ETX\DC2\ETX{?A\n\
    \\f\n\
    \\ENQ\EOT\NUL\STX\b\b\DC2\ETX|\ACK5\n\
    \\SI\n\
    \\b\EOT\NUL\STX\b\b\175\b\DC2\DC2\ETX|\a4\n\
    \{\n\
    \\EOT\EOT\NUL\STX\t\DC2\ACK\128\SOH\STX\130\SOH\ENQ\SUBk Specifies a list of HTTP headers that should be removed from each response\n\
    \ handled by this virtual host.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\t\EOT\DC2\EOT\128\SOH\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\t\ENQ\DC2\EOT\128\SOH\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\t\SOH\DC2\EOT\128\SOH\DC2,\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\t\ETX\DC2\EOT\128\SOH/1\n\
    \\SI\n\
    \\ENQ\EOT\NUL\STX\t\b\DC2\ACK\128\SOH2\130\SOH\EOT\n\
    \\DC2\n\
    \\b\EOT\NUL\STX\t\b\175\b\DC2\DC2\ACK\128\SOH3\130\SOH\ETX\n\
    \B\n\
    \\EOT\EOT\NUL\STX\n\
    \\DC2\EOT\133\SOH\STX\SYN\SUB4 Indicates that the virtual host has a CORS policy.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\n\
    \\ACK\DC2\EOT\133\SOH\STX\f\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\n\
    \\SOH\DC2\EOT\133\SOH\r\DC1\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\n\
    \\ETX\DC2\EOT\133\SOH\DC4\NAK\n\
    \\129\EOT\n\
    \\EOT\EOT\NUL\STX\v\DC2\EOT\143\SOH\STX@\SUB\242\ETX The per_filter_config field can be used to provide virtual host-specific\n\
    \ configurations for filters. The key should match the filter name, such as\n\
    \ *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter\n\
    \ specific; see the :ref:`HTTP filter documentation <config_http_filters>`\n\
    \ for if and how it is utilized.\n\
    \ [#comment: An entry's value may be wrapped in a\n\
    \ :ref:`FilterConfig<envoy_v3_api_msg_config.route.v3.FilterConfig>`\n\
    \ message to specify additional options.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\v\ACK\DC2\EOT\143\SOH\STX\"\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\v\SOH\DC2\EOT\143\SOH#:\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\v\ETX\DC2\EOT\143\SOH=?\n\
    \\254\EOT\n\
    \\EOT\EOT\NUL\STX\f\DC2\EOT\155\SOH\STX*\SUB\239\EOT Decides whether the :ref:`x-envoy-attempt-count\n\
    \ <config_http_filters_router_x-envoy-attempt-count>` header should be included\n\
    \ in the upstream request. Setting this option will cause it to override any existing header\n\
    \ value, so in the case of two Envoys on the request path with this option enabled, the upstream\n\
    \ will see the attempt count as perceived by the second Envoy. Defaults to false.\n\
    \ This header is unaffected by the\n\
    \ :ref:`suppress_envoy_headers\n\
    \ <envoy_v3_api_field_extensions.filters.http.router.v3.Router.suppress_envoy_headers>` flag.\n\
    \\n\
    \ [#next-major-version: rename to include_attempt_count_in_request.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\f\ENQ\DC2\EOT\155\SOH\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\f\SOH\DC2\EOT\155\SOH\a$\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\f\ETX\DC2\EOT\155\SOH')\n\
    \\220\EOT\n\
    \\EOT\EOT\NUL\STX\r\DC2\EOT\165\SOH\STX.\SUB\205\EOT Decides whether the :ref:`x-envoy-attempt-count\n\
    \ <config_http_filters_router_x-envoy-attempt-count>` header should be included\n\
    \ in the downstream response. Setting this option will cause the router to override any existing header\n\
    \ value, so in the case of two Envoys on the request path with this option enabled, the downstream\n\
    \ will see the attempt count as perceived by the Envoy closest upstream from itself. Defaults to false.\n\
    \ This header is unaffected by the\n\
    \ :ref:`suppress_envoy_headers\n\
    \ <envoy_v3_api_field_extensions.filters.http.router.v3.Router.suppress_envoy_headers>` flag.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\r\ENQ\DC2\EOT\165\SOH\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\r\SOH\DC2\EOT\165\SOH\a(\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\r\ETX\DC2\EOT\165\SOH+-\n\
    \\227\SOH\n\
    \\EOT\EOT\NUL\STX\SO\DC2\EOT\170\SOH\STX \SUB\212\SOH Indicates the retry policy for all routes in this virtual host. Note that setting a\n\
    \ route level entry will take precedence over this config and it'll be treated\n\
    \ independently (e.g.: values are not inherited).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SO\ACK\DC2\EOT\170\SOH\STX\r\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SO\SOH\DC2\EOT\170\SOH\SO\SUB\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SO\ETX\DC2\EOT\170\SOH\GS\US\n\
    \\241\STX\n\
    \\EOT\EOT\NUL\STX\SI\DC2\EOT\177\SOH\STX5\SUB\226\STX [#not-implemented-hide:]\n\
    \ Specifies the configuration for retry policy extension. Note that setting a route level entry\n\
    \ will take precedence over this config and it'll be treated independently (e.g.: values are not\n\
    \ inherited). :ref:`Retry policy <envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy>` should not be\n\
    \ set if this field is used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SI\ACK\DC2\EOT\177\SOH\STX\NAK\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SI\SOH\DC2\EOT\177\SOH\SYN/\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\SI\ETX\DC2\EOT\177\SOH24\n\
    \\227\SOH\n\
    \\EOT\EOT\NUL\STX\DLE\DC2\EOT\182\SOH\STX \SUB\212\SOH Indicates the hedge policy for all routes in this virtual host. Note that setting a\n\
    \ route level entry will take precedence over this config and it'll be treated\n\
    \ independently (e.g.: values are not inherited).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DLE\ACK\DC2\EOT\182\SOH\STX\r\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DLE\SOH\DC2\EOT\182\SOH\SO\SUB\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DLE\ETX\DC2\EOT\182\SOH\GS\US\n\
    \\246\SOH\n\
    \\EOT\EOT\NUL\STX\DC1\DC2\EOT\187\SOH\STXB\SUB\231\SOH The maximum bytes which will be buffered for retries and shadowing.\n\
    \ If set and a route-specific limit is not set, the bytes actually buffered will be the minimum\n\
    \ value of this and the listener per_connection_buffer_limit_bytes.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DC1\ACK\DC2\EOT\187\SOH\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DC1\SOH\DC2\EOT\187\SOH\RS<\n\
    \\r\n\
    \\ENQ\EOT\NUL\STX\DC1\ETX\DC2\EOT\187\SOH?A\n\
    \-\n\
    \\STX\EOT\SOH\DC2\ACK\191\SOH\NUL\195\SOH\SOH\SUB\US A filter-defined action type.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\SOH\SOH\DC2\EOT\191\SOH\b\DC4\n\
    \\v\n\
    \\ETX\EOT\SOH\a\DC2\EOT\192\SOH\STXa\n\
    \\DLE\n\
    \\b\EOT\SOH\a\211\136\225\ETX\SOH\DC2\EOT\192\SOH\STXa\n\
    \\f\n\
    \\EOT\EOT\SOH\STX\NUL\DC2\EOT\194\SOH\STX!\n\
    \\r\n\
    \\ENQ\EOT\SOH\STX\NUL\ACK\DC2\EOT\194\SOH\STX\NAK\n\
    \\r\n\
    \\ENQ\EOT\SOH\STX\NUL\SOH\DC2\EOT\194\SOH\SYN\FS\n\
    \\r\n\
    \\ENQ\EOT\SOH\STX\NUL\ETX\DC2\EOT\194\SOH\US \n\
    \\196\STX\n\
    \\STX\EOT\STX\DC2\ACK\205\SOH\NUL\174\STX\SOH\SUB\181\STX A route is both a specification of how to match a request as well as an indication of what to do\n\
    \ next (e.g., redirect, forward, rewrite, etc.).\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Envoy supports routing on HTTP method via :ref:`header matching\n\
    \   <envoy_v3_api_msg_config.route.v3.HeaderMatcher>`.\n\
    \ [#next-free-field: 19]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\STX\SOH\DC2\EOT\205\SOH\b\r\n\
    \\v\n\
    \\ETX\EOT\STX\a\DC2\EOT\206\SOH\STXZ\n\
    \\DLE\n\
    \\b\EOT\STX\a\211\136\225\ETX\SOH\DC2\EOT\206\SOH\STXZ\n\
    \\v\n\
    \\ETX\EOT\STX\t\DC2\EOT\208\SOH\STX\DLE\n\
    \\f\n\
    \\EOT\EOT\STX\t\NUL\DC2\EOT\208\SOH\v\f\n\
    \\r\n\
    \\ENQ\EOT\STX\t\NUL\SOH\DC2\EOT\208\SOH\v\f\n\
    \\r\n\
    \\ENQ\EOT\STX\t\NUL\STX\DC2\EOT\208\SOH\v\f\n\
    \\f\n\
    \\EOT\EOT\STX\t\SOH\DC2\EOT\208\SOH\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\STX\t\SOH\SOH\DC2\EOT\208\SOH\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\STX\t\SOH\STX\DC2\EOT\208\SOH\SO\SI\n\
    \\v\n\
    \\ETX\EOT\STX\n\
    \\DC2\EOT\210\SOH\STX\US\n\
    \\f\n\
    \\EOT\EOT\STX\n\
    \\NUL\DC2\EOT\210\SOH\v\RS\n\
    \#\n\
    \\EOT\EOT\STX\STX\NUL\DC2\EOT\213\SOH\STX\DC3\SUB\NAK Name for the route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\NUL\ENQ\DC2\EOT\213\SOH\STX\b\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\NUL\SOH\DC2\EOT\213\SOH\t\r\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\NUL\ETX\DC2\EOT\213\SOH\DLE\DC2\n\
    \*\n\
    \\EOT\EOT\STX\STX\SOH\DC2\EOT\216\SOH\STXE\SUB\FS Route matching parameters.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SOH\ACK\DC2\EOT\216\SOH\STX\f\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SOH\SOH\DC2\EOT\216\SOH\r\DC2\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SOH\ETX\DC2\EOT\216\SOH\NAK\SYN\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SOH\b\DC2\EOT\216\SOH\ETBD\n\
    \\DLE\n\
    \\b\EOT\STX\STX\SOH\b\175\b\DC1\DC2\EOT\216\SOH\CANC\n\
    \\SO\n\
    \\EOT\EOT\STX\b\NUL\DC2\ACK\218\SOH\STX\242\SOH\ETX\n\
    \\r\n\
    \\ENQ\EOT\STX\b\NUL\SOH\DC2\EOT\218\SOH\b\SO\n\
    \\r\n\
    \\ENQ\EOT\STX\b\NUL\STX\DC2\EOT\219\SOH\EOT&\n\
    \\SI\n\
    \\a\EOT\STX\b\NUL\STX\175\b\DC2\EOT\219\SOH\EOT&\n\
    \7\n\
    \\EOT\EOT\STX\STX\STX\DC2\EOT\222\SOH\EOT\SUB\SUB) Route request to some upstream cluster.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\STX\ACK\DC2\EOT\222\SOH\EOT\SI\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\STX\SOH\DC2\EOT\222\SOH\DLE\NAK\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\STX\ETX\DC2\EOT\222\SOH\CAN\EM\n\
    \\"\n\
    \\EOT\EOT\STX\STX\ETX\DC2\EOT\225\SOH\EOT \SUB\DC4 Return a redirect.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ETX\ACK\DC2\EOT\225\SOH\EOT\DC2\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ETX\SOH\DC2\EOT\225\SOH\DC3\ESC\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ETX\ETX\DC2\EOT\225\SOH\RS\US\n\
    \M\n\
    \\EOT\EOT\STX\STX\EOT\DC2\EOT\228\SOH\EOT-\SUB? Return an arbitrary HTTP response directly, without proxying.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\EOT\ACK\DC2\EOT\228\SOH\EOT\CAN\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\EOT\SOH\DC2\EOT\228\SOH\EM(\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\EOT\ETX\DC2\EOT\228\SOH+,\n\
    \\208\SOH\n\
    \\EOT\EOT\STX\STX\ENQ\DC2\EOT\234\SOH\EOT$\SUB\193\SOH [#not-implemented-hide:]\n\
    \ A filter-defined action (e.g., it could dynamically generate the RouteAction).\n\
    \ [#comment: TODO(samflattery): Remove cleanup in route_fuzz_test.cc when\n\
    \ implemented]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ENQ\ACK\DC2\EOT\234\SOH\EOT\DLE\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ENQ\SOH\DC2\EOT\234\SOH\DC1\RS\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ENQ\ETX\DC2\EOT\234\SOH!#\n\
    \\193\STX\n\
    \\EOT\EOT\STX\STX\ACK\DC2\EOT\241\SOH\EOT3\SUB\178\STX [#not-implemented-hide:]\n\
    \ An action used when the route will generate a response directly,\n\
    \ without forwarding to an upstream host. This will be used in non-proxy\n\
    \ xDS clients like the gRPC server. It could also be used in the future\n\
    \ in Envoy for a filter that directly generates responses for requests.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ACK\ACK\DC2\EOT\241\SOH\EOT\ETB\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ACK\SOH\DC2\EOT\241\SOH\CAN-\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\ACK\ETX\DC2\EOT\241\SOH02\n\
    \\230\STX\n\
    \\EOT\EOT\STX\STX\a\DC2\EOT\249\SOH\STX \SUB\215\STX The Metadata field can be used to provide additional information\n\
    \ about the route. It can be used for configuration, stats, and logging.\n\
    \ The metadata should go under the filter namespace that will need it.\n\
    \ For instance, if the metadata is intended for the Router filter,\n\
    \ the filter name should be specified as *envoy.filters.http.router*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\a\ACK\DC2\EOT\249\SOH\STX\DC2\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\a\SOH\DC2\EOT\249\SOH\DC3\ESC\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\a\ETX\DC2\EOT\249\SOH\RS\US\n\
    \0\n\
    \\EOT\EOT\STX\STX\b\DC2\EOT\252\SOH\STX\SUB\SUB\" Decorator for the matched route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\b\ACK\DC2\EOT\252\SOH\STX\v\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\b\SOH\DC2\EOT\252\SOH\f\NAK\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\b\ETX\DC2\EOT\252\SOH\CAN\EM\n\
    \\128\EOT\n\
    \\EOT\EOT\STX\STX\t\DC2\EOT\134\STX\STX@\SUB\241\ETX The typed_per_filter_config field can be used to provide route-specific\n\
    \ configurations for filters. The key should match the filter name, such as\n\
    \ *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter\n\
    \ specific; see the :ref:`HTTP filter documentation <config_http_filters>` for\n\
    \ if and how it is utilized.\n\
    \ [#comment: An entry's value may be wrapped in a\n\
    \ :ref:`FilterConfig<envoy_v3_api_msg_config.route.v3.FilterConfig>`\n\
    \ message to specify additional options.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\t\ACK\DC2\EOT\134\STX\STX\"\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\t\SOH\DC2\EOT\134\STX#:\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\t\ETX\DC2\EOT\134\STX=?\n\
    \\214\ETX\n\
    \\EOT\EOT\STX\STX\n\
    \\DC2\ACK\142\STX\STX\143\STX6\SUB\197\ETX Specifies a set of headers that will be added to requests matching this\n\
    \ route. Headers specified at this level are applied before headers from the\n\
    \ enclosing :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost` and\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including details on\n\
    \ header value syntax, see the documentation on :ref:`custom request headers\n\
    \ <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\n\
    \\EOT\DC2\EOT\142\STX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\n\
    \\ACK\DC2\EOT\142\STX\v$\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\n\
    \\SOH\DC2\EOT\142\STX%;\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\n\
    \\ETX\DC2\EOT\142\STX>?\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\n\
    \\b\DC2\EOT\143\STX\ACK5\n\
    \\DLE\n\
    \\b\EOT\STX\STX\n\
    \\b\175\b\DC2\DC2\EOT\143\STX\a4\n\
    \q\n\
    \\EOT\EOT\STX\STX\v\DC2\ACK\147\STX\STX\149\STX\ENQ\SUBa Specifies a list of HTTP headers that should be removed from each request\n\
    \ matching this route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\v\EOT\DC2\EOT\147\STX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\v\ENQ\DC2\EOT\147\STX\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\v\SOH\DC2\EOT\147\STX\DC2+\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\v\ETX\DC2\EOT\147\STX.0\n\
    \\SI\n\
    \\ENQ\EOT\STX\STX\v\b\DC2\ACK\147\STX1\149\STX\EOT\n\
    \\DC2\n\
    \\b\EOT\STX\STX\v\b\175\b\DC2\DC2\ACK\147\STX2\149\STX\ETX\n\
    \\227\ETX\n\
    \\EOT\EOT\STX\STX\f\DC2\ACK\157\STX\STX\158\STX6\SUB\210\ETX Specifies a set of headers that will be added to responses to requests\n\
    \ matching this route. Headers specified at this level are applied before\n\
    \ headers from the enclosing :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost` and\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including\n\
    \ details on header value syntax, see the documentation on\n\
    \ :ref:`custom request headers <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\f\EOT\DC2\EOT\157\STX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\f\ACK\DC2\EOT\157\STX\v$\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\f\SOH\DC2\EOT\157\STX%<\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\f\ETX\DC2\EOT\157\STX?A\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\f\b\DC2\EOT\158\STX\ACK5\n\
    \\DLE\n\
    \\b\EOT\STX\STX\f\b\175\b\DC2\DC2\EOT\158\STX\a4\n\
    \~\n\
    \\EOT\EOT\STX\STX\r\DC2\ACK\162\STX\STX\164\STX\ENQ\SUBn Specifies a list of HTTP headers that should be removed from each response\n\
    \ to requests matching this route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\r\EOT\DC2\EOT\162\STX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\r\ENQ\DC2\EOT\162\STX\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\r\SOH\DC2\EOT\162\STX\DC2,\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\r\ETX\DC2\EOT\162\STX/1\n\
    \\SI\n\
    \\ENQ\EOT\STX\STX\r\b\DC2\ACK\162\STX2\164\STX\EOT\n\
    \\DC2\n\
    \\b\EOT\STX\STX\r\b\175\b\DC2\DC2\ACK\162\STX3\164\STX\ETX\n\
    \\150\SOH\n\
    \\EOT\EOT\STX\STX\SO\DC2\EOT\168\STX\STX\ETB\SUB\135\SOH Presence of the object defines whether the connection manager's tracing configuration\n\
    \ is overridden by this route specific instance.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SO\ACK\DC2\EOT\168\STX\STX\t\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SO\SOH\DC2\EOT\168\STX\n\
    \\DC1\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SO\ETX\DC2\EOT\168\STX\DC4\SYN\n\
    \\208\SOH\n\
    \\EOT\EOT\STX\STX\SI\DC2\EOT\173\STX\STXB\SUB\193\SOH The maximum bytes which will be buffered for retries and shadowing.\n\
    \ If set, the bytes actually buffered will be the minimum value of this and the\n\
    \ listener per_connection_buffer_limit_bytes.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SI\ACK\DC2\EOT\173\STX\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SI\SOH\DC2\EOT\173\STX\RS<\n\
    \\r\n\
    \\ENQ\EOT\STX\STX\SI\ETX\DC2\EOT\173\STX?A\n\
    \\239\ETX\n\
    \\STX\EOT\ETX\DC2\ACK\182\STX\NUL\149\ETX\SOH\SUB\224\ETX Compared to the :ref:`cluster <envoy_v3_api_field_config.route.v3.RouteAction.cluster>` field that specifies a\n\
    \ single upstream cluster as the target of a request, the :ref:`weighted_clusters\n\
    \ <envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters>` option allows for specification of\n\
    \ multiple upstream clusters along with weights that indicate the percentage of\n\
    \ traffic to be forwarded to each cluster. The router selects an upstream cluster based on the\n\
    \ weights.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\ETX\SOH\DC2\EOT\182\STX\b\ETB\n\
    \\v\n\
    \\ETX\EOT\ETX\a\DC2\EOT\183\STX\STXd\n\
    \\DLE\n\
    \\b\EOT\ETX\a\211\136\225\ETX\SOH\DC2\EOT\183\STX\STXd\n\
    \(\n\
    \\EOT\EOT\ETX\ETX\NUL\DC2\ACK\186\STX\STX\131\ETX\ETX\SUB\CAN [#next-free-field: 12]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETX\ETX\NUL\SOH\DC2\EOT\186\STX\n\
    \\ETB\n\
    \\SI\n\
    \\ENQ\EOT\ETX\ETX\NUL\a\DC2\ACK\187\STX\EOT\188\STX;\n\
    \\DC4\n\
    \\n\
    \\EOT\ETX\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\187\STX\EOT\188\STX;\n\
    \\r\n\
    \\ENQ\EOT\ETX\ETX\NUL\t\DC2\EOT\190\STX\EOT\DC2\n\
    \\SO\n\
    \\ACK\EOT\ETX\ETX\NUL\t\NUL\DC2\EOT\190\STX\r\SO\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\t\NUL\SOH\DC2\EOT\190\STX\r\SO\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\t\NUL\STX\DC2\EOT\190\STX\r\SO\n\
    \\SO\n\
    \\ACK\EOT\ETX\ETX\NUL\t\SOH\DC2\EOT\190\STX\DLE\DC1\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\t\SOH\SOH\DC2\EOT\190\STX\DLE\DC1\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\t\SOH\STX\DC2\EOT\190\STX\DLE\DC1\n\
    \\r\n\
    \\ENQ\EOT\ETX\ETX\NUL\n\
    \\DC2\EOT\192\STX\EOT!\n\
    \\SO\n\
    \\ACK\EOT\ETX\ETX\NUL\n\
    \\NUL\DC2\EOT\192\STX\r \n\
    \\141\SOH\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\NUL\DC2\EOT\196\STX\EOT=\SUB} Name of the upstream cluster. The cluster must exist in the\n\
    \ :ref:`cluster manager configuration <config_cluster_manager>`.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\NUL\ENQ\DC2\EOT\196\STX\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\NUL\SOH\DC2\EOT\196\STX\v\SI\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\NUL\ETX\DC2\EOT\196\STX\DC2\DC3\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\NUL\b\DC2\EOT\196\STX\DC4<\n\
    \\DC2\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\NUL\b\175\b\SO\DC2\EOT\196\STX\NAK;\n\
    \\218\STX\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\SOH\DC2\EOT\202\STX\EOT+\SUB\201\STX An integer between 0 and :ref:`total_weight\n\
    \ <envoy_v3_api_field_config.route.v3.WeightedCluster.total_weight>`. When a request matches the route,\n\
    \ the choice of an upstream cluster is determined by its weight. The sum of weights across all\n\
    \ entries in the clusters array must add up to the total_weight, which defaults to 100.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\SOH\ACK\DC2\EOT\202\STX\EOT\US\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\SOH\SOH\DC2\EOT\202\STX &\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\SOH\ETX\DC2\EOT\202\STX)*\n\
    \\209\ETX\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\STX\DC2\EOT\209\STX\EOT(\SUB\192\ETX Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints in\n\
    \ the upstream cluster with metadata matching what is set in this field will be considered for\n\
    \ load balancing. Note that this will be merged with what's provided in\n\
    \ :ref:`RouteAction.metadata_match <envoy_v3_api_field_config.route.v3.RouteAction.metadata_match>`, with\n\
    \ values here taking precedence. The filter name should be specified as *envoy.lb*.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\STX\ACK\DC2\EOT\209\STX\EOT\DC4\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\STX\SOH\DC2\EOT\209\STX\NAK#\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\STX\ETX\DC2\EOT\209\STX&'\n\
    \\215\EOT\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\ETX\DC2\ACK\218\STX\EOT\219\STX8\SUB\196\EOT Specifies a list of headers to be added to requests when this cluster is selected\n\
    \ through the enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`.\n\
    \ Headers specified at this level are applied before headers from the enclosing\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.Route`, :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost`, and\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including details on\n\
    \ header value syntax, see the documentation on :ref:`custom request headers\n\
    \ <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ETX\EOT\DC2\EOT\218\STX\EOT\f\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ETX\ACK\DC2\EOT\218\STX\r&\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ETX\SOH\DC2\EOT\218\STX'=\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ETX\ETX\DC2\EOT\218\STX@A\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ETX\b\DC2\EOT\219\STX\b7\n\
    \\DC2\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\ETX\b\175\b\DC2\DC2\EOT\219\STX\t6\n\
    \\200\SOH\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\EOT\DC2\ACK\223\STX\EOT\225\STX\a\SUB\181\SOH Specifies a list of HTTP headers that should be removed from each request when\n\
    \ this cluster is selected through the enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\EOT\EOT\DC2\EOT\223\STX\EOT\f\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\EOT\ENQ\DC2\EOT\223\STX\r\DC3\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\EOT\SOH\DC2\EOT\223\STX\DC4-\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\EOT\ETX\DC2\EOT\223\STX01\n\
    \\DC1\n\
    \\a\EOT\ETX\ETX\NUL\STX\EOT\b\DC2\ACK\223\STX2\225\STX\ACK\n\
    \\DC4\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\EOT\b\175\b\DC2\DC2\ACK\223\STX3\225\STX\ENQ\n\
    \\216\EOT\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\ENQ\DC2\ACK\234\STX\EOT\235\STX8\SUB\197\EOT Specifies a list of headers to be added to responses when this cluster is selected\n\
    \ through the enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`.\n\
    \ Headers specified at this level are applied before headers from the enclosing\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.Route`, :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost`, and\n\
    \ :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration`. For more information, including details on\n\
    \ header value syntax, see the documentation on :ref:`custom request headers\n\
    \ <config_http_conn_man_headers_custom_request_headers>`.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ENQ\EOT\DC2\EOT\234\STX\EOT\f\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ENQ\ACK\DC2\EOT\234\STX\r&\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ENQ\SOH\DC2\EOT\234\STX'>\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ENQ\ETX\DC2\EOT\234\STXAB\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ENQ\b\DC2\EOT\235\STX\b7\n\
    \\DC2\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\ENQ\b\175\b\DC2\DC2\EOT\235\STX\t6\n\
    \\183\SOH\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\ACK\DC2\ACK\239\STX\EOT\241\STX\a\SUB\164\SOH Specifies a list of headers to be removed from responses when this cluster is selected\n\
    \ through the enclosing :ref:`envoy_v3_api_msg_config.route.v3.RouteAction`.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ACK\EOT\DC2\EOT\239\STX\EOT\f\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ACK\ENQ\DC2\EOT\239\STX\r\DC3\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ACK\SOH\DC2\EOT\239\STX\DC4.\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\ACK\ETX\DC2\EOT\239\STX12\n\
    \\DC1\n\
    \\a\EOT\ETX\ETX\NUL\STX\ACK\b\DC2\ACK\239\STX3\241\STX\ACK\n\
    \\DC4\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\ACK\b\175\b\DC2\DC2\ACK\239\STX4\241\STX\ENQ\n\
    \\135\EOT\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\a\DC2\EOT\251\STX\EOTB\SUB\246\ETX The per_filter_config field can be used to provide weighted cluster-specific\n\
    \ configurations for filters. The key should match the filter name, such as\n\
    \ *envoy.filters.http.buffer* for the HTTP buffer filter. Use of this field is filter\n\
    \ specific; see the :ref:`HTTP filter documentation <config_http_filters>`\n\
    \ for if and how it is utilized.\n\
    \ [#comment: An entry's value may be wrapped in a\n\
    \ :ref:`FilterConfig<envoy_v3_api_msg_config.route.v3.FilterConfig>`\n\
    \ message to specify additional options.]\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\a\ACK\DC2\EOT\251\STX\EOT$\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\a\SOH\DC2\EOT\251\STX%<\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\a\ETX\DC2\EOT\251\STX?A\n\
    \\DLE\n\
    \\ACK\EOT\ETX\ETX\NUL\b\NUL\DC2\ACK\253\STX\EOT\130\ETX\ENQ\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\b\NUL\SOH\DC2\EOT\253\STX\n\
    \ \n\
    \g\n\
    \\ACK\EOT\ETX\ETX\NUL\STX\b\DC2\ACK\128\ETX\ACK\129\ETXZ\SUBU Indicates that during forwarding, the host header will be swapped with\n\
    \ this value.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\b\ENQ\DC2\EOT\128\ETX\ACK\f\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\b\SOH\DC2\EOT\128\ETX\r!\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\b\ETX\DC2\EOT\128\ETX$&\n\
    \\SI\n\
    \\a\EOT\ETX\ETX\NUL\STX\b\b\DC2\EOT\129\ETX\n\
    \Y\n\
    \\DC2\n\
    \\n\
    \\EOT\ETX\ETX\NUL\STX\b\b\175\b\SO\DC2\EOT\129\ETX\vX\n\
    \R\n\
    \\EOT\EOT\ETX\STX\NUL\DC2\EOT\134\ETX\STXS\SUBD Specifies one or more upstream clusters associated with the route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\NUL\EOT\DC2\EOT\134\ETX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\NUL\ACK\DC2\EOT\134\ETX\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\NUL\SOH\DC2\EOT\134\ETX\EM!\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\NUL\ETX\DC2\EOT\134\ETX$%\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\NUL\b\DC2\EOT\134\ETX&R\n\
    \\DLE\n\
    \\b\EOT\ETX\STX\NUL\b\175\b\DC2\DC2\EOT\134\ETX'Q\n\
    \\166\SOH\n\
    \\EOT\EOT\ETX\STX\SOH\DC2\EOT\138\ETX\STXT\SUB\151\SOH Specifies the total weight across all clusters. The sum of all cluster weights must equal this\n\
    \ value, which must be greater than 0. Defaults to 100.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\SOH\ACK\DC2\EOT\138\ETX\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\SOH\SOH\DC2\EOT\138\ETX\RS*\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\SOH\ETX\DC2\EOT\138\ETX-.\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\SOH\b\DC2\EOT\138\ETX/S\n\
    \\DLE\n\
    \\b\EOT\ETX\STX\SOH\b\175\b\ENQ\DC2\EOT\138\ETX0R\n\
    \\240\EOT\n\
    \\EOT\EOT\ETX\STX\STX\DC2\EOT\148\ETX\STX \SUB\225\EOT Specifies the runtime key prefix that should be used to construct the\n\
    \ runtime keys associated with each cluster. When the *runtime_key_prefix* is\n\
    \ specified, the router will look for weights associated with each upstream\n\
    \ cluster under the key *runtime_key_prefix* + \".\" + *cluster[i].name* where\n\
    \ *cluster[i]* denotes an entry in the clusters array field. If the runtime\n\
    \ key for the cluster does not exist, the value specified in the\n\
    \ configuration file will be used as the default weight. See the :ref:`runtime documentation\n\
    \ <operations_runtime>` for how key names map to the underlying implementation.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\STX\ENQ\DC2\EOT\148\ETX\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\STX\SOH\DC2\EOT\148\ETX\t\ESC\n\
    \\r\n\
    \\ENQ\EOT\ETX\STX\STX\ETX\DC2\EOT\148\ETX\RS\US\n\
    \&\n\
    \\STX\EOT\EOT\DC2\ACK\152\ETX\NUL\136\EOT\SOH\SUB\CAN [#next-free-field: 13]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\EOT\SOH\DC2\EOT\152\ETX\b\DC2\n\
    \\v\n\
    \\ETX\EOT\EOT\a\DC2\EOT\153\ETX\STX_\n\
    \\DLE\n\
    \\b\EOT\EOT\a\211\136\225\ETX\SOH\DC2\EOT\153\ETX\STX_\n\
    \\SO\n\
    \\EOT\EOT\EOT\ETX\NUL\DC2\ACK\155\ETX\STX\158\ETX\ETX\n\
    \\r\n\
    \\ENQ\EOT\EOT\ETX\NUL\SOH\DC2\EOT\155\ETX\n\
    \\US\n\
    \\SI\n\
    \\ENQ\EOT\EOT\ETX\NUL\a\DC2\ACK\156\ETX\EOT\157\ETX>\n\
    \\DC4\n\
    \\n\
    \\EOT\EOT\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\156\ETX\EOT\157\ETX>\n\
    \\SO\n\
    \\EOT\EOT\EOT\ETX\SOH\DC2\ACK\160\ETX\STX\171\ETX\ETX\n\
    \\r\n\
    \\ENQ\EOT\EOT\ETX\SOH\SOH\DC2\EOT\160\ETX\n\
    \ \n\
    \\SI\n\
    \\ENQ\EOT\EOT\ETX\SOH\a\DC2\ACK\161\ETX\EOT\162\ETX?\n\
    \\DC4\n\
    \\n\
    \\EOT\EOT\ETX\SOH\a\211\136\225\ETX\SOH\DC2\ACK\161\ETX\EOT\162\ETX?\n\
    \\215\SOH\n\
    \\ACK\EOT\EOT\ETX\SOH\STX\NUL\DC2\EOT\166\ETX\EOT,\SUB\198\SOH If specified, the route will match against whether or not a certificate is presented.\n\
    \ If not specified, certificate presentation status (true or false) will not be considered when route matching.\n\
    \\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\NUL\ACK\DC2\EOT\166\ETX\EOT\GS\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\NUL\SOH\DC2\EOT\166\ETX\RS'\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\NUL\ETX\DC2\EOT\166\ETX*+\n\
    \\213\SOH\n\
    \\ACK\EOT\EOT\ETX\SOH\STX\SOH\DC2\EOT\170\ETX\EOT,\SUB\196\SOH If specified, the route will match against whether or not a certificate is validated.\n\
    \ If not specified, certificate validation status (true or false) will not be considered when route matching.\n\
    \\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\SOH\ACK\DC2\EOT\170\ETX\EOT\GS\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\SOH\SOH\DC2\EOT\170\ETX\RS'\n\
    \\SI\n\
    \\a\EOT\EOT\ETX\SOH\STX\SOH\ETX\DC2\EOT\170\ETX*+\n\
    \F\n\
    \\EOT\EOT\EOT\ETX\STX\DC2\ACK\174\ETX\STX\175\ETX\ETX\SUB6 An extensible message for matching CONNECT requests.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\ETX\STX\SOH\DC2\EOT\174\ETX\n\
    \\CAN\n\
    \\v\n\
    \\ETX\EOT\EOT\t\DC2\EOT\177\ETX\STX\DLE\n\
    \\f\n\
    \\EOT\EOT\EOT\t\NUL\DC2\EOT\177\ETX\v\f\n\
    \\r\n\
    \\ENQ\EOT\EOT\t\NUL\SOH\DC2\EOT\177\ETX\v\f\n\
    \\r\n\
    \\ENQ\EOT\EOT\t\NUL\STX\DC2\EOT\177\ETX\v\f\n\
    \\f\n\
    \\EOT\EOT\EOT\t\SOH\DC2\EOT\177\ETX\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\EOT\t\SOH\SOH\DC2\EOT\177\ETX\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\EOT\t\SOH\STX\DC2\EOT\177\ETX\SO\SI\n\
    \\v\n\
    \\ETX\EOT\EOT\n\
    \\DC2\EOT\179\ETX\STX\DC3\n\
    \\f\n\
    \\EOT\EOT\EOT\n\
    \\NUL\DC2\EOT\179\ETX\v\DC2\n\
    \\SO\n\
    \\EOT\EOT\EOT\b\NUL\DC2\ACK\181\ETX\STX\216\ETX\ETX\n\
    \\r\n\
    \\ENQ\EOT\EOT\b\NUL\SOH\DC2\EOT\181\ETX\b\SYN\n\
    \\r\n\
    \\ENQ\EOT\EOT\b\NUL\STX\DC2\EOT\182\ETX\EOT&\n\
    \\SI\n\
    \\a\EOT\EOT\b\NUL\STX\175\b\DC2\EOT\182\ETX\EOT&\n\
    \\129\SOH\n\
    \\EOT\EOT\EOT\STX\NUL\DC2\EOT\186\ETX\EOT\SYN\SUBs If specified, the route is a prefix rule meaning that the prefix must\n\
    \ match the beginning of the *:path* header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\NUL\ENQ\DC2\EOT\186\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\NUL\SOH\DC2\EOT\186\ETX\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\NUL\ETX\DC2\EOT\186\ETX\DC4\NAK\n\
    \\157\SOH\n\
    \\EOT\EOT\EOT\STX\SOH\DC2\EOT\190\ETX\EOT\DC4\SUB\142\SOH If specified, the route is an exact path rule meaning that the path must\n\
    \ exactly match the *:path* header once the query string is removed.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\SOH\ENQ\DC2\EOT\190\ETX\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\SOH\SOH\DC2\EOT\190\ETX\v\SI\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\SOH\ETX\DC2\EOT\190\ETX\DC2\DC3\n\
    \\132\a\n\
    \\EOT\EOT\EOT\STX\STX\DC2\EOT\204\ETX\EOT_\SUB\245\ACK If specified, the route is a regular expression rule meaning that the\n\
    \ regex must match the *:path* header once the query string is removed. The entire path\n\
    \ (without the query string) must match the regex. The rule will not match if only a\n\
    \ subsequence of the *:path* header matches the regex.\n\
    \\n\
    \ [#next-major-version: In the v3 API we should redo how path specification works such\n\
    \ that we utilize StringMatcher, and additionally have consistent options around whether we\n\
    \ strip query strings, do a case sensitive match, etc. In the interim it will be too disruptive\n\
    \ to deprecate the existing options. We should even consider whether we want to do away with\n\
    \ path_specifier entirely and just rely on a set of header matchers which can already match\n\
    \ on :path, etc. The issue with that is it is unclear how to generically deal with query string\n\
    \ stripping. This needs more thought.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\STX\ACK\DC2\EOT\204\ETX\EOT \n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\STX\SOH\DC2\EOT\204\ETX!+\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\STX\ETX\DC2\EOT\204\ETX.0\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\STX\b\DC2\EOT\204\ETX1^\n\
    \\DLE\n\
    \\b\EOT\EOT\STX\STX\b\175\b\DC1\DC2\EOT\204\ETX2]\n\
    \\185\EOT\n\
    \\EOT\EOT\EOT\STX\ETX\DC2\EOT\215\ETX\EOT(\SUB\170\EOT If this is used as the matcher, the matcher will only match CONNECT requests.\n\
    \ Note that this will not match HTTP/2 upgrade-style CONNECT requests\n\
    \ (WebSocket and the like) as they are normalized in Envoy as HTTP/1.1 style\n\
    \ upgrades.\n\
    \ This is the only way to match CONNECT requests for HTTP/1.1. For HTTP/2,\n\
    \ where Extended CONNECT requests may have a path, the path matchers will work if\n\
    \ there is a path present.\n\
    \ Note that CONNECT support is currently considered alpha in Envoy.\n\
    \ [#comment: TODO(htuch): Replace the above comment with an alpha tag.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ETX\ACK\DC2\EOT\215\ETX\EOT\DC2\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ETX\SOH\DC2\EOT\215\ETX\DC3\"\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ETX\ETX\DC2\EOT\215\ETX%'\n\
    \\132\SOH\n\
    \\EOT\EOT\EOT\STX\EOT\DC2\EOT\220\ETX\STX/\SUBv Indicates that prefix/path matching should be case sensitive. The default\n\
    \ is true. Ignored for safe_regex matching.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\EOT\ACK\DC2\EOT\220\ETX\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\EOT\SOH\DC2\EOT\220\ETX\FS*\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\EOT\ETX\DC2\EOT\220\ETX-.\n\
    \\152\t\n\
    \\EOT\EOT\EOT\STX\ENQ\DC2\EOT\238\ETX\STX8\SUB\137\t Indicates that the route should additionally match on a runtime key. Every time the route\n\
    \ is considered for a match, it must also fall under the percentage of matches indicated by\n\
    \ this field. For some fraction N/D, a random number in the range [0,D) is selected. If the\n\
    \ number is <= the value of the numerator N, or if the key is not present, the default\n\
    \ value, the router continues to evaluate the remaining match criteria. A runtime_fraction\n\
    \ route configuration can be used to roll out route changes in a gradual manner without full\n\
    \ code/config deploys. Refer to the :ref:`traffic shifting\n\
    \ <config_http_conn_man_route_table_traffic_splitting_shift>` docs for additional documentation.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \    Parsing this field is implemented such that the runtime key's data may be represented\n\
    \    as a FractionalPercent proto represented as JSON/YAML and may also be represented as an\n\
    \    integer with the assumption that the value is an integral percentage out of 100. For\n\
    \    instance, a runtime key lookup returning the value \"42\" would parse as a FractionalPercent\n\
    \    whose numerator is 42 and denominator is HUNDRED. This preserves legacy semantics.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ENQ\ACK\DC2\EOT\238\ETX\STX\"\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ENQ\SOH\DC2\EOT\238\ETX#3\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ENQ\ETX\DC2\EOT\238\ETX67\n\
    \\216\STX\n\
    \\EOT\EOT\EOT\STX\ACK\DC2\EOT\245\ETX\STX%\SUB\201\STX Specifies a set of headers that the route should match on. The router will\n\
    \ check the request\226\128\153s headers against all the specified headers in the route\n\
    \ config. A match will happen if all the headers in the route are present in\n\
    \ the request with the same values (or based on presence if the value field\n\
    \ is not in the config).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ACK\EOT\DC2\EOT\245\ETX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ACK\ACK\DC2\EOT\245\ETX\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ACK\SOH\DC2\EOT\245\ETX\EM \n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\ACK\ETX\DC2\EOT\245\ETX#$\n\
    \\202\STX\n\
    \\EOT\EOT\EOT\STX\a\DC2\EOT\252\ETX\STX6\SUB\187\STX Specifies a set of URL query parameters on which the route should\n\
    \ match. The router will check the query string from the *path* header\n\
    \ against all the specified query parameters. If the number of specified\n\
    \ query parameters is nonzero, they all must match the *path* header's\n\
    \ query string for a match to occur.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\a\EOT\DC2\EOT\252\ETX\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\a\ACK\DC2\EOT\252\ETX\v \n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\a\SOH\DC2\EOT\252\ETX!1\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\a\ETX\DC2\EOT\252\ETX45\n\
    \\190\SOH\n\
    \\EOT\EOT\EOT\STX\b\DC2\EOT\129\EOT\STX!\SUB\175\SOH If specified, only gRPC requests will be matched. The router will check\n\
    \ that the content-type header has a application/grpc or one of the various\n\
    \ application/grpc+ values.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\b\ACK\DC2\EOT\129\EOT\STX\ETB\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\b\SOH\DC2\EOT\129\EOT\CAN\FS\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\b\ETX\DC2\EOT\129\EOT\US \n\
    \\146\SOH\n\
    \\EOT\EOT\EOT\STX\t\DC2\EOT\135\EOT\STX*\SUB\131\SOH If specified, the client tls context will be matched against the defined\n\
    \ match options.\n\
    \\n\
    \ [#next-major-version: unify with RBAC]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\t\ACK\DC2\EOT\135\EOT\STX\CAN\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\t\SOH\DC2\EOT\135\EOT\EM$\n\
    \\r\n\
    \\ENQ\EOT\EOT\STX\t\ETX\DC2\EOT\135\EOT')\n\
    \&\n\
    \\STX\EOT\ENQ\DC2\ACK\139\EOT\NUL\186\EOT\SOH\SUB\CAN [#next-free-field: 12]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\ENQ\SOH\DC2\EOT\139\EOT\b\DC2\n\
    \\v\n\
    \\ETX\EOT\ENQ\a\DC2\EOT\140\EOT\STX_\n\
    \\DLE\n\
    \\b\EOT\ENQ\a\211\136\225\ETX\SOH\DC2\EOT\140\EOT\STX_\n\
    \\v\n\
    \\ETX\EOT\ENQ\t\DC2\EOT\142\EOT\STX\DC3\n\
    \\f\n\
    \\EOT\EOT\ENQ\t\NUL\DC2\EOT\142\EOT\v\f\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\NUL\SOH\DC2\EOT\142\EOT\v\f\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\NUL\STX\DC2\EOT\142\EOT\v\f\n\
    \\f\n\
    \\EOT\EOT\ENQ\t\SOH\DC2\EOT\142\EOT\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\SOH\SOH\DC2\EOT\142\EOT\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\SOH\STX\DC2\EOT\142\EOT\SO\SI\n\
    \\f\n\
    \\EOT\EOT\ENQ\t\STX\DC2\EOT\142\EOT\DC1\DC2\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\STX\SOH\DC2\EOT\142\EOT\DC1\DC2\n\
    \\r\n\
    \\ENQ\EOT\ENQ\t\STX\STX\DC2\EOT\142\EOT\DC1\DC2\n\
    \\v\n\
    \\ETX\EOT\ENQ\n\
    \\DC2\EOT\144\EOT\STX;\n\
    \\f\n\
    \\EOT\EOT\ENQ\n\
    \\NUL\DC2\EOT\144\EOT\v\EM\n\
    \\f\n\
    \\EOT\EOT\ENQ\n\
    \\SOH\DC2\EOT\144\EOT\ESC/\n\
    \\f\n\
    \\EOT\EOT\ENQ\n\
    \\STX\DC2\EOT\144\EOT1:\n\
    \\128\SOH\n\
    \\EOT\EOT\ENQ\STX\NUL\DC2\EOT\148\EOT\STXH\SUBr Specifies string patterns that match allowed origins. An origin is allowed if any of the\n\
    \ string matchers match.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\NUL\EOT\DC2\EOT\148\EOT\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\NUL\ACK\DC2\EOT\148\EOT\v(\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\NUL\SOH\DC2\EOT\148\EOT)B\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\NUL\ETX\DC2\EOT\148\EOTEG\n\
    \T\n\
    \\EOT\EOT\ENQ\STX\SOH\DC2\EOT\151\EOT\STX\ESC\SUBF Specifies the content for the *access-control-allow-methods* header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\SOH\ENQ\DC2\EOT\151\EOT\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\SOH\SOH\DC2\EOT\151\EOT\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\SOH\ETX\DC2\EOT\151\EOT\EM\SUB\n\
    \T\n\
    \\EOT\EOT\ENQ\STX\STX\DC2\EOT\154\EOT\STX\ESC\SUBF Specifies the content for the *access-control-allow-headers* header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\STX\ENQ\DC2\EOT\154\EOT\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\STX\SOH\DC2\EOT\154\EOT\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\STX\ETX\DC2\EOT\154\EOT\EM\SUB\n\
    \U\n\
    \\EOT\EOT\ENQ\STX\ETX\DC2\EOT\157\EOT\STX\FS\SUBG Specifies the content for the *access-control-expose-headers* header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ETX\ENQ\DC2\EOT\157\EOT\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ETX\SOH\DC2\EOT\157\EOT\t\ETB\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ETX\ETX\DC2\EOT\157\EOT\SUB\ESC\n\
    \N\n\
    \\EOT\EOT\ENQ\STX\EOT\DC2\EOT\160\EOT\STX\NAK\SUB@ Specifies the content for the *access-control-max-age* header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\EOT\ENQ\DC2\EOT\160\EOT\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\EOT\SOH\DC2\EOT\160\EOT\t\DLE\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\EOT\ETX\DC2\EOT\160\EOT\DC3\DC4\n\
    \B\n\
    \\EOT\EOT\ENQ\STX\ENQ\DC2\EOT\163\EOT\STX2\SUB4 Specifies whether the resource allows credentials.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ENQ\ACK\DC2\EOT\163\EOT\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ENQ\SOH\DC2\EOT\163\EOT\FS-\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ENQ\ETX\DC2\EOT\163\EOT01\n\
    \\SO\n\
    \\EOT\EOT\ENQ\b\NUL\DC2\ACK\165\EOT\STX\174\EOT\ETX\n\
    \\r\n\
    \\ENQ\EOT\ENQ\b\NUL\SOH\DC2\EOT\165\EOT\b\EM\n\
    \\160\ETX\n\
    \\EOT\EOT\ENQ\STX\ACK\DC2\EOT\173\EOT\EOT8\SUB\145\ETX Specifies the % of requests for which the CORS filter is enabled.\n\
    \\n\
    \ If neither ``enabled``, ``filter_enabled``, nor ``shadow_enabled`` are specified, the CORS\n\
    \ filter will be enabled for 100% of the requests.\n\
    \\n\
    \ If :ref:`runtime_key <envoy_v3_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key>` is\n\
    \ specified, Envoy will lookup the runtime key to get the percentage of requests to filter.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ACK\ACK\DC2\EOT\173\EOT\EOT$\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ACK\SOH\DC2\EOT\173\EOT%3\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\ACK\ETX\DC2\EOT\173\EOT67\n\
    \\227\EOT\n\
    \\EOT\EOT\ENQ\STX\a\DC2\EOT\185\EOT\STX7\SUB\212\EOT Specifies the % of requests for which the CORS policies will be evaluated and tracked, but not\n\
    \ enforced.\n\
    \\n\
    \ This field is intended to be used when ``filter_enabled`` and ``enabled`` are off. One of those\n\
    \ fields have to explicitly disable the filter in order for this setting to take effect.\n\
    \\n\
    \ If :ref:`runtime_key <envoy_v3_api_field_config.core.v3.RuntimeFractionalPercent.runtime_key>` is specified,\n\
    \ Envoy will lookup the runtime key to get the percentage of requests for which it will evaluate\n\
    \ and track the request's *Origin* to determine if it's valid but will not enforce any policies.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\a\ACK\DC2\EOT\185\EOT\STX\"\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\a\SOH\DC2\EOT\185\EOT#1\n\
    \\r\n\
    \\ENQ\EOT\ENQ\STX\a\ETX\DC2\EOT\185\EOT46\n\
    \&\n\
    \\STX\EOT\ACK\DC2\ACK\189\EOT\NUL\238\b\SOH\SUB\CAN [#next-free-field: 38]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\ACK\SOH\DC2\EOT\189\EOT\b\DC3\n\
    \\v\n\
    \\ETX\EOT\ACK\a\DC2\EOT\190\EOT\STX`\n\
    \\DLE\n\
    \\b\EOT\ACK\a\211\136\225\ETX\SOH\DC2\EOT\190\EOT\STX`\n\
    \\SO\n\
    \\EOT\EOT\ACK\EOT\NUL\DC2\ACK\192\EOT\STX\198\EOT\ETX\n\
    \\r\n\
    \\ENQ\EOT\ACK\EOT\NUL\SOH\DC2\EOT\192\EOT\a\"\n\
    \=\n\
    \\ACK\EOT\ACK\EOT\NUL\STX\NUL\DC2\EOT\194\EOT\EOT\FS\SUB- HTTP status code - 503 Service Unavailable.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\NUL\STX\NUL\SOH\DC2\EOT\194\EOT\EOT\ETB\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\NUL\STX\NUL\STX\DC2\EOT\194\EOT\SUB\ESC\n\
    \3\n\
    \\ACK\EOT\ACK\EOT\NUL\STX\SOH\DC2\EOT\197\EOT\EOT\DC2\SUB# HTTP status code - 404 Not Found.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\NUL\STX\SOH\SOH\DC2\EOT\197\EOT\EOT\r\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\NUL\STX\SOH\STX\DC2\EOT\197\EOT\DLE\DC1\n\
    \\200\SOH\n\
    \\EOT\EOT\ACK\EOT\SOH\DC2\ACK\202\EOT\STX\207\EOT\ETX\SUB\183\SOH Configures :ref:`internal redirect <arch_overview_internal_redirects>` behavior.\n\
    \ [#next-major-version: remove this definition - it's defined in the InternalRedirectPolicy message.]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\EOT\SOH\SOH\DC2\EOT\202\EOT\a\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\EOT\SOH\ETX\DC2\EOT\203\EOT\EOT\GS\n\
    \\SO\n\
    \\ACK\EOT\ACK\EOT\SOH\ETX\ETX\DC2\EOT\203\EOT\EOT\GS\n\
    \\SO\n\
    \\ACK\EOT\ACK\EOT\SOH\STX\NUL\DC2\EOT\205\EOT\EOT'\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\SOH\STX\NUL\SOH\DC2\EOT\205\EOT\EOT\"\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\SOH\STX\NUL\STX\DC2\EOT\205\EOT%&\n\
    \\SO\n\
    \\ACK\EOT\ACK\EOT\SOH\STX\SOH\DC2\EOT\206\EOT\EOT!\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\SOH\STX\SOH\SOH\DC2\EOT\206\EOT\EOT\FS\n\
    \\SI\n\
    \\a\EOT\ACK\EOT\SOH\STX\SOH\STX\DC2\EOT\206\EOT\US \n\
    \\232\EOT\n\
    \\EOT\EOT\ACK\ETX\NUL\DC2\ACK\220\EOT\STX\244\EOT\ETX\SUB\215\EOT The router is capable of shadowing traffic from one cluster to another. The current\n\
    \ implementation is \"fire and forget,\" meaning Envoy will not wait for the shadow cluster to\n\
    \ respond before returning the response from the primary cluster. All normal statistics are\n\
    \ collected for the shadow cluster making this feature useful for testing.\n\
    \\n\
    \ During shadowing, the host/authority header is altered such that *-shadow* is appended. This is\n\
    \ useful for logging. For example, *cluster1* becomes *cluster1-shadow*.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   Shadowing will not be triggered if the primary cluster does not exist.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\NUL\SOH\DC2\EOT\220\EOT\n\
    \\GS\n\
    \\SI\n\
    \\ENQ\EOT\ACK\ETX\NUL\a\DC2\ACK\221\EOT\EOT\222\EOT=\n\
    \\DC4\n\
    \\n\
    \\EOT\ACK\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\221\EOT\EOT\222\EOT=\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\NUL\t\DC2\EOT\224\EOT\EOT\SI\n\
    \\SO\n\
    \\ACK\EOT\ACK\ETX\NUL\t\NUL\DC2\EOT\224\EOT\r\SO\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\t\NUL\SOH\DC2\EOT\224\EOT\r\SO\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\t\NUL\STX\DC2\EOT\224\EOT\r\SO\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\NUL\n\
    \\DC2\EOT\226\EOT\EOT\ESC\n\
    \\SO\n\
    \\ACK\EOT\ACK\ETX\NUL\n\
    \\NUL\DC2\EOT\226\EOT\r\SUB\n\
    \\136\SOH\n\
    \\ACK\EOT\ACK\ETX\NUL\STX\NUL\DC2\EOT\230\EOT\EOT@\SUBx Specifies the cluster that requests will be mirrored to. The cluster must\n\
    \ exist in the cluster manager configuration.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\NUL\ENQ\DC2\EOT\230\EOT\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\NUL\SOH\DC2\EOT\230\EOT\v\DC2\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\NUL\ETX\DC2\EOT\230\EOT\NAK\SYN\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\NUL\b\DC2\EOT\230\EOT\ETB?\n\
    \\DC2\n\
    \\n\
    \\EOT\ACK\ETX\NUL\STX\NUL\b\175\b\SO\DC2\EOT\230\EOT\CAN>\n\
    \\196\ETX\n\
    \\ACK\EOT\ACK\ETX\NUL\STX\SOH\DC2\EOT\240\EOT\EOT:\SUB\179\ETX If not specified, all requests to the target cluster will be mirrored.\n\
    \\n\
    \ If specified, this field takes precedence over the `runtime_key` field and requests must also\n\
    \ fall under the percentage of matches indicated by this field.\n\
    \\n\
    \ For some fraction N/D, a random number in the range [0,D) is selected. If the\n\
    \ number is <= the value of the numerator N, or if the key is not present, the default\n\
    \ value, the request will be mirrored.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\SOH\ACK\DC2\EOT\240\EOT\EOT$\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\SOH\SOH\DC2\EOT\240\EOT%5\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\SOH\ETX\DC2\EOT\240\EOT89\n\
    \S\n\
    \\ACK\EOT\ACK\ETX\NUL\STX\STX\DC2\EOT\243\EOT\EOT0\SUBC Determines if the trace span should be sampled. Defaults to true.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\STX\ACK\DC2\EOT\243\EOT\EOT\GS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\STX\SOH\DC2\EOT\243\EOT\RS+\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\NUL\STX\STX\ETX\DC2\EOT\243\EOT./\n\
    \\177\SOH\n\
    \\EOT\EOT\ACK\ETX\SOH\DC2\ACK\249\EOT\STX\239\ENQ\ETX\SUB\160\SOH Specifies the route's hashing policy if the upstream cluster uses a hashing :ref:`load balancer\n\
    \ <arch_overview_load_balancing_types>`.\n\
    \ [#next-free-field: 7]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\SOH\SOH\DC2\EOT\249\EOT\n\
    \\DC4\n\
    \\SI\n\
    \\ENQ\EOT\ACK\ETX\SOH\a\DC2\ACK\250\EOT\EOT\251\EOT4\n\
    \\DC4\n\
    \\n\
    \\EOT\ACK\ETX\SOH\a\211\136\225\ETX\SOH\DC2\ACK\250\EOT\EOT\251\EOT4\n\
    \\DLE\n\
    \\ACK\EOT\ACK\ETX\SOH\ETX\NUL\DC2\ACK\253\EOT\EOT\137\ENQ\ENQ\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\ETX\NUL\SOH\DC2\EOT\253\EOT\f\DC2\n\
    \\DC1\n\
    \\a\EOT\ACK\ETX\SOH\ETX\NUL\a\DC2\ACK\254\EOT\ACK\255\EOT=\n\
    \\SYN\n\
    \\f\EOT\ACK\ETX\SOH\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\254\EOT\ACK\255\EOT=\n\
    \\160\SOH\n\
    \\b\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\DC2\ACK\131\ENQ\ACK\132\ENQd\SUB\139\SOH The name of the request header that will be used to obtain the hash\n\
    \ key. If the request header is not present, no hash will be produced.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\ENQ\DC2\EOT\131\ENQ\ACK\f\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\SOH\DC2\EOT\131\ENQ\r\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\ETX\DC2\EOT\131\ENQ\ESC\FS\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\b\DC2\EOT\132\ENQ\n\
    \c\n\
    \\DC4\n\
    \\f\EOT\ACK\ETX\SOH\ETX\NUL\STX\NUL\b\175\b\SO\DC2\EOT\132\ENQ\vb\n\
    \o\n\
    \\b\EOT\ACK\ETX\SOH\ETX\NUL\STX\SOH\DC2\EOT\136\ENQ\ACK@\SUB] If specified, the request header value will be rewritten and used\n\
    \ to produce the hash key.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\SOH\ACK\DC2\EOT\136\ENQ\ACK-\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\SOH\SOH\DC2\EOT\136\ENQ.;\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\NUL\STX\SOH\ETX\DC2\EOT\136\ENQ>?\n\
    \\148\ACK\n\
    \\ACK\EOT\ACK\ETX\SOH\ETX\SOH\DC2\ACK\153\ENQ\EOT\170\ENQ\ENQ\SUB\129\ACK Envoy supports two types of cookie affinity:\n\
    \\n\
    \ 1. Passive. Envoy takes a cookie that's present in the cookies header and\n\
    \    hashes on its value.\n\
    \\n\
    \ 2. Generated. Envoy generates and sets a cookie with an expiration (TTL)\n\
    \    on the first request from the client in its response to the client,\n\
    \    based on the endpoint the request gets sent to. The client then\n\
    \    presents this on the next and all subsequent requests. The hash of\n\
    \    this is sufficient to ensure these requests get sent to the same\n\
    \    endpoint. The cookie is generated by hashing the source and\n\
    \    destination ports and addresses so that multiple independent HTTP2\n\
    \    streams on the same connection will independently receive the same\n\
    \    cookie, even if they arrive at the Envoy simultaneously.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\ETX\SOH\SOH\DC2\EOT\153\ENQ\f\DC2\n\
    \\DC1\n\
    \\a\EOT\ACK\ETX\SOH\ETX\SOH\a\DC2\ACK\154\ENQ\ACK\155\ENQ=\n\
    \\SYN\n\
    \\f\EOT\ACK\ETX\SOH\ETX\SOH\a\211\136\225\ETX\SOH\DC2\ACK\154\ENQ\ACK\155\ENQ=\n\
    \\168\SOH\n\
    \\b\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\DC2\EOT\160\ENQ\ACK?\SUB\149\SOH The name of the cookie that will be used to obtain the hash key. If the\n\
    \ cookie is not present and ttl below is not set, no hash will be\n\
    \ produced.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\ENQ\DC2\EOT\160\ENQ\ACK\f\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\SOH\DC2\EOT\160\ENQ\r\DC1\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\ETX\DC2\EOT\160\ENQ\DC4\NAK\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\b\DC2\EOT\160\ENQ\SYN>\n\
    \\DC4\n\
    \\f\EOT\ACK\ETX\SOH\ETX\SOH\STX\NUL\b\175\b\SO\DC2\EOT\160\ENQ\ETB=\n\
    \\185\SOH\n\
    \\b\EOT\ACK\ETX\SOH\ETX\SOH\STX\SOH\DC2\EOT\165\ENQ\ACK'\SUB\166\SOH If specified, a cookie with the TTL will be generated if the cookie is\n\
    \ not present. If the TTL is present and zero, the generated cookie will\n\
    \ be a session cookie.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\SOH\ACK\DC2\EOT\165\ENQ\ACK\RS\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\SOH\SOH\DC2\EOT\165\ENQ\US\"\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\SOH\ETX\DC2\EOT\165\ENQ%&\n\
    \{\n\
    \\b\EOT\ACK\ETX\SOH\ETX\SOH\STX\STX\DC2\EOT\169\ENQ\ACK\SYN\SUBi The name of the path for the cookie. If no path is specified here, no path\n\
    \ will be set for the cookie.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\STX\ENQ\DC2\EOT\169\ENQ\ACK\f\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\STX\SOH\DC2\EOT\169\ENQ\r\DC1\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\SOH\STX\STX\ETX\DC2\EOT\169\ENQ\DC4\NAK\n\
    \\DLE\n\
    \\ACK\EOT\ACK\ETX\SOH\ETX\STX\DC2\ACK\172\ENQ\EOT\178\ENQ\ENQ\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\ETX\STX\SOH\DC2\EOT\172\ENQ\f \n\
    \\DC1\n\
    \\a\EOT\ACK\ETX\SOH\ETX\STX\a\DC2\ACK\173\ENQ\ACK\174\ENQK\n\
    \\SYN\n\
    \\f\EOT\ACK\ETX\SOH\ETX\STX\a\211\136\225\ETX\SOH\DC2\ACK\173\ENQ\ACK\174\ENQK\n\
    \.\n\
    \\b\EOT\ACK\ETX\SOH\ETX\STX\STX\NUL\DC2\EOT\177\ENQ\ACK\EM\SUB\FS Hash on source IP address.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\STX\STX\NUL\ENQ\DC2\EOT\177\ENQ\ACK\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\STX\STX\NUL\SOH\DC2\EOT\177\ENQ\v\DC4\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\STX\STX\NUL\ETX\DC2\EOT\177\ENQ\ETB\CAN\n\
    \\DLE\n\
    \\ACK\EOT\ACK\ETX\SOH\ETX\ETX\DC2\ACK\180\ENQ\EOT\188\ENQ\ENQ\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\ETX\ETX\SOH\DC2\EOT\180\ENQ\f\SUB\n\
    \\DC1\n\
    \\a\EOT\ACK\ETX\SOH\ETX\ETX\a\DC2\ACK\181\ENQ\ACK\182\ENQE\n\
    \\SYN\n\
    \\f\EOT\ACK\ETX\SOH\ETX\ETX\a\211\136\225\ETX\SOH\DC2\ACK\181\ENQ\ACK\182\ENQE\n\
    \\201\SOH\n\
    \\b\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\DC2\EOT\187\ENQ\ACK?\SUB\182\SOH The name of the URL query parameter that will be used to obtain the hash\n\
    \ key. If the parameter is not present, no hash will be produced. Query\n\
    \ parameter names are case-sensitive.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\ENQ\DC2\EOT\187\ENQ\ACK\f\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\SOH\DC2\EOT\187\ENQ\r\DC1\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\ETX\DC2\EOT\187\ENQ\DC4\NAK\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\b\DC2\EOT\187\ENQ\SYN>\n\
    \\DC4\n\
    \\f\EOT\ACK\ETX\SOH\ETX\ETX\STX\NUL\b\175\b\SO\DC2\EOT\187\ENQ\ETB=\n\
    \\DLE\n\
    \\ACK\EOT\ACK\ETX\SOH\ETX\EOT\DC2\ACK\190\ENQ\EOT\198\ENQ\ENQ\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\ETX\EOT\SOH\DC2\EOT\190\ENQ\f\ETB\n\
    \\DC1\n\
    \\a\EOT\ACK\ETX\SOH\ETX\EOT\a\DC2\ACK\191\ENQ\ACK\192\ENQB\n\
    \\SYN\n\
    \\f\EOT\ACK\ETX\SOH\ETX\EOT\a\211\136\225\ETX\SOH\DC2\ACK\191\ENQ\ACK\192\ENQB\n\
    \\241\SOH\n\
    \\b\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\DC2\EOT\197\ENQ\ACK>\SUB\222\SOH The name of the Object in the per-request filterState, which is an\n\
    \ Envoy::Http::Hashable object. If there is no data associated with the key,\n\
    \ or the stored object is not Envoy::Http::Hashable, no hash will be produced.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\ENQ\DC2\EOT\197\ENQ\ACK\f\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\SOH\DC2\EOT\197\ENQ\r\DLE\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\ETX\DC2\EOT\197\ENQ\DC3\DC4\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\b\DC2\EOT\197\ENQ\NAK=\n\
    \\DC4\n\
    \\f\EOT\ACK\ETX\SOH\ETX\EOT\STX\NUL\b\175\b\SO\DC2\EOT\197\ENQ\SYN<\n\
    \\DLE\n\
    \\ACK\EOT\ACK\ETX\SOH\b\NUL\DC2\ACK\200\ENQ\EOT\217\ENQ\ENQ\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\b\NUL\SOH\DC2\EOT\200\ENQ\n\
    \\SUB\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\b\NUL\STX\DC2\EOT\201\ENQ\ACK(\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\SOH\b\NUL\STX\175\b\DC2\EOT\201\ENQ\ACK(\n\
    \%\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\NUL\DC2\EOT\204\ENQ\ACK\CAN\SUB\NAK Header hash policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\NUL\ACK\DC2\EOT\204\ENQ\ACK\f\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\NUL\SOH\DC2\EOT\204\ENQ\r\DC3\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\NUL\ETX\DC2\EOT\204\ENQ\SYN\ETB\n\
    \%\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\SOH\DC2\EOT\207\ENQ\ACK\CAN\SUB\NAK Cookie hash policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\SOH\ACK\DC2\EOT\207\ENQ\ACK\f\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\SOH\SOH\DC2\EOT\207\ENQ\r\DC3\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\SOH\ETX\DC2\EOT\207\ENQ\SYN\ETB\n\
    \4\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\STX\DC2\EOT\210\ENQ\ACK5\SUB$ Connection properties hash policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\STX\ACK\DC2\EOT\210\ENQ\ACK\SUB\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\STX\SOH\DC2\EOT\210\ENQ\ESC0\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\STX\ETX\DC2\EOT\210\ENQ34\n\
    \.\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\ETX\DC2\EOT\213\ENQ\ACK)\SUB\RS Query parameter hash policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ETX\ACK\DC2\EOT\213\ENQ\ACK\DC4\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ETX\SOH\DC2\EOT\213\ENQ\NAK$\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ETX\ETX\DC2\EOT\213\ENQ'(\n\
    \+\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\EOT\DC2\EOT\216\ENQ\ACK#\SUB\ESC Filter state hash policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\EOT\ACK\DC2\EOT\216\ENQ\ACK\DC1\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\EOT\SOH\DC2\EOT\216\ENQ\DC2\RS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\EOT\ETX\DC2\EOT\216\ENQ!\"\n\
    \\251\EOT\n\
    \\ACK\EOT\ACK\ETX\SOH\STX\ENQ\DC2\EOT\238\ENQ\EOT\SYN\SUB\234\EOT The flag that short-circuits the hash computing. This field provides a\n\
    \ 'fallback' style of configuration: \"if a terminal policy doesn't work,\n\
    \ fallback to rest of the policy list\", it saves time when the terminal\n\
    \ policy works.\n\
    \\n\
    \ If true, and there is already a hash computed, ignore rest of the\n\
    \ list of hash polices.\n\
    \ For example, if the following hash methods are configured:\n\
    \\n\
    \  ========= ========\n\
    \  specifier terminal\n\
    \  ========= ========\n\
    \  Header A  true\n\
    \  Header B  false\n\
    \  Header C  false\n\
    \  ========= ========\n\
    \\n\
    \ The generateHash process ends if policy \"header A\" generates a hash, as\n\
    \ it's a terminal policy.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ENQ\ENQ\DC2\EOT\238\ENQ\EOT\b\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ENQ\SOH\DC2\EOT\238\ENQ\t\DC1\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\SOH\STX\ENQ\ETX\DC2\EOT\238\ENQ\DC4\NAK\n\
    \\249\STX\n\
    \\EOT\EOT\ACK\ETX\STX\DC2\ACK\247\ENQ\STX\147\ACK\ETX\SUB\232\STX Allows enabling and disabling upgrades on a per-route basis.\n\
    \ This overrides any enabled/disabled upgrade filter chain specified in the\n\
    \ HttpConnectionManager\n\
    \ :ref:`upgrade_configs\n\
    \ <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.upgrade_configs>`\n\
    \ but does not affect any custom filter chain specified there.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\STX\SOH\DC2\EOT\247\ENQ\n\
    \\ETB\n\
    \\SI\n\
    \\ENQ\EOT\ACK\ETX\STX\a\DC2\ACK\248\ENQ\EOT\249\ENQ7\n\
    \\DC4\n\
    \\n\
    \\EOT\ACK\ETX\STX\a\211\136\225\ETX\SOH\DC2\ACK\248\ENQ\EOT\249\ENQ7\n\
    \\171\SOH\n\
    \\ACK\EOT\ACK\ETX\STX\ETX\NUL\DC2\ACK\253\ENQ\EOT\131\ACK\ENQ\SUB\152\SOH Configuration for sending data upstream as a raw data payload. This is used for\n\
    \ CONNECT or POST requests, when forwarding request payload as raw TCP.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\ETX\NUL\SOH\DC2\EOT\253\ENQ\f\EM\n\
    \q\n\
    \\b\EOT\ACK\ETX\STX\ETX\NUL\STX\NUL\DC2\EOT\255\ENQ\ACK<\SUB_ If present, the proxy protocol header will be prepended to the CONNECT payload sent upstream.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\NUL\ACK\DC2\EOT\255\ENQ\ACK!\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\NUL\SOH\DC2\EOT\255\ENQ\"7\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\NUL\ETX\DC2\EOT\255\ENQ:;\n\
    \Y\n\
    \\b\EOT\ACK\ETX\STX\ETX\NUL\STX\SOH\DC2\EOT\130\ACK\ACK\SUB\SUBG If set, the route will also allow forwarding POST payload as raw TCP.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\SOH\ENQ\DC2\EOT\130\ACK\ACK\n\
    \\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\SOH\SOH\DC2\EOT\130\ACK\v\NAK\n\
    \\DC1\n\
    \\t\EOT\ACK\ETX\STX\ETX\NUL\STX\SOH\ETX\DC2\EOT\130\ACK\CAN\EM\n\
    \\197\SOH\n\
    \\ACK\EOT\ACK\ETX\STX\STX\NUL\DC2\ACK\136\ACK\EOT\137\ACKc\SUB\178\SOH The case-insensitive name of this upgrade, e.g. \"websocket\".\n\
    \ For each upgrade type present in upgrade_configs, requests with\n\
    \ Upgrade: [upgrade_type] will be proxied upstream.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\NUL\ENQ\DC2\EOT\136\ACK\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\NUL\SOH\DC2\EOT\136\ACK\v\ETB\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\NUL\ETX\DC2\EOT\136\ACK\SUB\ESC\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\NUL\b\DC2\EOT\137\ACK\bb\n\
    \\DC2\n\
    \\n\
    \\EOT\ACK\ETX\STX\STX\NUL\b\175\b\SO\DC2\EOT\137\ACK\ta\n\
    \W\n\
    \\ACK\EOT\ACK\ETX\STX\STX\SOH\DC2\EOT\140\ACK\EOT*\SUBG Determines if upgrades are available on this route. Defaults to true.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\SOH\ACK\DC2\EOT\140\ACK\EOT\GS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\SOH\SOH\DC2\EOT\140\ACK\RS%\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\SOH\ETX\DC2\EOT\140\ACK()\n\
    \\171\STX\n\
    \\ACK\EOT\ACK\ETX\STX\STX\STX\DC2\EOT\146\ACK\EOT%\SUB\154\STX Configuration for sending data upstream as a raw data payload. This is used for\n\
    \ CONNECT requests, when forwarding CONNECT payload as raw TCP.\n\
    \ Note that CONNECT support is currently considered alpha in Envoy.\n\
    \ [#comment: TODO(htuch): Replace the above comment with an alpha tag.]\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\STX\ACK\DC2\EOT\146\ACK\EOT\DC1\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\STX\SOH\DC2\EOT\146\ACK\DC2 \n\
    \\SI\n\
    \\a\EOT\ACK\ETX\STX\STX\STX\ETX\DC2\EOT\146\ACK#$\n\
    \\SO\n\
    \\EOT\EOT\ACK\ETX\ETX\DC2\ACK\149\ACK\STX\173\ACK\ETX\n\
    \\r\n\
    \\ENQ\EOT\ACK\ETX\ETX\SOH\DC2\EOT\149\ACK\n\
    \\ESC\n\
    \\176\EOT\n\
    \\ACK\EOT\ACK\ETX\ETX\STX\NUL\DC2\EOT\158\ACK\EOT5\SUB\159\EOT Specifies the maximum duration allowed for streams on the route. If not specified, the value\n\
    \ from the :ref:`max_stream_duration\n\
    \ <envoy_v3_api_field_config.core.v3.HttpProtocolOptions.max_stream_duration>` field in\n\
    \ :ref:`HttpConnectionManager.common_http_protocol_options\n\
    \ <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.common_http_protocol_options>`\n\
    \ is used. If this field is set explicitly to zero, any\n\
    \ HttpConnectionManager max_stream_duration timeout will be disabled for\n\
    \ this route.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\NUL\ACK\DC2\EOT\158\ACK\EOT\FS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\NUL\SOH\DC2\EOT\158\ACK\GS0\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\NUL\ETX\DC2\EOT\158\ACK34\n\
    \\202\STX\n\
    \\ACK\EOT\ACK\ETX\ETX\STX\SOH\DC2\EOT\164\ACK\EOT9\SUB\185\STX If present, and the request contains a `grpc-timeout header\n\
    \ <https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md>`_, use that value as the\n\
    \ *max_stream_duration*, but limit the applied timeout to the maximum value specified here.\n\
    \ If set to 0, the `grpc-timeout` header is used without modification.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\SOH\ACK\DC2\EOT\164\ACK\EOT\FS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\SOH\SOH\DC2\EOT\164\ACK\GS4\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\SOH\ETX\DC2\EOT\164\ACK78\n\
    \\253\ETX\n\
    \\ACK\EOT\ACK\ETX\ETX\STX\STX\DC2\EOT\172\ACK\EOT<\SUB\236\ETX If present, Envoy will adjust the timeout provided by the `grpc-timeout` header by\n\
    \ subtracting the provided duration from the header. This is useful for allowing Envoy to set\n\
    \ its global timeout to be less than that of the deadline imposed by the calling client, which\n\
    \ makes it more likely that Envoy will handle the timeout instead of having the call canceled\n\
    \ by the client. If, after applying the offset, the resulting timeout is zero or negative,\n\
    \ the stream will timeout immediately.\n\
    \\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\STX\ACK\DC2\EOT\172\ACK\EOT\FS\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\STX\SOH\DC2\EOT\172\ACK\GS7\n\
    \\SI\n\
    \\a\EOT\ACK\ETX\ETX\STX\STX\ETX\DC2\EOT\172\ACK:;\n\
    \\v\n\
    \\ETX\EOT\ACK\t\DC2\EOT\175\ACK\STX&\n\
    \\f\n\
    \\EOT\EOT\ACK\t\NUL\DC2\EOT\175\ACK\v\r\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\NUL\SOH\DC2\EOT\175\ACK\v\r\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\NUL\STX\DC2\EOT\175\ACK\v\r\n\
    \\f\n\
    \\EOT\EOT\ACK\t\SOH\DC2\EOT\175\ACK\SI\DC1\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\SOH\SOH\DC2\EOT\175\ACK\SI\DC1\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\SOH\STX\DC2\EOT\175\ACK\SI\DC1\n\
    \\f\n\
    \\EOT\EOT\ACK\t\STX\DC2\EOT\175\ACK\DC3\NAK\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\STX\SOH\DC2\EOT\175\ACK\DC3\NAK\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\STX\STX\DC2\EOT\175\ACK\DC3\NAK\n\
    \\f\n\
    \\EOT\EOT\ACK\t\ETX\DC2\EOT\175\ACK\ETB\EM\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ETX\SOH\DC2\EOT\175\ACK\ETB\EM\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ETX\STX\DC2\EOT\175\ACK\ETB\EM\n\
    \\f\n\
    \\EOT\EOT\ACK\t\EOT\DC2\EOT\175\ACK\ESC\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\EOT\SOH\DC2\EOT\175\ACK\ESC\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\EOT\STX\DC2\EOT\175\ACK\ESC\GS\n\
    \\f\n\
    \\EOT\EOT\ACK\t\ENQ\DC2\EOT\175\ACK\US!\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ENQ\SOH\DC2\EOT\175\ACK\US!\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ENQ\STX\DC2\EOT\175\ACK\US!\n\
    \\f\n\
    \\EOT\EOT\ACK\t\ACK\DC2\EOT\175\ACK#%\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ACK\SOH\DC2\EOT\175\ACK#%\n\
    \\r\n\
    \\ENQ\EOT\ACK\t\ACK\STX\DC2\EOT\175\ACK#%\n\
    \\v\n\
    \\ETX\EOT\ACK\n\
    \\DC2\EOT\177\ACK\STX#\n\
    \\f\n\
    \\EOT\EOT\ACK\n\
    \\NUL\DC2\EOT\177\ACK\v\"\n\
    \\SO\n\
    \\EOT\EOT\ACK\b\NUL\DC2\ACK\179\ACK\STX\216\ACK\ETX\n\
    \\r\n\
    \\ENQ\EOT\ACK\b\NUL\SOH\DC2\EOT\179\ACK\b\EM\n\
    \\r\n\
    \\ENQ\EOT\ACK\b\NUL\STX\DC2\EOT\180\ACK\EOT&\n\
    \\SI\n\
    \\a\EOT\ACK\b\NUL\STX\175\b\DC2\EOT\180\ACK\EOT&\n\
    \Y\n\
    \\EOT\EOT\ACK\STX\NUL\DC2\EOT\184\ACK\EOT@\SUBK Indicates the upstream cluster to which the request should be routed\n\
    \ to.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NUL\ENQ\DC2\EOT\184\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NUL\SOH\DC2\EOT\184\ACK\v\DC2\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NUL\ETX\DC2\EOT\184\ACK\NAK\SYN\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NUL\b\DC2\EOT\184\ACK\ETB?\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\NUL\b\175\b\SO\DC2\EOT\184\ACK\CAN>\n\
    \\153\EOT\n\
    \\EOT\EOT\ACK\STX\SOH\DC2\ACK\199\ACK\EOT\200\ACKb\SUB\136\EOT Envoy will determine the cluster to route to by reading the value of the\n\
    \ HTTP header named by cluster_header from the request headers. If the\n\
    \ header is not found or the referenced cluster does not exist, Envoy will\n\
    \ return a 404 response.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Internally, Envoy always uses the HTTP/2 *:authority* header to represent the HTTP/1\n\
    \   *Host* header. Thus, if attempting to match on *Host*, match on *:authority* instead.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   If the header appears multiple times only the first value is used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SOH\ENQ\DC2\EOT\199\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SOH\SOH\DC2\EOT\199\ACK\v\EM\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SOH\ETX\DC2\EOT\199\ACK\FS\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SOH\b\DC2\EOT\200\ACK\ba\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\SOH\b\175\b\SO\DC2\EOT\200\ACK\t`\n\
    \\170\STX\n\
    \\EOT\EOT\ACK\STX\STX\DC2\EOT\207\ACK\EOT*\SUB\155\STX Multiple upstream clusters can be specified for a given route. The\n\
    \ request is routed to one of the upstream clusters based on weights\n\
    \ assigned to each cluster. See\n\
    \ :ref:`traffic splitting <config_http_conn_man_route_table_traffic_splitting_split>`\n\
    \ for additional documentation.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\STX\ACK\DC2\EOT\207\ACK\EOT\DC3\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\STX\SOH\DC2\EOT\207\ACK\DC4%\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\STX\ETX\DC2\EOT\207\ACK()\n\
    \\233\STX\n\
    \\EOT\EOT\ACK\STX\ETX\DC2\EOT\215\ACK\EOT)\SUB\218\STX [#not-implemented-hide:]\n\
    \ Name of the cluster specifier plugin to use to determine the cluster for\n\
    \ requests on this route. The plugin name must be defined in the associated\n\
    \ :ref:`envoy_v3_api_field_config.route.v3.RouteConfiguration.cluster_specifier_plugins`\n\
    \ in the\n\
    \ :ref:`envoy_v3_api_field_config.core.v3.TypedExtensionConfig.name` field.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETX\ENQ\DC2\EOT\215\ACK\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETX\SOH\DC2\EOT\215\ACK\v#\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETX\ETX\DC2\EOT\215\ACK&(\n\
    \\138\SOH\n\
    \\EOT\EOT\ACK\STX\EOT\DC2\ACK\220\ACK\STX\221\ACK5\SUBz The HTTP status code to use when configured cluster is not found.\n\
    \ The default response code is 503 Service Unavailable.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EOT\ACK\DC2\EOT\220\ACK\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EOT\SOH\DC2\EOT\220\ACK\RS=\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EOT\ETX\DC2\EOT\220\ACK@B\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EOT\b\DC2\EOT\221\ACK\ACK4\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\EOT\b\175\b\DLE\DC2\EOT\221\ACK\a3\n\
    \\190\ETX\n\
    \\EOT\EOT\ACK\STX\ENQ\DC2\EOT\228\ACK\STX&\SUB\175\ETX Optional endpoint metadata match criteria used by the subset load balancer. Only endpoints\n\
    \ in the upstream cluster with metadata matching what's set in this field will be considered\n\
    \ for load balancing. If using :ref:`weighted_clusters\n\
    \ <envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters>`, metadata will be merged, with values\n\
    \ provided there taking precedence. The filter name should be specified as *envoy.lb*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ENQ\ACK\DC2\EOT\228\ACK\STX\DC2\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ENQ\SOH\DC2\EOT\228\ACK\DC3!\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ENQ\ETX\DC2\EOT\228\ACK$%\n\
    \\168\n\
    \\n\
    \\EOT\EOT\ACK\STX\ACK\DC2\ACK\133\a\STX\134\aV\SUB\151\n\
    \ Indicates that during forwarding, the matched prefix (or path) should be\n\
    \ swapped with this value. This option allows application URLs to be rooted\n\
    \ at a different path from those exposed at the reverse proxy layer. The router filter will\n\
    \ place the original path before rewrite into the :ref:`x-envoy-original-path\n\
    \ <config_http_filters_router_x-envoy-original-path>` header.\n\
    \\n\
    \ Only one of *prefix_rewrite* or\n\
    \ :ref:`regex_rewrite <envoy_v3_api_field_config.route.v3.RouteAction.regex_rewrite>`\n\
    \ may be specified.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Pay careful attention to the use of trailing slashes in the\n\
    \   :ref:`route's match <envoy_v3_api_field_config.route.v3.Route.match>` prefix value.\n\
    \   Stripping a prefix from a path requires multiple Routes to handle all cases. For example,\n\
    \   rewriting */prefix* to */* and */prefix/etc* to */etc* cannot be done in a single\n\
    \   :ref:`Route <envoy_v3_api_msg_config.route.v3.Route>`, as shown by the below config entries:\n\
    \\n\
    \   .. code-block:: yaml\n\
    \\n\
    \     - match:\n\
    \         prefix: \"/prefix/\"\n\
    \       route:\n\
    \         prefix_rewrite: \"/\"\n\
    \     - match:\n\
    \         prefix: \"/prefix\"\n\
    \       route:\n\
    \         prefix_rewrite: \"/\"\n\
    \\n\
    \   Having above entries in the config, requests to */prefix* will be stripped to */*, while\n\
    \   requests to */prefix/etc* will be stripped to */etc*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ACK\ENQ\DC2\EOT\133\a\STX\b\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ACK\SOH\DC2\EOT\133\a\t\ETB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ACK\ETX\DC2\EOT\133\a\SUB\ESC\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ACK\b\DC2\EOT\134\a\ACKU\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\ACK\b\175\b\SO\DC2\EOT\134\a\aT\n\
    \\208\v\n\
    \\EOT\EOT\ACK\STX\a\DC2\EOT\164\a\STX=\SUB\193\v Indicates that during forwarding, portions of the path that match the\n\
    \ pattern should be rewritten, even allowing the substitution of capture\n\
    \ groups from the pattern into the new path as specified by the rewrite\n\
    \ substitution string. This is useful to allow application paths to be\n\
    \ rewritten in a way that is aware of segments with variable content like\n\
    \ identifiers. The router filter will place the original path as it was\n\
    \ before the rewrite into the :ref:`x-envoy-original-path\n\
    \ <config_http_filters_router_x-envoy-original-path>` header.\n\
    \\n\
    \ Only one of :ref:`prefix_rewrite <envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite>`\n\
    \ or *regex_rewrite* may be specified.\n\
    \\n\
    \ Examples using Google's `RE2 <https://github.com/google/re2>`_ engine:\n\
    \\n\
    \ * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution\n\
    \   string of ``\\2/instance/\\1`` would transform ``/service/foo/v1/api``\n\
    \   into ``/v1/api/instance/foo``.\n\
    \\n\
    \ * The pattern ``one`` paired with a substitution string of ``two`` would\n\
    \   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.\n\
    \\n\
    \ * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of\n\
    \   ``\\1two\\2`` would replace only the first occurrence of ``one``,\n\
    \   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.\n\
    \\n\
    \ * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``\n\
    \   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to\n\
    \   ``/aaa/yyy/bbb``.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\a\ACK\DC2\EOT\164\a\STX)\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\a\SOH\DC2\EOT\164\a*7\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\a\ETX\DC2\EOT\164\a:<\n\
    \\SO\n\
    \\EOT\EOT\ACK\b\SOH\DC2\ACK\166\a\STX\210\a\ETX\n\
    \\r\n\
    \\ENQ\EOT\ACK\b\SOH\SOH\DC2\EOT\166\a\b\RS\n\
    \e\n\
    \\EOT\EOT\ACK\STX\b\DC2\ACK\169\a\EOT\170\aX\SUBU Indicates that during forwarding, the host header will be swapped with\n\
    \ this value.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\b\ENQ\DC2\EOT\169\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\b\SOH\DC2\EOT\169\a\v\US\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\b\ETX\DC2\EOT\169\a\"#\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\b\b\DC2\EOT\170\a\bW\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\b\b\175\b\SO\DC2\EOT\170\a\tV\n\
    \\203\STX\n\
    \\EOT\EOT\ACK\STX\t\DC2\EOT\177\a\EOT4\SUB\188\STX Indicates that during forwarding, the host header will be swapped with\n\
    \ the hostname of the upstream host chosen by the cluster manager. This\n\
    \ option is applicable only when the destination cluster for a route is of\n\
    \ type *strict_dns* or *logical_dns*. Setting this to true with other cluster\n\
    \ types has no effect.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\t\ACK\DC2\EOT\177\a\EOT\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\t\SOH\DC2\EOT\177\a\RS/\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\t\ETX\DC2\EOT\177\a23\n\
    \\229\ETX\n\
    \\EOT\EOT\ACK\STX\n\
    \\DC2\ACK\191\a\EOT\192\aW\SUB\212\ETX Indicates that during forwarding, the host header will be swapped with the content of given\n\
    \ downstream or :ref:`custom <config_http_conn_man_headers_custom_request_headers>` header.\n\
    \ If header value is empty, host header is left intact.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Pay attention to the potential security implications of using this option. Provided header\n\
    \   must come from trusted source.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   If the header appears multiple times only the first value is used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\n\
    \\ENQ\DC2\EOT\191\a\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\n\
    \\SOH\DC2\EOT\191\a\v\RS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\n\
    \\ETX\DC2\EOT\191\a!#\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\n\
    \\b\DC2\EOT\192\a\bV\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\n\
    \\b\175\b\SO\DC2\EOT\192\a\tU\n\
    \\168\EOT\n\
    \\EOT\EOT\ACK\STX\v\DC2\EOT\209\a\EOTI\SUB\153\EOT Indicates that during forwarding, the host header will be swapped with\n\
    \ the result of the regex substitution executed on path value with query and fragment removed.\n\
    \ This is useful for transitioning variable content between path segment and subdomain.\n\
    \\n\
    \ For example with the following config:\n\
    \\n\
    \   .. code-block:: yaml\n\
    \\n\
    \     host_rewrite_path_regex:\n\
    \       pattern:\n\
    \         google_re2: {}\n\
    \         regex: \"^/(.+)/.+$\"\n\
    \       substitution: \\1\n\
    \\n\
    \ Would rewrite the host header to `envoyproxy.io` given the path `/envoyproxy.io/some/path`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\v\ACK\DC2\EOT\209\a\EOT+\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\v\SOH\DC2\EOT\209\a,C\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\v\ETX\DC2\EOT\209\aFH\n\
    \\211\EOT\n\
    \\EOT\EOT\ACK\STX\f\DC2\EOT\223\a\STX'\SUB\196\EOT Specifies the upstream timeout for the route. If not specified, the default is 15s. This\n\
    \ spans between the point at which the entire downstream request (i.e. end-of-stream) has been\n\
    \ processed and when the upstream response has been completely processed. A value of 0 will\n\
    \ disable the route's timeout.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   This timeout includes all retries. See also\n\
    \   :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,\n\
    \   :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the\n\
    \   :ref:`retry overview <arch_overview_http_routing_retry>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\f\ACK\DC2\EOT\223\a\STX\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\f\SOH\DC2\EOT\223\a\ESC\"\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\f\ETX\DC2\EOT\223\a%&\n\
    \\194\v\n\
    \\EOT\EOT\ACK\STX\r\DC2\EOT\247\a\STX-\SUB\179\v Specifies the idle timeout for the route. If not specified, there is no per-route idle timeout,\n\
    \ although the connection manager wide :ref:`stream_idle_timeout\n\
    \ <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.stream_idle_timeout>`\n\
    \ will still apply. A value of 0 will completely disable the route's idle timeout, even if a\n\
    \ connection manager stream idle timeout is configured.\n\
    \\n\
    \ The idle timeout is distinct to :ref:`timeout\n\
    \ <envoy_v3_api_field_config.route.v3.RouteAction.timeout>`, which provides an upper bound\n\
    \ on the upstream response time; :ref:`idle_timeout\n\
    \ <envoy_v3_api_field_config.route.v3.RouteAction.idle_timeout>` instead bounds the amount\n\
    \ of time the request's stream may be idle.\n\
    \\n\
    \ After header decoding, the idle timeout will apply on downstream and\n\
    \ upstream request events. Each time an encode/decode event for headers or\n\
    \ data is processed for the stream, the timer will be reset. If the timeout\n\
    \ fires, the stream is terminated with a 408 Request Timeout error code if no\n\
    \ upstream response header has been received, otherwise a stream reset\n\
    \ occurs.\n\
    \\n\
    \ If the :ref:`overload action <config_overload_manager_overload_actions>` \"envoy.overload_actions.reduce_timeouts\"\n\
    \ is configured, this timeout is scaled according to the value for\n\
    \ :ref:`HTTP_DOWNSTREAM_STREAM_IDLE <envoy_v3_api_enum_value_config.overload.v3.ScaleTimersOverloadActionConfig.TimerType.HTTP_DOWNSTREAM_STREAM_IDLE>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\r\ACK\DC2\EOT\247\a\STX\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\r\SOH\DC2\EOT\247\a\ESC'\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\r\ETX\DC2\EOT\247\a*,\n\
    \\241\SOH\n\
    \\EOT\EOT\ACK\STX\SO\DC2\EOT\252\a\STX\US\SUB\226\SOH Indicates that the route has a retry policy. Note that if this is set,\n\
    \ it'll take precedence over the virtual host level retry policy entirely\n\
    \ (e.g.: policies are not merged, most internal one becomes the enforced policy).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SO\ACK\DC2\EOT\252\a\STX\r\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SO\SOH\DC2\EOT\252\a\SO\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SO\ETX\DC2\EOT\252\a\GS\RS\n\
    \\146\ETX\n\
    \\EOT\EOT\ACK\STX\SI\DC2\EOT\131\b\STX5\SUB\131\ETX [#not-implemented-hide:]\n\
    \ Specifies the configuration for retry policy extension. Note that if this is set, it'll take\n\
    \ precedence over the virtual host level retry policy entirely (e.g.: policies are not merged,\n\
    \ most internal one becomes the enforced policy). :ref:`Retry policy <envoy_v3_api_field_config.route.v3.VirtualHost.retry_policy>`\n\
    \ should not be set if this field is used.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SI\ACK\DC2\EOT\131\b\STX\NAK\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SI\SOH\DC2\EOT\131\b\SYN/\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SI\ETX\DC2\EOT\131\b24\n\
    \H\n\
    \\EOT\EOT\ACK\STX\DLE\DC2\EOT\134\b\STX<\SUB: Indicates that the route has request mirroring policies.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DLE\EOT\DC2\EOT\134\b\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DLE\ACK\DC2\EOT\134\b\v\RS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DLE\SOH\DC2\EOT\134\b\US6\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DLE\ETX\DC2\EOT\134\b9;\n\
    \g\n\
    \\EOT\EOT\ACK\STX\DC1\DC2\EOT\137\b\STXW\SUBY Optionally specifies the :ref:`routing priority <arch_overview_http_routing_priority>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC1\ACK\DC2\EOT\137\b\STX\EM\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC1\SOH\DC2\EOT\137\b\SUB\"\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC1\ETX\DC2\EOT\137\b%'\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC1\b\DC2\EOT\137\b(V\n\
    \\DLE\n\
    \\b\EOT\ACK\STX\DC1\b\175\b\DLE\DC2\EOT\137\b)U\n\
    \a\n\
    \\EOT\EOT\ACK\STX\DC2\DC2\EOT\141\b\STX&\SUBS Specifies a set of rate limit configurations that could be applied to the\n\
    \ route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC2\EOT\DC2\EOT\141\b\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC2\ACK\DC2\EOT\141\b\v\DC4\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC2\SOH\DC2\EOT\141\b\NAK \n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC2\ETX\DC2\EOT\141\b#%\n\
    \\175\ETX\n\
    \\EOT\EOT\ACK\STX\DC3\DC2\ACK\149\b\STX\150\bS\SUB\158\ETX Specifies if the rate limit filter should include the virtual host rate\n\
    \ limits. By default, if the route configured rate limits, the virtual host\n\
    \ :ref:`rate_limits <envoy_v3_api_field_config.route.v3.VirtualHost.rate_limits>` are not applied to the\n\
    \ request.\n\
    \\n\
    \ This field is deprecated. Please use :ref:`vh_rate_limits <envoy_v3_api_field_extensions.filters.http.ratelimit.v3.RateLimitPerRoute.vh_rate_limits>`\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC3\ACK\DC2\EOT\149\b\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC3\SOH\DC2\EOT\149\b\FS2\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC3\ETX\DC2\EOT\149\b57\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC3\b\DC2\EOT\150\b\ACKR\n\
    \\SO\n\
    \\ACK\EOT\ACK\STX\DC3\b\ETX\DC2\EOT\150\b\a\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\STX\DC3\b\242\232\128K\DC2\EOT\150\b\SUBQ\n\
    \\229\ACK\n\
    \\EOT\EOT\ACK\STX\DC4\DC2\EOT\164\b\STX'\SUB\214\ACK Specifies a list of hash policies to use for ring hash load balancing. Each\n\
    \ hash policy is evaluated individually and the combined result is used to\n\
    \ route the request. The method of combination is deterministic such that\n\
    \ identical lists of hash policies will produce the same hash. Since a hash\n\
    \ policy examines specific parts of a request, it can fail to produce a hash\n\
    \ (i.e. if the hashed header is not present). If (and only if) all configured\n\
    \ hash policies fail to generate a hash, no hash will be produced for\n\
    \ the route. In this case, the behavior is the same as if no hash policies\n\
    \ were specified (i.e. the ring hash load balancer will choose a random\n\
    \ backend). If a hash policy has the \"terminal\" attribute set to true, and\n\
    \ there is already a hash generated, the hash is returned immediately,\n\
    \ ignoring the rest of the hash policy list.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC4\EOT\DC2\EOT\164\b\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC4\ACK\DC2\EOT\164\b\v\NAK\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC4\SOH\DC2\EOT\164\b\SYN!\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\DC4\ETX\DC2\EOT\164\b$&\n\
    \;\n\
    \\EOT\EOT\ACK\STX\NAK\DC2\EOT\167\b\STX\ETB\SUB- Indicates that the route has a CORS policy.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NAK\ACK\DC2\EOT\167\b\STX\f\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NAK\SOH\DC2\EOT\167\b\r\DC1\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\NAK\ETX\DC2\EOT\167\b\DC4\SYN\n\
    \\143\v\n\
    \\EOT\EOT\ACK\STX\SYN\DC2\ACK\189\b\STX\190\bS\SUB\254\n\
    \ Deprecated by :ref:`grpc_timeout_header_max <envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_max>`\n\
    \ If present, and the request is a gRPC request, use the\n\
    \ `grpc-timeout header <https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md>`_,\n\
    \ or its default value (infinity) instead of\n\
    \ :ref:`timeout <envoy_v3_api_field_config.route.v3.RouteAction.timeout>`, but limit the applied timeout\n\
    \ to the maximum value specified here. If configured as 0, the maximum allowed timeout for\n\
    \ gRPC requests is infinity. If not configured at all, the `grpc-timeout` header is not used\n\
    \ and gRPC requests time out like any other requests using\n\
    \ :ref:`timeout <envoy_v3_api_field_config.route.v3.RouteAction.timeout>` or its default.\n\
    \ This can be used to prevent unexpected upstream request timeouts due to potentially long\n\
    \ time gaps between gRPC request and response in gRPC streaming mode.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \    If a timeout is specified using :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`, it takes\n\
    \    precedence over `grpc-timeout header <https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md>`_, when\n\
    \    both are present. See also\n\
    \    :ref:`config_http_filters_router_x-envoy-upstream-rq-timeout-ms`,\n\
    \    :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms`, and the\n\
    \    :ref:`retry overview <arch_overview_http_routing_retry>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SYN\ACK\DC2\EOT\189\b\STX\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SYN\SOH\DC2\EOT\189\b\ESC+\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SYN\ETX\DC2\EOT\189\b.0\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SYN\b\DC2\EOT\190\b\ACKR\n\
    \\SO\n\
    \\ACK\EOT\ACK\STX\SYN\b\ETX\DC2\EOT\190\b\a\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\STX\SYN\b\242\232\128K\DC2\EOT\190\b\SUBQ\n\
    \\226\ENQ\n\
    \\EOT\EOT\ACK\STX\ETB\DC2\ACK\200\b\STX\201\bS\SUB\209\ENQ Deprecated by :ref:`grpc_timeout_header_offset <envoy_v3_api_field_config.route.v3.RouteAction.MaxStreamDuration.grpc_timeout_header_offset>`.\n\
    \ If present, Envoy will adjust the timeout provided by the `grpc-timeout` header by subtracting\n\
    \ the provided duration from the header. This is useful in allowing Envoy to set its global\n\
    \ timeout to be less than that of the deadline imposed by the calling client, which makes it more\n\
    \ likely that Envoy will handle the timeout instead of having the call canceled by the client.\n\
    \ The offset will only be applied if the provided grpc_timeout is greater than the offset. This\n\
    \ ensures that the offset will only ever decrease the timeout and never set it to 0 (meaning\n\
    \ infinity).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETB\ACK\DC2\EOT\200\b\STX\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETB\SOH\DC2\EOT\200\b\ESC.\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETB\ETX\DC2\EOT\200\b13\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ETB\b\DC2\EOT\201\b\ACKR\n\
    \\SO\n\
    \\ACK\EOT\ACK\STX\ETB\b\ETX\DC2\EOT\201\b\a\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\STX\ETB\b\242\232\128K\DC2\EOT\201\b\SUBQ\n\
    \\f\n\
    \\EOT\EOT\ACK\STX\CAN\DC2\EOT\203\b\STX.\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\CAN\EOT\DC2\EOT\203\b\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\CAN\ACK\DC2\EOT\203\b\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\CAN\SOH\DC2\EOT\203\b\EM(\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\CAN\ETX\DC2\EOT\203\b+-\n\
    \\175\STX\n\
    \\EOT\EOT\ACK\STX\EM\DC2\EOT\209\b\STX7\SUB\160\STX If present, Envoy will try to follow an upstream redirect response instead of proxying the\n\
    \ response back to the downstream. An upstream redirect response is defined\n\
    \ by :ref:`redirect_response_codes\n\
    \ <envoy_v3_api_field_config.route.v3.InternalRedirectPolicy.redirect_response_codes>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EM\ACK\DC2\EOT\209\b\STX\CAN\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EM\SOH\DC2\EOT\209\b\EM1\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\EM\ETX\DC2\EOT\209\b46\n\
    \\SO\n\
    \\EOT\EOT\ACK\STX\SUB\DC2\ACK\211\b\STX\212\bS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SUB\ACK\DC2\EOT\211\b\STX\CAN\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SUB\SOH\DC2\EOT\211\b\EM1\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SUB\ETX\DC2\EOT\211\b46\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\SUB\b\DC2\EOT\212\b\ACKR\n\
    \\SO\n\
    \\ACK\EOT\ACK\STX\SUB\b\ETX\DC2\EOT\212\b\a\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\STX\SUB\b\242\232\128K\DC2\EOT\212\b\SUBQ\n\
    \\166\a\n\
    \\EOT\EOT\ACK\STX\ESC\DC2\ACK\228\b\STX\229\bS\SUB\149\a An internal redirect is handled, iff the number of previous internal redirects that a\n\
    \ downstream request has encountered is lower than this value, and\n\
    \ :ref:`internal_redirect_action <envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action>`\n\
    \ is set to :ref:`HANDLE_INTERNAL_REDIRECT\n\
    \ <envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.HANDLE_INTERNAL_REDIRECT>`\n\
    \ In the case where a downstream request is bounced among multiple routes by internal redirect,\n\
    \ the first route that hits this threshold, or has\n\
    \ :ref:`internal_redirect_action <envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_action>`\n\
    \ set to\n\
    \ :ref:`PASS_THROUGH_INTERNAL_REDIRECT\n\
    \ <envoy_v3_api_enum_value_config.route.v3.RouteAction.InternalRedirectAction.PASS_THROUGH_INTERNAL_REDIRECT>`\n\
    \ will pass the redirect back to downstream.\n\
    \\n\
    \ If not specified, at most one redirect will be followed.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ESC\ACK\DC2\EOT\228\b\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ESC\SOH\DC2\EOT\228\b\RS4\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ESC\ETX\DC2\EOT\228\b79\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\ESC\b\DC2\EOT\229\b\ACKR\n\
    \\SO\n\
    \\ACK\EOT\ACK\STX\ESC\b\ETX\DC2\EOT\229\b\a\CAN\n\
    \\DC1\n\
    \\t\EOT\ACK\STX\ESC\b\242\232\128K\DC2\EOT\229\b\SUBQ\n\
    \\241\SOH\n\
    \\EOT\EOT\ACK\STX\FS\DC2\EOT\234\b\STX \SUB\226\SOH Indicates that the route has a hedge policy. Note that if this is set,\n\
    \ it'll take precedence over the virtual host level hedge policy entirely\n\
    \ (e.g.: policies are not merged, most internal one becomes the enforced policy).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\FS\ACK\DC2\EOT\234\b\STX\r\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\FS\SOH\DC2\EOT\234\b\SO\SUB\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\FS\ETX\DC2\EOT\234\b\GS\US\n\
    \E\n\
    \\EOT\EOT\ACK\STX\GS\DC2\EOT\237\b\STX-\SUB7 Specifies the maximum stream duration for this route.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\GS\ACK\DC2\EOT\237\b\STX\DC3\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\GS\SOH\DC2\EOT\237\b\DC4'\n\
    \\r\n\
    \\ENQ\EOT\ACK\STX\GS\ETX\DC2\EOT\237\b*,\n\
    \s\n\
    \\STX\EOT\a\DC2\ACK\242\b\NUL\181\n\
    \\SOH\SUBe HTTP retry :ref:`architecture overview <arch_overview_http_routing_retry>`.\n\
    \ [#next-free-field: 12]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\a\SOH\DC2\EOT\242\b\b\DC3\n\
    \\v\n\
    \\ETX\EOT\a\a\DC2\EOT\243\b\STX`\n\
    \\DLE\n\
    \\b\EOT\a\a\211\136\225\ETX\SOH\DC2\EOT\243\b\STX`\n\
    \\SO\n\
    \\EOT\EOT\a\EOT\NUL\DC2\ACK\245\b\STX\248\b\ETX\n\
    \\r\n\
    \\ENQ\EOT\a\EOT\NUL\SOH\DC2\EOT\245\b\a\CAN\n\
    \\SO\n\
    \\ACK\EOT\a\EOT\NUL\STX\NUL\DC2\EOT\246\b\EOT\DLE\n\
    \\SI\n\
    \\a\EOT\a\EOT\NUL\STX\NUL\SOH\DC2\EOT\246\b\EOT\v\n\
    \\SI\n\
    \\a\EOT\a\EOT\NUL\STX\NUL\STX\DC2\EOT\246\b\SO\SI\n\
    \\SO\n\
    \\ACK\EOT\a\EOT\NUL\STX\SOH\DC2\EOT\247\b\EOT\ETB\n\
    \\SI\n\
    \\a\EOT\a\EOT\NUL\STX\SOH\SOH\DC2\EOT\247\b\EOT\DC2\n\
    \\SI\n\
    \\a\EOT\a\EOT\NUL\STX\SOH\STX\DC2\EOT\247\b\NAK\SYN\n\
    \\SO\n\
    \\EOT\EOT\a\ETX\NUL\DC2\ACK\250\b\STX\136\t\ETX\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\NUL\SOH\DC2\EOT\250\b\n\
    \\ETB\n\
    \\SI\n\
    \\ENQ\EOT\a\ETX\NUL\a\DC2\ACK\251\b\EOT\252\b7\n\
    \\DC4\n\
    \\n\
    \\EOT\a\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\251\b\EOT\252\b7\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\NUL\t\DC2\EOT\254\b\EOT\SI\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\NUL\t\NUL\DC2\EOT\254\b\r\SO\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\t\NUL\SOH\DC2\EOT\254\b\r\SO\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\t\NUL\STX\DC2\EOT\254\b\r\SO\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\NUL\n\
    \\DC2\EOT\128\t\EOT\SYN\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\NUL\n\
    \\NUL\DC2\EOT\128\t\r\NAK\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\NUL\STX\NUL\DC2\EOT\130\t\EOT=\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\NUL\ENQ\DC2\EOT\130\t\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\NUL\SOH\DC2\EOT\130\t\v\SI\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\NUL\ETX\DC2\EOT\130\t\DC2\DC3\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\NUL\b\DC2\EOT\130\t\DC4<\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\NUL\STX\NUL\b\175\b\SO\DC2\EOT\130\t\NAK;\n\
    \A\n\
    \\ACK\EOT\a\ETX\NUL\b\NUL\DC2\ACK\133\t\EOT\135\t\ENQ\SUB/ [#extension-category: envoy.retry_priorities]\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\b\NUL\SOH\DC2\EOT\133\t\n\
    \\NAK\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\NUL\STX\SOH\DC2\EOT\134\t\ACK+\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\SOH\ACK\DC2\EOT\134\t\ACK\EM\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\SOH\SOH\DC2\EOT\134\t\SUB&\n\
    \\SI\n\
    \\a\EOT\a\ETX\NUL\STX\SOH\ETX\DC2\EOT\134\t)*\n\
    \\SO\n\
    \\EOT\EOT\a\ETX\SOH\DC2\ACK\138\t\STX\152\t\ETX\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\SOH\SOH\DC2\EOT\138\t\n\
    \\FS\n\
    \\SI\n\
    \\ENQ\EOT\a\ETX\SOH\a\DC2\ACK\139\t\EOT\140\t<\n\
    \\DC4\n\
    \\n\
    \\EOT\a\ETX\SOH\a\211\136\225\ETX\SOH\DC2\ACK\139\t\EOT\140\t<\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\SOH\t\DC2\EOT\142\t\EOT\SI\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\SOH\t\NUL\DC2\EOT\142\t\r\SO\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\t\NUL\SOH\DC2\EOT\142\t\r\SO\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\t\NUL\STX\DC2\EOT\142\t\r\SO\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\SOH\n\
    \\DC2\EOT\144\t\EOT\SYN\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\SOH\n\
    \\NUL\DC2\EOT\144\t\r\NAK\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\SOH\STX\NUL\DC2\EOT\146\t\EOT=\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\NUL\ENQ\DC2\EOT\146\t\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\NUL\SOH\DC2\EOT\146\t\v\SI\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\NUL\ETX\DC2\EOT\146\t\DC2\DC3\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\NUL\b\DC2\EOT\146\t\DC4<\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\SOH\STX\NUL\b\175\b\SO\DC2\EOT\146\t\NAK;\n\
    \F\n\
    \\ACK\EOT\a\ETX\SOH\b\NUL\DC2\ACK\149\t\EOT\151\t\ENQ\SUB4 [#extension-category: envoy.retry_host_predicates]\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\b\NUL\SOH\DC2\EOT\149\t\n\
    \\NAK\n\
    \\SO\n\
    \\ACK\EOT\a\ETX\SOH\STX\SOH\DC2\EOT\150\t\ACK+\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\SOH\ACK\DC2\EOT\150\t\ACK\EM\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\SOH\SOH\DC2\EOT\150\t\SUB&\n\
    \\SI\n\
    \\a\EOT\a\ETX\SOH\STX\SOH\ETX\DC2\EOT\150\t)*\n\
    \\SO\n\
    \\EOT\EOT\a\ETX\STX\DC2\ACK\154\t\STX\172\t\ETX\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\STX\SOH\DC2\EOT\154\t\n\
    \\SYN\n\
    \\SI\n\
    \\ENQ\EOT\a\ETX\STX\a\DC2\ACK\155\t\EOT\156\t6\n\
    \\DC4\n\
    \\n\
    \\EOT\a\ETX\STX\a\211\136\225\ETX\SOH\DC2\ACK\155\t\EOT\156\t6\n\
    \\150\STX\n\
    \\ACK\EOT\a\ETX\STX\STX\NUL\DC2\ACK\162\t\EOT\165\t\a\SUB\131\STX Specifies the base interval between retries. This parameter is required and must be greater\n\
    \ than zero. Values less than 1 ms are rounded up to 1 ms.\n\
    \ See :ref:`config_http_filters_router_x-envoy-max-retries` for a discussion of Envoy's\n\
    \ back-off algorithm.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\NUL\ACK\DC2\EOT\162\t\EOT\FS\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\NUL\SOH\DC2\EOT\162\t\GS*\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\NUL\ETX\DC2\EOT\162\t-.\n\
    \\DC1\n\
    \\a\EOT\a\ETX\STX\STX\NUL\b\DC2\ACK\162\t/\165\t\ACK\n\
    \\DC4\n\
    \\n\
    \\EOT\a\ETX\STX\STX\NUL\b\175\b\NAK\DC2\ACK\162\t0\165\t\ENQ\n\
    \\185\STX\n\
    \\ACK\EOT\a\ETX\STX\STX\SOH\DC2\EOT\171\t\EOTT\SUB\168\STX Specifies the maximum interval between retries. This parameter is optional, but must be\n\
    \ greater than or equal to the `base_interval` if set. The default is 10 times the\n\
    \ `base_interval`. See :ref:`config_http_filters_router_x-envoy-max-retries` for a discussion\n\
    \ of Envoy's back-off algorithm.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\SOH\ACK\DC2\EOT\171\t\EOT\FS\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\SOH\SOH\DC2\EOT\171\t\GS)\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\SOH\ETX\DC2\EOT\171\t,-\n\
    \\SI\n\
    \\a\EOT\a\ETX\STX\STX\SOH\b\DC2\EOT\171\t.S\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\STX\STX\SOH\b\175\b\NAK\DC2\EOT\171\t/R\n\
    \\SO\n\
    \\EOT\EOT\a\ETX\ETX\DC2\ACK\174\t\STX\185\t\ETX\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\ETX\SOH\DC2\EOT\174\t\n\
    \\NAK\n\
    \\132\SOH\n\
    \\ACK\EOT\a\ETX\ETX\STX\NUL\DC2\ACK\180\t\EOT\181\tb\SUBr The name of the reset header.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   If the header appears multiple times only the first value is used.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\NUL\ENQ\DC2\EOT\180\t\EOT\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\NUL\SOH\DC2\EOT\180\t\v\SI\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\NUL\ETX\DC2\EOT\180\t\DC2\DC3\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\NUL\b\DC2\EOT\181\t\ba\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\ETX\STX\NUL\b\175\b\SO\DC2\EOT\181\t\t`\n\
    \1\n\
    \\ACK\EOT\a\ETX\ETX\STX\SOH\DC2\EOT\184\t\EOTP\SUB! The format of the reset header.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\SOH\ACK\DC2\EOT\184\t\EOT\NAK\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\SOH\SOH\DC2\EOT\184\t\SYN\FS\n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\SOH\ETX\DC2\EOT\184\t\US \n\
    \\SI\n\
    \\a\EOT\a\ETX\ETX\STX\SOH\b\DC2\EOT\184\t!O\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\ETX\STX\SOH\b\175\b\DLE\DC2\EOT\184\t\"N\n\
    \\147\SO\n\
    \\EOT\EOT\a\ETX\EOT\DC2\ACK\230\t\STX\241\t\ETX\SUB\130\SO A retry back-off strategy that applies when the upstream server rate limits\n\
    \ the request.\n\
    \\n\
    \ Given this configuration:\n\
    \\n\
    \ .. code-block:: yaml\n\
    \\n\
    \   rate_limited_retry_back_off:\n\
    \     reset_headers:\n\
    \     - name: Retry-After\n\
    \       format: SECONDS\n\
    \     - name: X-RateLimit-Reset\n\
    \       format: UNIX_TIMESTAMP\n\
    \     max_interval: \"300s\"\n\
    \\n\
    \ The following algorithm will apply:\n\
    \\n\
    \  1. If the response contains the header ``Retry-After`` its value must be on\n\
    \     the form ``120`` (an integer that represents the number of seconds to\n\
    \     wait before retrying). If so, this value is used as the back-off interval.\n\
    \  2. Otherwise, if the response contains the header ``X-RateLimit-Reset`` its\n\
    \     value must be on the form ``1595320702`` (an integer that represents the\n\
    \     point in time at which to retry, as a Unix timestamp in seconds). If so,\n\
    \     the current time is subtracted from this value and the result is used as\n\
    \     the back-off interval.\n\
    \  3. Otherwise, Envoy will use the default\n\
    \     :ref:`exponential back-off <envoy_v3_api_field_config.route.v3.RetryPolicy.retry_back_off>`\n\
    \     strategy.\n\
    \\n\
    \ No matter which format is used, if the resulting back-off interval exceeds\n\
    \ ``max_interval`` it is discarded and the next header in ``reset_headers``\n\
    \ is tried. If a request timeout is configured for the route it will further\n\
    \ limit how long the request will be allowed to run.\n\
    \\n\
    \ To prevent many clients retrying at the same point in time jitter is added\n\
    \ to the back-off interval, so the resulting interval is decided by taking:\n\
    \ ``random(interval, interval * 1.5)``.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Configuring ``rate_limited_retry_back_off`` will not by itself cause a request\n\
    \   to be retried. You will still need to configure the right retry policy to match\n\
    \   the responses from the upstream server.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\ETX\EOT\SOH\DC2\EOT\230\t\n\
    \!\n\
    \\180\STX\n\
    \\ACK\EOT\a\ETX\EOT\STX\NUL\DC2\EOT\235\t\EOTX\SUB\163\STX Specifies the reset headers (like ``Retry-After`` or ``X-RateLimit-Reset``)\n\
    \ to match against the response. Headers are tried in order, and matched case\n\
    \ insensitive. The first header to be parsed successfully is used. If no headers\n\
    \ match the default exponential back-off is used instead.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\NUL\EOT\DC2\EOT\235\t\EOT\f\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\NUL\ACK\DC2\EOT\235\t\r\CAN\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\NUL\SOH\DC2\EOT\235\t\EM&\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\NUL\ETX\DC2\EOT\235\t)*\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\NUL\b\DC2\EOT\235\t+W\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\EOT\STX\NUL\b\175\b\DC2\DC2\EOT\235\t,V\n\
    \\225\SOH\n\
    \\ACK\EOT\a\ETX\EOT\STX\SOH\DC2\EOT\240\t\EOTT\SUB\208\SOH Specifies the maximum back off interval that Envoy will allow. If a reset\n\
    \ header contains an interval longer than this then it will be discarded and\n\
    \ the next header will be tried. Defaults to 300 seconds.\n\
    \\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\SOH\ACK\DC2\EOT\240\t\EOT\FS\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\SOH\SOH\DC2\EOT\240\t\GS)\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\SOH\ETX\DC2\EOT\240\t,-\n\
    \\SI\n\
    \\a\EOT\a\ETX\EOT\STX\SOH\b\DC2\EOT\240\t.S\n\
    \\DC2\n\
    \\n\
    \\EOT\a\ETX\EOT\STX\SOH\b\175\b\NAK\DC2\EOT\240\t/R\n\
    \\231\SOH\n\
    \\EOT\EOT\a\STX\NUL\DC2\EOT\246\t\STX\SYN\SUB\216\SOH Specifies the conditions under which retry takes place. These are the same\n\
    \ conditions documented for :ref:`config_http_filters_router_x-envoy-retry-on` and\n\
    \ :ref:`config_http_filters_router_x-envoy-retry-grpc-on`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\ENQ\DC2\EOT\246\t\STX\b\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\SOH\DC2\EOT\246\t\t\DC1\n\
    \\r\n\
    \\ENQ\EOT\a\STX\NUL\ETX\DC2\EOT\246\t\DC4\NAK\n\
    \\207\SOH\n\
    \\EOT\EOT\a\STX\SOH\DC2\ACK\251\t\STX\252\t@\SUB\190\SOH Specifies the allowed number of retries. This parameter is optional and\n\
    \ defaults to 1. These are the same conditions documented for\n\
    \ :ref:`config_http_filters_router_x-envoy-max-retries`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\ACK\DC2\EOT\251\t\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\SOH\DC2\EOT\251\t\RS)\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\ETX\DC2\EOT\251\t,-\n\
    \\r\n\
    \\ENQ\EOT\a\STX\SOH\b\DC2\EOT\252\t\ACK?\n\
    \\DC2\n\
    \\n\
    \\EOT\a\STX\SOH\b\142\227\255Q\SOH\DC2\EOT\252\t\a>\n\
    \\208\EOT\n\
    \\EOT\EOT\a\STX\STX\DC2\EOT\137\n\
    \\STX/\SUB\193\EOT Specifies a non-zero upstream timeout per retry attempt. This parameter is optional. The\n\
    \ same conditions documented for\n\
    \ :ref:`config_http_filters_router_x-envoy-upstream-rq-per-try-timeout-ms` apply.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   If left unspecified, Envoy will use the global\n\
    \   :ref:`route timeout <envoy_v3_api_field_config.route.v3.RouteAction.timeout>` for the request.\n\
    \   Consequently, when using a :ref:`5xx <config_http_filters_router_x-envoy-retry-on>` based\n\
    \   retry policy, a request that times out will not be retried as the total timeout budget\n\
    \   would have been exhausted.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\ACK\DC2\EOT\137\n\
    \\STX\SUB\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\SOH\DC2\EOT\137\n\
    \\ESC*\n\
    \\r\n\
    \\ENQ\EOT\a\STX\STX\ETX\DC2\EOT\137\n\
    \-.\n\
    \\249\SOH\n\
    \\EOT\EOT\a\STX\ETX\DC2\EOT\142\n\
    \\STX#\SUB\234\SOH Specifies an implementation of a RetryPriority which is used to determine the\n\
    \ distribution of load across priorities used for retries. Refer to\n\
    \ :ref:`retry plugin configuration <arch_overview_http_retry_plugins>` for more details.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\ACK\DC2\EOT\142\n\
    \\STX\SI\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\SOH\DC2\EOT\142\n\
    \\DLE\RS\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ETX\ETX\DC2\EOT\142\n\
    \!\"\n\
    \\169\STX\n\
    \\EOT\EOT\a\STX\EOT\DC2\EOT\148\n\
    \\STX7\SUB\154\STX Specifies a collection of RetryHostPredicates that will be consulted when selecting a host\n\
    \ for retries. If any of the predicates reject the host, host selection will be reattempted.\n\
    \ Refer to :ref:`retry plugin configuration <arch_overview_http_retry_plugins>` for more\n\
    \ details.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\EOT\DC2\EOT\148\n\
    \\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\ACK\DC2\EOT\148\n\
    \\v\GS\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\SOH\DC2\EOT\148\n\
    \\RS2\n\
    \\r\n\
    \\ENQ\EOT\a\STX\EOT\ETX\DC2\EOT\148\n\
    \56\n\
    \\217\SOH\n\
    \\EOT\EOT\a\STX\ENQ\DC2\EOT\153\n\
    \\STX.\SUB\202\SOH The maximum number of times host selection will be reattempted before giving up, at which\n\
    \ point the host that was last selected will be routed to. If unspecified, this will default to\n\
    \ retrying once.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ENQ\ENQ\DC2\EOT\153\n\
    \\STX\a\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ENQ\SOH\DC2\EOT\153\n\
    \\b)\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ENQ\ETX\DC2\EOT\153\n\
    \,-\n\
    \i\n\
    \\EOT\EOT\a\STX\ACK\DC2\EOT\156\n\
    \\STX-\SUB[ HTTP status codes that should trigger a retry in addition to those specified by retry_on.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ACK\EOT\DC2\EOT\156\n\
    \\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ACK\ENQ\DC2\EOT\156\n\
    \\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ACK\SOH\DC2\EOT\156\n\
    \\DC2(\n\
    \\r\n\
    \\ENQ\EOT\a\STX\ACK\ETX\DC2\EOT\156\n\
    \+,\n\
    \\176\ETX\n\
    \\EOT\EOT\a\STX\a\DC2\EOT\163\n\
    \\STX\"\SUB\161\ETX Specifies parameters that control exponential retry back off. This parameter is optional, in which case the\n\
    \ default base interval is 25 milliseconds or, if set, the current value of the\n\
    \ `upstream.base_retry_backoff_ms` runtime parameter. The default maximum interval is 10 times\n\
    \ the base interval. The documentation for :ref:`config_http_filters_router_x-envoy-max-retries`\n\
    \ describes Envoy's back-off algorithm.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\a\ACK\DC2\EOT\163\n\
    \\STX\SO\n\
    \\r\n\
    \\ENQ\EOT\a\STX\a\SOH\DC2\EOT\163\n\
    \\SI\GS\n\
    \\r\n\
    \\ENQ\EOT\a\STX\a\ETX\DC2\EOT\163\n\
    \ !\n\
    \\244\ETX\n\
    \\EOT\EOT\a\STX\b\DC2\EOT\172\n\
    \\STX;\SUB\229\ETX Specifies parameters that control a retry back-off strategy that is used\n\
    \ when the request is rate limited by the upstream server. The server may\n\
    \ return a response header like ``Retry-After`` or ``X-RateLimit-Reset`` to\n\
    \ provide feedback to the client on how long to wait before retrying. If\n\
    \ configured, this back-off strategy will be used instead of the\n\
    \ default exponential back off strategy (configured using `retry_back_off`)\n\
    \ whenever a response includes the matching headers.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\b\ACK\DC2\EOT\172\n\
    \\STX\EM\n\
    \\r\n\
    \\ENQ\EOT\a\STX\b\SOH\DC2\EOT\172\n\
    \\SUB5\n\
    \\r\n\
    \\ENQ\EOT\a\STX\b\ETX\DC2\EOT\172\n\
    \8:\n\
    \\128\STX\n\
    \\EOT\EOT\a\STX\t\DC2\EOT\177\n\
    \\STX/\SUB\241\SOH HTTP response headers that trigger a retry if present in the response. A retry will be\n\
    \ triggered if any of the header matches match the upstream response headers.\n\
    \ The field is only consulted if 'retriable-headers' retry policy is active.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\t\EOT\DC2\EOT\177\n\
    \\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\t\ACK\DC2\EOT\177\n\
    \\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\a\STX\t\SOH\DC2\EOT\177\n\
    \\EM*\n\
    \\r\n\
    \\ENQ\EOT\a\STX\t\ETX\DC2\EOT\177\n\
    \-.\n\
    \^\n\
    \\EOT\EOT\a\STX\n\
    \\DC2\EOT\180\n\
    \\STX8\SUBP HTTP headers which must be present in the request for retries to be attempted.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\n\
    \\EOT\DC2\EOT\180\n\
    \\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\a\STX\n\
    \\ACK\DC2\EOT\180\n\
    \\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\a\STX\n\
    \\SOH\DC2\EOT\180\n\
    \\EM2\n\
    \\r\n\
    \\ENQ\EOT\a\STX\n\
    \\ETX\DC2\EOT\180\n\
    \57\n\
    \g\n\
    \\STX\EOT\b\DC2\ACK\184\n\
    \\NUL\213\n\
    \\SOH\SUBY HTTP request hedging :ref:`architecture overview <arch_overview_http_routing_hedging>`.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\b\SOH\DC2\EOT\184\n\
    \\b\DC3\n\
    \\v\n\
    \\ETX\EOT\b\a\DC2\EOT\185\n\
    \\STX`\n\
    \\DLE\n\
    \\b\EOT\b\a\211\136\225\ETX\SOH\DC2\EOT\185\n\
    \\STX`\n\
    \\150\SOH\n\
    \\EOT\EOT\b\STX\NUL\DC2\EOT\191\n\
    \\STXX\SUB\135\SOH Specifies the number of initial requests that should be sent upstream.\n\
    \ Must be at least 1.\n\
    \ Defaults to 1.\n\
    \ [#not-implemented-hide:]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\ACK\DC2\EOT\191\n\
    \\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\SOH\DC2\EOT\191\n\
    \\RS.\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\ETX\DC2\EOT\191\n\
    \12\n\
    \\r\n\
    \\ENQ\EOT\b\STX\NUL\b\DC2\EOT\191\n\
    \3W\n\
    \\DLE\n\
    \\b\EOT\b\STX\NUL\b\175\b\ENQ\DC2\EOT\191\n\
    \4V\n\
    \\183\SOH\n\
    \\EOT\EOT\b\STX\SOH\DC2\EOT\197\n\
    \\STX:\SUB\168\SOH Specifies a probability that an additional upstream request should be sent\n\
    \ on top of what is specified by initial_requests.\n\
    \ Defaults to 0.\n\
    \ [#not-implemented-hide:]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\ACK\DC2\EOT\197\n\
    \\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\SOH\DC2\EOT\197\n\
    \\FS5\n\
    \\r\n\
    \\ENQ\EOT\b\STX\SOH\ETX\DC2\EOT\197\n\
    \89\n\
    \\175\a\n\
    \\EOT\EOT\b\STX\STX\DC2\EOT\212\n\
    \\STX$\SUB\160\a Indicates that a hedged request should be sent when the per-try timeout is hit.\n\
    \ This means that a retry will be issued without resetting the original request, leaving multiple upstream requests in flight.\n\
    \ The first request to complete successfully will be the one returned to the caller.\n\
    \\n\
    \ * At any time, a successful response (i.e. not triggering any of the retry-on conditions) would be returned to the client.\n\
    \ * Before per-try timeout, an error response (per retry-on conditions) would be retried immediately or returned ot the client\n\
    \   if there are no more retries left.\n\
    \ * After per-try timeout, an error response would be discarded, as a retry in the form of a hedged request is already in progress.\n\
    \\n\
    \ Note: For this to have effect, you must have a :ref:`RetryPolicy <envoy_v3_api_msg_config.route.v3.RetryPolicy>` that retries at least\n\
    \ one error code and specifies a maximum number of retries.\n\
    \\n\
    \ Defaults to false.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\b\STX\STX\ENQ\DC2\EOT\212\n\
    \\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\b\STX\STX\SOH\DC2\EOT\212\n\
    \\a\US\n\
    \\r\n\
    \\ENQ\EOT\b\STX\STX\ETX\DC2\EOT\212\n\
    \\"#\n\
    \&\n\
    \\STX\EOT\t\DC2\ACK\216\n\
    \\NUL\192\v\SOH\SUB\CAN [#next-free-field: 10]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\t\SOH\DC2\EOT\216\n\
    \\b\SYN\n\
    \\v\n\
    \\ETX\EOT\t\a\DC2\EOT\217\n\
    \\STXc\n\
    \\DLE\n\
    \\b\EOT\t\a\211\136\225\ETX\SOH\DC2\EOT\217\n\
    \\STXc\n\
    \\SO\n\
    \\EOT\EOT\t\EOT\NUL\DC2\ACK\219\n\
    \\STX\234\n\
    \\ETX\n\
    \\r\n\
    \\ENQ\EOT\t\EOT\NUL\SOH\DC2\EOT\219\n\
    \\a\ESC\n\
    \;\n\
    \\ACK\EOT\t\EOT\NUL\STX\NUL\DC2\EOT\221\n\
    \\EOT\SUB\SUB+ Moved Permanently HTTP Status Code - 301.\n\
    \\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\NUL\SOH\DC2\EOT\221\n\
    \\EOT\NAK\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\NUL\STX\DC2\EOT\221\n\
    \\CAN\EM\n\
    \/\n\
    \\ACK\EOT\t\EOT\NUL\STX\SOH\DC2\EOT\224\n\
    \\EOT\SO\SUB\US Found HTTP Status Code - 302.\n\
    \\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\SOH\SOH\DC2\EOT\224\n\
    \\EOT\t\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\SOH\STX\DC2\EOT\224\n\
    \\f\r\n\
    \3\n\
    \\ACK\EOT\t\EOT\NUL\STX\STX\DC2\EOT\227\n\
    \\EOT\DC2\SUB# See Other HTTP Status Code - 303.\n\
    \\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\STX\SOH\DC2\EOT\227\n\
    \\EOT\r\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\STX\STX\DC2\EOT\227\n\
    \\DLE\DC1\n\
    \<\n\
    \\ACK\EOT\t\EOT\NUL\STX\ETX\DC2\EOT\230\n\
    \\EOT\ESC\SUB, Temporary Redirect HTTP Status Code - 307.\n\
    \\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\ETX\SOH\DC2\EOT\230\n\
    \\EOT\SYN\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\ETX\STX\DC2\EOT\230\n\
    \\EM\SUB\n\
    \<\n\
    \\ACK\EOT\t\EOT\NUL\STX\EOT\DC2\EOT\233\n\
    \\EOT\ESC\SUB, Permanent Redirect HTTP Status Code - 308.\n\
    \\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\EOT\SOH\DC2\EOT\233\n\
    \\EOT\SYN\n\
    \\SI\n\
    \\a\EOT\t\EOT\NUL\STX\EOT\STX\DC2\EOT\233\n\
    \\EM\SUB\n\
    \\225\STX\n\
    \\EOT\EOT\t\b\NUL\DC2\ACK\241\n\
    \\STX\247\n\
    \\ETX\SUB\208\STX When the scheme redirection take place, the following rules apply:\n\
    \  1. If the source URI scheme is `http` and the port is explicitly\n\
    \     set to `:80`, the port will be removed after the redirection\n\
    \  2. If the source URI scheme is `https` and the port is explicitly\n\
    \     set to `:443`, the port will be removed after the redirection\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\b\NUL\SOH\DC2\EOT\241\n\
    \\b \n\
    \K\n\
    \\EOT\EOT\t\STX\NUL\DC2\EOT\243\n\
    \\EOT\FS\SUB= The scheme portion of the URL will be swapped with \"https\".\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\NUL\ENQ\DC2\EOT\243\n\
    \\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\t\STX\NUL\SOH\DC2\EOT\243\n\
    \\t\ETB\n\
    \\r\n\
    \\ENQ\EOT\t\STX\NUL\ETX\DC2\EOT\243\n\
    \\SUB\ESC\n\
    \N\n\
    \\EOT\EOT\t\STX\SOH\DC2\EOT\246\n\
    \\EOT\US\SUB@ The scheme portion of the URL will be swapped with this value.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\SOH\ENQ\DC2\EOT\246\n\
    \\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\SOH\SOH\DC2\EOT\246\n\
    \\v\SUB\n\
    \\r\n\
    \\ENQ\EOT\t\STX\SOH\ETX\DC2\EOT\246\n\
    \\GS\RS\n\
    \N\n\
    \\EOT\EOT\t\STX\STX\DC2\ACK\250\n\
    \\STX\251\n\
    \V\SUB> The host portion of the URL will be swapped with this value.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\STX\ENQ\DC2\EOT\250\n\
    \\STX\b\n\
    \\r\n\
    \\ENQ\EOT\t\STX\STX\SOH\DC2\EOT\250\n\
    \\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\t\STX\STX\ETX\DC2\EOT\250\n\
    \\EM\SUB\n\
    \\r\n\
    \\ENQ\EOT\t\STX\STX\b\DC2\EOT\251\n\
    \\ACKU\n\
    \\DLE\n\
    \\b\EOT\t\STX\STX\b\175\b\SO\DC2\EOT\251\n\
    \\aT\n\
    \J\n\
    \\EOT\EOT\t\STX\ETX\DC2\EOT\254\n\
    \\STX\ESC\SUB< The port value of the URL will be swapped with this value.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ETX\ENQ\DC2\EOT\254\n\
    \\STX\b\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ETX\SOH\DC2\EOT\254\n\
    \\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ETX\ETX\DC2\EOT\254\n\
    \\EM\SUB\n\
    \\SO\n\
    \\EOT\EOT\t\b\SOH\DC2\ACK\128\v\STX\183\v\ETX\n\
    \\r\n\
    \\ENQ\EOT\t\b\SOH\SOH\DC2\EOT\128\v\b\RS\n\
    \\167\ACK\n\
    \\EOT\EOT\t\STX\EOT\DC2\ACK\145\v\EOT\146\vX\SUB\150\ACK The path portion of the URL will be swapped with this value.\n\
    \ Please note that query string in path_redirect will override the\n\
    \ request's query string and will not be stripped.\n\
    \\n\
    \ For example, let's say we have the following routes:\n\
    \\n\
    \ - match: { path: \"/old-path-1\" }\n\
    \   redirect: { path_redirect: \"/new-path-1\" }\n\
    \ - match: { path: \"/old-path-2\" }\n\
    \   redirect: { path_redirect: \"/new-path-2\", strip-query: \"true\" }\n\
    \ - match: { path: \"/old-path-3\" }\n\
    \   redirect: { path_redirect: \"/new-path-3?foo=1\", strip_query: \"true\" }\n\
    \\n\
    \ 1. if request uri is \"/old-path-1?bar=1\", users will be redirected to \"/new-path-1?bar=1\"\n\
    \ 2. if request uri is \"/old-path-2?bar=1\", users will be redirected to \"/new-path-2\"\n\
    \ 3. if request uri is \"/old-path-3?bar=1\", users will be redirected to \"/new-path-3?foo=1\"\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\EOT\ENQ\DC2\EOT\145\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\EOT\SOH\DC2\EOT\145\v\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\t\STX\EOT\ETX\DC2\EOT\145\v\ESC\FS\n\
    \\r\n\
    \\ENQ\EOT\t\STX\EOT\b\DC2\EOT\146\v\bW\n\
    \\DLE\n\
    \\b\EOT\t\STX\EOT\b\175\b\SO\DC2\EOT\146\v\tV\n\
    \\255\STX\n\
    \\EOT\EOT\t\STX\ENQ\DC2\ACK\156\v\EOT\157\vX\SUB\238\STX Indicates that during redirection, the matched prefix (or path)\n\
    \ should be swapped with this value. This option allows redirect URLs be dynamically created\n\
    \ based on the request.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   Pay attention to the use of trailing slashes as mentioned in\n\
    \   :ref:`RouteAction's prefix_rewrite <envoy_v3_api_field_config.route.v3.RouteAction.prefix_rewrite>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ENQ\ENQ\DC2\EOT\156\v\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ENQ\SOH\DC2\EOT\156\v\v\EM\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ENQ\ETX\DC2\EOT\156\v\FS\GS\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ENQ\b\DC2\EOT\157\v\bW\n\
    \\DLE\n\
    \\b\EOT\t\STX\ENQ\b\175\b\SO\DC2\EOT\157\v\tV\n\
    \\149\t\n\
    \\EOT\EOT\t\STX\ACK\DC2\EOT\182\v\EOT>\SUB\134\t Indicates that during redirect, portions of the path that match the\n\
    \ pattern should be rewritten, even allowing the substitution of capture\n\
    \ groups from the pattern into the new path as specified by the rewrite\n\
    \ substitution string. This is useful to allow application paths to be\n\
    \ rewritten in a way that is aware of segments with variable content like\n\
    \ identifiers.\n\
    \\n\
    \ Examples using Google's `RE2 <https://github.com/google/re2>`_ engine:\n\
    \\n\
    \ * The path pattern ``^/service/([^/]+)(/.*)$`` paired with a substitution\n\
    \   string of ``\\2/instance/\\1`` would transform ``/service/foo/v1/api``\n\
    \   into ``/v1/api/instance/foo``.\n\
    \\n\
    \ * The pattern ``one`` paired with a substitution string of ``two`` would\n\
    \   transform ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/two/zzz``.\n\
    \\n\
    \ * The pattern ``^(.*?)one(.*)$`` paired with a substitution string of\n\
    \   ``\\1two\\2`` would replace only the first occurrence of ``one``,\n\
    \   transforming path ``/xxx/one/yyy/one/zzz`` into ``/xxx/two/yyy/one/zzz``.\n\
    \\n\
    \ * The pattern ``(?i)/xxx/`` paired with a substitution string of ``/yyy/``\n\
    \   would do a case-insensitive match and transform path ``/aaa/XxX/bbb`` to\n\
    \   ``/aaa/yyy/bbb``.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ACK\ACK\DC2\EOT\182\v\EOT+\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ACK\SOH\DC2\EOT\182\v,9\n\
    \\r\n\
    \\ENQ\EOT\t\STX\ACK\ETX\DC2\EOT\182\v<=\n\
    \|\n\
    \\EOT\EOT\t\STX\a\DC2\EOT\187\v\STXX\SUBn The HTTP status code to use in the redirect response. The default response\n\
    \ code is MOVED_PERMANENTLY (301).\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\a\ACK\DC2\EOT\187\v\STX\SYN\n\
    \\r\n\
    \\ENQ\EOT\t\STX\a\SOH\DC2\EOT\187\v\ETB$\n\
    \\r\n\
    \\ENQ\EOT\t\STX\a\ETX\DC2\EOT\187\v'(\n\
    \\r\n\
    \\ENQ\EOT\t\STX\a\b\DC2\EOT\187\v)W\n\
    \\DLE\n\
    \\b\EOT\t\STX\a\b\175\b\DLE\DC2\EOT\187\v*V\n\
    \y\n\
    \\EOT\EOT\t\STX\b\DC2\EOT\191\v\STX\ETB\SUBk Indicates that during redirection, the query portion of the URL will\n\
    \ be removed. Default value is false.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\t\STX\b\ENQ\DC2\EOT\191\v\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\t\STX\b\SOH\DC2\EOT\191\v\a\DC2\n\
    \\r\n\
    \\ENQ\EOT\t\STX\b\ETX\DC2\EOT\191\v\NAK\SYN\n\
    \\f\n\
    \\STX\EOT\n\
    \\DC2\ACK\194\v\NUL\210\v\SOH\n\
    \\v\n\
    \\ETX\EOT\n\
    \\SOH\DC2\EOT\194\v\b\FS\n\
    \\r\n\
    \\ETX\EOT\n\
    \\a\DC2\ACK\195\v\STX\196\v0\n\
    \\DC2\n\
    \\b\EOT\n\
    \\a\211\136\225\ETX\SOH\DC2\ACK\195\v\STX\196\v0\n\
    \B\n\
    \\EOT\EOT\n\
    \\STX\NUL\DC2\EOT\199\v\STXC\SUB4 Specifies the HTTP response status to be returned.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\ENQ\DC2\EOT\199\v\STX\b\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\SOH\DC2\EOT\199\v\t\SI\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\ETX\DC2\EOT\199\v\DC2\DC3\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\NUL\b\DC2\EOT\199\v\DC4B\n\
    \\DLE\n\
    \\b\EOT\n\
    \\STX\NUL\b\175\b\ENQ\DC2\EOT\199\v\NAKA\n\
    \\138\ETX\n\
    \\EOT\EOT\n\
    \\STX\SOH\DC2\EOT\209\v\STX\RS\SUB\251\STX Specifies the content of the response body. If this setting is omitted,\n\
    \ no body is included in the generated response.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   Headers can be specified using *response_headers_to_add* in the enclosing\n\
    \   :ref:`envoy_v3_api_msg_config.route.v3.Route`, :ref:`envoy_v3_api_msg_config.route.v3.RouteConfiguration` or\n\
    \   :ref:`envoy_v3_api_msg_config.route.v3.VirtualHost`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\ACK\DC2\EOT\209\v\STX\DC4\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\SOH\DC2\EOT\209\v\NAK\EM\n\
    \\r\n\
    \\ENQ\EOT\n\
    \\STX\SOH\ETX\DC2\EOT\209\v\FS\GS\n\
    \(\n\
    \\STX\EOT\v\DC2\ACK\213\v\NUL\214\v\SOH\SUB\SUB [#not-implemented-hide:]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\v\SOH\DC2\EOT\213\v\b\ESC\n\
    \\f\n\
    \\STX\EOT\f\DC2\ACK\216\v\NUL\231\v\SOH\n\
    \\v\n\
    \\ETX\EOT\f\SOH\DC2\EOT\216\v\b\DC1\n\
    \\v\n\
    \\ETX\EOT\f\a\DC2\EOT\217\v\STX^\n\
    \\DLE\n\
    \\b\EOT\f\a\211\136\225\ETX\SOH\DC2\EOT\217\v\STX^\n\
    \\150\ETX\n\
    \\EOT\EOT\f\STX\NUL\DC2\EOT\227\v\STX@\SUB\135\ETX The operation name associated with the request matched to this route. If tracing is\n\
    \ enabled, this information will be used as the span name reported for this request.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   For ingress (inbound) requests, or egress (outbound) responses, this value may be overridden\n\
    \   by the :ref:`x-envoy-decorator-operation\n\
    \   <config_http_filters_router_x-envoy-decorator-operation>` header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\ENQ\DC2\EOT\227\v\STX\b\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\SOH\DC2\EOT\227\v\t\DC2\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\ETX\DC2\EOT\227\v\NAK\SYN\n\
    \\r\n\
    \\ENQ\EOT\f\STX\NUL\b\DC2\EOT\227\v\ETB?\n\
    \\DLE\n\
    \\b\EOT\f\STX\NUL\b\175\b\SO\DC2\EOT\227\v\CAN>\n\
    \k\n\
    \\EOT\EOT\f\STX\SOH\DC2\EOT\230\v\STX*\SUB] Whether the decorated details should be propagated to the other party. The default is true.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\ACK\DC2\EOT\230\v\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\SOH\DC2\EOT\230\v\FS%\n\
    \\r\n\
    \\ENQ\EOT\f\STX\SOH\ETX\DC2\EOT\230\v()\n\
    \\f\n\
    \\STX\EOT\r\DC2\ACK\233\v\NUL\140\f\SOH\n\
    \\v\n\
    \\ETX\EOT\r\SOH\DC2\EOT\233\v\b\SI\n\
    \\v\n\
    \\ETX\EOT\r\a\DC2\EOT\234\v\STX\\\n\
    \\DLE\n\
    \\b\EOT\r\a\211\136\225\ETX\SOH\DC2\EOT\234\v\STX\\\n\
    \\250\STX\n\
    \\EOT\EOT\r\STX\NUL\DC2\EOT\242\v\STX0\SUB\235\STX Target percentage of requests managed by this HTTP connection manager that will be force\n\
    \ traced if the :ref:`x-client-trace-id <config_http_conn_man_headers_x-client-trace-id>`\n\
    \ header is set. This field is a direct analog for the runtime variable\n\
    \ 'tracing.client_sampling' in the :ref:`HTTP Connection Manager\n\
    \ <config_http_conn_man_runtime>`.\n\
    \ Default: 100%\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\ACK\DC2\EOT\242\v\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\SOH\DC2\EOT\242\v\FS+\n\
    \\r\n\
    \\ENQ\EOT\r\STX\NUL\ETX\DC2\EOT\242\v./\n\
    \\226\STX\n\
    \\EOT\EOT\r\STX\SOH\DC2\EOT\249\v\STX0\SUB\211\STX Target percentage of requests managed by this HTTP connection manager that will be randomly\n\
    \ selected for trace generation, if not requested by the client or not forced. This field is\n\
    \ a direct analog for the runtime variable 'tracing.random_sampling' in the\n\
    \ :ref:`HTTP Connection Manager <config_http_conn_man_runtime>`.\n\
    \ Default: 100%\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\ACK\DC2\EOT\249\v\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\SOH\DC2\EOT\249\v\FS+\n\
    \\r\n\
    \\ENQ\EOT\r\STX\SOH\ETX\DC2\EOT\249\v./\n\
    \\236\EOT\n\
    \\EOT\EOT\r\STX\STX\DC2\EOT\131\f\STX1\SUB\221\EOT Target percentage of requests managed by this HTTP connection manager that will be traced\n\
    \ after all other sampling checks have been applied (client-directed, force tracing, random\n\
    \ sampling). This field functions as an upper limit on the total configured sampling rate. For\n\
    \ instance, setting client_sampling to 100% but overall_sampling to 1% will result in only 1%\n\
    \ of client requests with the appropriate headers to be force traced. This field is a direct\n\
    \ analog for the runtime variable 'tracing.global_enabled' in the\n\
    \ :ref:`HTTP Connection Manager <config_http_conn_man_runtime>`.\n\
    \ Default: 100%\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\ACK\DC2\EOT\131\f\STX\ESC\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\SOH\DC2\EOT\131\f\FS,\n\
    \\r\n\
    \\ENQ\EOT\r\STX\STX\ETX\DC2\EOT\131\f/0\n\
    \\225\ETX\n\
    \\EOT\EOT\r\STX\ETX\DC2\EOT\139\f\STX5\SUB\210\ETX A list of custom tags with unique tag name to create tags for the active span.\n\
    \ It will take effect after merging with the :ref:`corresponding configuration\n\
    \ <envoy_v3_api_field_extensions.filters.network.http_connection_manager.v3.HttpConnectionManager.Tracing.custom_tags>`\n\
    \ configured in the HTTP connection manager. If two tags with the same name are configured\n\
    \ each in the HTTP connection manager and the route level, the one configured here takes\n\
    \ priority.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\EOT\DC2\EOT\139\f\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\ACK\DC2\EOT\139\f\v$\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\SOH\DC2\EOT\139\f%0\n\
    \\r\n\
    \\ENQ\EOT\r\STX\ETX\ETX\DC2\EOT\139\f34\n\
    \\241\a\n\
    \\STX\EOT\SO\DC2\ACK\159\f\NUL\175\f\SOH\SUB\226\a A virtual cluster is a way of specifying a regex matching rule against\n\
    \ certain important endpoints such that statistics are generated explicitly for\n\
    \ the matched requests. The reason this is useful is that when doing\n\
    \ prefix/path matching Envoy does not always know what the application\n\
    \ considers to be an endpoint. Thus, it\226\128\153s impossible for Envoy to generically\n\
    \ emit per endpoint statistics. However, often systems have highly critical\n\
    \ endpoints that they wish to get \226\128\156perfect\226\128\157 statistics on. Virtual cluster\n\
    \ statistics are perfect in the sense that they are emitted on the downstream\n\
    \ side such that they include network level failures.\n\
    \\n\
    \ Documentation for :ref:`virtual cluster statistics <config_http_filters_router_vcluster_stats>`.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \    Virtual clusters are a useful tool, but we do not recommend setting up a virtual cluster for\n\
    \    every application endpoint. This is both not easily maintainable and as well the matching and\n\
    \    statistics output are not free.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\SO\SOH\DC2\EOT\159\f\b\SYN\n\
    \\v\n\
    \\ETX\EOT\SO\a\DC2\EOT\160\f\STXc\n\
    \\DLE\n\
    \\b\EOT\SO\a\211\136\225\ETX\SOH\DC2\EOT\160\f\STXc\n\
    \\v\n\
    \\ETX\EOT\SO\t\DC2\EOT\162\f\STX\DLE\n\
    \\f\n\
    \\EOT\EOT\SO\t\NUL\DC2\EOT\162\f\v\f\n\
    \\r\n\
    \\ENQ\EOT\SO\t\NUL\SOH\DC2\EOT\162\f\v\f\n\
    \\r\n\
    \\ENQ\EOT\SO\t\NUL\STX\DC2\EOT\162\f\v\f\n\
    \\f\n\
    \\EOT\EOT\SO\t\SOH\DC2\EOT\162\f\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\SO\t\SOH\SOH\DC2\EOT\162\f\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\SO\t\SOH\STX\DC2\EOT\162\f\SO\SI\n\
    \\v\n\
    \\ETX\EOT\SO\n\
    \\DC2\EOT\164\f\STX\US\n\
    \\f\n\
    \\EOT\EOT\SO\n\
    \\NUL\DC2\EOT\164\f\v\DC4\n\
    \\f\n\
    \\EOT\EOT\SO\n\
    \\SOH\DC2\EOT\164\f\SYN\RS\n\
    \\223\SOH\n\
    \\EOT\EOT\SO\STX\NUL\DC2\EOT\169\f\STX%\SUB\208\SOH Specifies a list of header matchers to use for matching requests. Each specified header must\n\
    \ match. The pseudo-headers `:path` and `:method` can be used to match the request path and\n\
    \ method, respectively.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\EOT\DC2\EOT\169\f\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\ACK\DC2\EOT\169\f\v\CAN\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\SOH\DC2\EOT\169\f\EM \n\
    \\r\n\
    \\ENQ\EOT\SO\STX\NUL\ETX\DC2\EOT\169\f#$\n\
    \\141\STX\n\
    \\EOT\EOT\SO\STX\SOH\DC2\EOT\174\f\STX;\SUB\254\SOH Specifies the name of the virtual cluster. The virtual cluster name as well\n\
    \ as the virtual host name are used when emitting statistics. The statistics are emitted by the\n\
    \ router filter and are documented :ref:`here <config_http_filters_router_stats>`.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\ENQ\DC2\EOT\174\f\STX\b\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\SOH\DC2\EOT\174\f\t\r\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\ETX\DC2\EOT\174\f\DLE\DC1\n\
    \\r\n\
    \\ENQ\EOT\SO\STX\SOH\b\DC2\EOT\174\f\DC2:\n\
    \\DLE\n\
    \\b\EOT\SO\STX\SOH\b\175\b\SO\DC2\EOT\174\f\DC39\n\
    \\215\SOH\n\
    \\STX\EOT\SI\DC2\ACK\179\f\NUL\177\SO\SOH\SUB\200\SOH Global rate limiting :ref:`architecture overview <arch_overview_global_rate_limit>`.\n\
    \ Also applies to Local rate limiting :ref:`using descriptors <config_http_filters_local_rate_limit_descriptors>`.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\SI\SOH\DC2\EOT\179\f\b\DC1\n\
    \\v\n\
    \\ETX\EOT\SI\a\DC2\EOT\180\f\STX^\n\
    \\DLE\n\
    \\b\EOT\SI\a\211\136\225\ETX\SOH\DC2\EOT\180\f\STX^\n\
    \(\n\
    \\EOT\EOT\SI\ETX\NUL\DC2\ACK\183\f\STX\132\SO\ETX\SUB\CAN [#next-free-field: 10]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\ETX\NUL\SOH\DC2\EOT\183\f\n\
    \\DLE\n\
    \\SI\n\
    \\ENQ\EOT\SI\ETX\NUL\a\DC2\ACK\184\f\EOT\185\f.\n\
    \\DC4\n\
    \\n\
    \\EOT\SI\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\184\f\EOT\185\f.\n\
    \\236\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\NUL\DC2\ACK\194\f\EOT\197\f\ENQ\SUB\217\SOH The following descriptor entry is appended to the descriptor:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"source_cluster\", \"<local service cluster>\")\n\
    \\n\
    \ <local service cluster> is derived from the :option:`--service-cluster` option.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\NUL\SOH\DC2\EOT\194\f\f\EM\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\NUL\a\DC2\ACK\195\f\ACK\196\f>\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\NUL\a\211\136\225\ETX\SOH\DC2\ACK\195\f\ACK\196\f>\n\
    \\180\ACK\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\SOH\DC2\ACK\215\f\EOT\218\f\ENQ\SUB\161\ACK The following descriptor entry is appended to the descriptor:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"destination_cluster\", \"<routed target cluster>\")\n\
    \\n\
    \ Once a request matches against a route table rule, a routed cluster is determined by one of\n\
    \ the following :ref:`route table configuration <envoy_v3_api_msg_config.route.v3.RouteConfiguration>`\n\
    \ settings:\n\
    \\n\
    \ * :ref:`cluster <envoy_v3_api_field_config.route.v3.RouteAction.cluster>` indicates the upstream cluster\n\
    \   to route to.\n\
    \ * :ref:`weighted_clusters <envoy_v3_api_field_config.route.v3.RouteAction.weighted_clusters>`\n\
    \   chooses a cluster randomly from a set of clusters with attributed weight.\n\
    \ * :ref:`cluster_header <envoy_v3_api_field_config.route.v3.RouteAction.cluster_header>` indicates which\n\
    \   header in the request contains the target cluster.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\SOH\SOH\DC2\EOT\215\f\f\RS\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\SOH\a\DC2\ACK\216\f\ACK\217\fC\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\SOH\a\211\136\225\ETX\SOH\DC2\ACK\216\f\ACK\217\fC\n\
    \\210\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\STX\DC2\ACK\226\f\EOT\243\f\ENQ\SUB\191\SOH The following descriptor entry is appended when a header contains a key that matches the\n\
    \ *header_name*:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"<descriptor_key>\", \"<header_value_queried_from_header>\")\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\STX\SOH\DC2\EOT\226\f\f\SUB\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\STX\a\DC2\ACK\227\f\ACK\228\f?\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\STX\a\211\136\225\ETX\SOH\DC2\ACK\227\f\ACK\228\f?\n\
    \\179\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\DC2\ACK\233\f\ACK\234\fd\SUB\158\SOH The header name to be queried from the request headers. The header\226\128\153s\n\
    \ value is used to populate the value of the descriptor entry for the\n\
    \ descriptor_key.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\ENQ\DC2\EOT\233\f\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\SOH\DC2\EOT\233\f\r\CAN\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\ETX\DC2\EOT\233\f\ESC\FS\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\b\DC2\EOT\234\f\n\
    \c\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\STX\STX\NUL\b\175\b\SO\DC2\EOT\234\f\vb\n\
    \;\n\
    \\b\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\DC2\EOT\237\f\ACKI\SUB) The key to use in the descriptor entry.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\ENQ\DC2\EOT\237\f\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\SOH\DC2\EOT\237\f\r\ESC\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\ETX\DC2\EOT\237\f\RS\US\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\b\DC2\EOT\237\f H\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\STX\STX\SOH\b\175\b\SO\DC2\EOT\237\f!G\n\
    \\244\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\STX\STX\STX\DC2\EOT\242\f\ACK\RS\SUB\225\SOH If set to true, Envoy skips the descriptor while calling rate limiting service\n\
    \ when header is not present in the request. By default it skips calling the\n\
    \ rate limiting service if this header is not present in the request.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\STX\ENQ\DC2\EOT\242\f\ACK\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\STX\SOH\DC2\EOT\242\f\v\EM\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\STX\STX\STX\ETX\DC2\EOT\242\f\FS\GS\n\
    \\160\STX\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\ETX\DC2\ACK\251\f\EOT\254\f\ENQ\SUB\141\STX The following descriptor entry is appended to the descriptor and is populated using the\n\
    \ trusted address from :ref:`x-forwarded-for <config_http_conn_man_headers_x-forwarded-for>`:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"remote_address\", \"<trusted address from x-forwarded-for>\")\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\ETX\SOH\DC2\EOT\251\f\f\EM\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\ETX\a\DC2\ACK\252\f\ACK\253\f>\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\ETX\a\211\136\225\ETX\SOH\DC2\ACK\252\f\ACK\253\f>\n\
    \\145\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\EOT\DC2\ACK\133\r\EOT\143\r\ENQ\SUB\DEL The following descriptor entry is appended to the descriptor:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"generic_key\", \"<descriptor_value>\")\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\EOT\SOH\DC2\EOT\133\r\f\SYN\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\EOT\a\DC2\ACK\134\r\ACK\135\r;\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\EOT\a\211\136\225\ETX\SOH\DC2\ACK\134\r\ACK\135\r;\n\
    \=\n\
    \\b\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\DC2\EOT\138\r\ACKK\SUB+ The value to use in the descriptor entry.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\ENQ\DC2\EOT\138\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\SOH\DC2\EOT\138\r\r\GS\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\ETX\DC2\EOT\138\r !\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\b\DC2\EOT\138\r\"J\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\EOT\STX\NUL\b\175\b\SO\DC2\EOT\138\r#I\n\
    \\131\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\EOT\STX\SOH\DC2\EOT\142\r\ACK \SUBq An optional key to use in the descriptor entry. If not set it defaults\n\
    \ to 'generic_key' as the descriptor key.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\SOH\ENQ\DC2\EOT\142\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\SOH\SOH\DC2\EOT\142\r\r\ESC\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\EOT\STX\SOH\ETX\DC2\EOT\142\r\RS\US\n\
    \\147\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\ENQ\DC2\ACK\150\r\EOT\169\r\ENQ\SUB\128\SOH The following descriptor entry is appended to the descriptor:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"header_match\", \"<descriptor_value>\")\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\ENQ\SOH\DC2\EOT\150\r\f\FS\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\ETX\ENQ\a\DC2\ACK\151\r\ACK\152\rA\n\
    \\SYN\n\
    \\f\EOT\SI\ETX\NUL\ETX\ENQ\a\211\136\225\ETX\SOH\DC2\ACK\151\r\ACK\152\rA\n\
    \=\n\
    \\b\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\DC2\EOT\155\r\ACKK\SUB+ The value to use in the descriptor entry.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\ENQ\DC2\EOT\155\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\SOH\DC2\EOT\155\r\r\GS\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\ETX\DC2\EOT\155\r !\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\b\DC2\EOT\155\r\"J\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\ENQ\STX\NUL\b\175\b\SO\DC2\EOT\155\r#I\n\
    \\250\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\ENQ\STX\SOH\DC2\EOT\161\r\ACK1\SUB\231\SOH If set to true, the action will append a descriptor entry when the\n\
    \ request matches the headers. If set to false, the action will append a\n\
    \ descriptor entry when the request does not match the headers. The\n\
    \ default value is true.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\SOH\ACK\DC2\EOT\161\r\ACK\US\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\SOH\SOH\DC2\EOT\161\r ,\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\SOH\ETX\DC2\EOT\161\r/0\n\
    \\227\STX\n\
    \\b\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\DC2\EOT\168\r\ACKV\SUB\208\STX Specifies a set of headers that the rate limit action should match\n\
    \ on. The action will check the request\226\128\153s headers against all the\n\
    \ specified headers in the config. A match will happen if all the\n\
    \ headers in the config are present in the request with the same values\n\
    \ (or based on presence if the value field is not in the config).\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\EOT\DC2\EOT\168\r\ACK\SO\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\ACK\DC2\EOT\168\r\SI\FS\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\SOH\DC2\EOT\168\r\GS$\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\ETX\DC2\EOT\168\r'(\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\b\DC2\EOT\168\r)U\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\ENQ\STX\STX\b\175\b\DC2\DC2\EOT\168\r*T\n\
    \\133\ETX\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\ACK\DC2\ACK\180\r\EOT\191\r\ENQ\SUB\242\STX The following descriptor entry is appended when the\n\
    \ :ref:`dynamic metadata <well_known_dynamic_metadata>` contains a key value:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"<descriptor_key>\", \"<value_queried_from_dynamic_metadata>\")\n\
    \\n\
    \ .. attention::\n\
    \   This action has been deprecated in favor of the :ref:`metadata <envoy_v3_api_msg_config.route.v3.RateLimit.Action.MetaData>` action\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\ACK\SOH\DC2\EOT\180\r\f\ESC\n\
    \;\n\
    \\b\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\DC2\EOT\182\r\ACKI\SUB) The key to use in the descriptor entry.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\ENQ\DC2\EOT\182\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\SOH\DC2\EOT\182\r\r\ESC\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\ETX\DC2\EOT\182\r\RS\US\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\b\DC2\EOT\182\r H\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\ACK\STX\NUL\b\175\b\SO\DC2\EOT\182\r!G\n\
    \\178\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\DC2\EOT\186\r\ACKb\SUB\159\SOH Metadata struct that defines the key and path to retrieve the string value. A match will\n\
    \ only happen if the value in the dynamic metadata is of type string.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\ACK\DC2\EOT\186\r\ACK\"\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\SOH\DC2\EOT\186\r#/\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\ETX\DC2\EOT\186\r23\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\b\DC2\EOT\186\r4a\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\ACK\STX\SOH\b\175\b\DC1\DC2\EOT\186\r5`\n\
    \\165\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\ACK\STX\STX\DC2\EOT\190\r\ACK\US\SUB\146\SOH An optional value to use if *metadata_key* is empty. If not set and\n\
    \ no value is present under the metadata_key then no descriptor is generated.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\STX\ENQ\DC2\EOT\190\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\STX\SOH\DC2\EOT\190\r\r\SUB\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\ACK\STX\STX\ETX\DC2\EOT\190\r\GS\RS\n\
    \\183\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\ETX\a\DC2\ACK\198\r\EOT\220\r\ENQ\SUB\164\SOH The following descriptor entry is appended when the metadata contains a key value:\n\
    \\n\
    \ .. code-block:: cpp\n\
    \\n\
    \   (\"<descriptor_key>\", \"<value_queried_from_metadata>\")\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\ETX\a\SOH\DC2\EOT\198\r\f\DC4\n\
    \\DC2\n\
    \\b\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\DC2\ACK\199\r\ACK\205\r\a\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\SOH\DC2\EOT\199\r\v\DC1\n\
    \Q\n\
    \\n\
    \\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\NUL\DC2\EOT\201\r\b\DC4\SUB= Query :ref:`dynamic metadata <well_known_dynamic_metadata>`\n\
    \\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\NUL\SOH\DC2\EOT\201\r\b\SI\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\NUL\STX\DC2\EOT\201\r\DC2\DC3\n\
    \k\n\
    \\n\
    \\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\SOH\DC2\EOT\204\r\b\CAN\SUBW Query :ref:`route entry metadata <envoy_v3_api_field_config.route.v3.Route.metadata>`\n\
    \\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\SOH\SOH\DC2\EOT\204\r\b\DC3\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\ETX\a\EOT\NUL\STX\SOH\STX\DC2\EOT\204\r\SYN\ETB\n\
    \;\n\
    \\b\EOT\SI\ETX\NUL\ETX\a\STX\NUL\DC2\EOT\208\r\ACKI\SUB) The key to use in the descriptor entry.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\NUL\ENQ\DC2\EOT\208\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\NUL\SOH\DC2\EOT\208\r\r\ESC\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\NUL\ETX\DC2\EOT\208\r\RS\US\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\NUL\b\DC2\EOT\208\r H\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\a\STX\NUL\b\175\b\SO\DC2\EOT\208\r!G\n\
    \\170\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\a\STX\SOH\DC2\EOT\212\r\ACKb\SUB\151\SOH Metadata struct that defines the key and path to retrieve the string value. A match will\n\
    \ only happen if the value in the metadata is of type string.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\SOH\ACK\DC2\EOT\212\r\ACK\"\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\SOH\SOH\DC2\EOT\212\r#/\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\SOH\ETX\DC2\EOT\212\r23\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\SOH\b\DC2\EOT\212\r4a\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\a\STX\SOH\b\175\b\DC1\DC2\EOT\212\r5`\n\
    \\165\SOH\n\
    \\b\EOT\SI\ETX\NUL\ETX\a\STX\STX\DC2\EOT\216\r\ACK\US\SUB\146\SOH An optional value to use if *metadata_key* is empty. If not set and\n\
    \ no value is present under the metadata_key then no descriptor is generated.\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\STX\ENQ\DC2\EOT\216\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\STX\SOH\DC2\EOT\216\r\r\SUB\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\STX\ETX\DC2\EOT\216\r\GS\RS\n\
    \&\n\
    \\b\EOT\SI\ETX\NUL\ETX\a\STX\ETX\DC2\EOT\219\r\ACKG\SUB\DC4 Source of metadata\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\ETX\ACK\DC2\EOT\219\r\ACK\f\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\ETX\SOH\DC2\EOT\219\r\r\DC3\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\ETX\ETX\DC2\EOT\219\r\SYN\ETB\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\ETX\a\STX\ETX\b\DC2\EOT\219\r\CANF\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\NUL\ETX\a\STX\ETX\b\175\b\DLE\DC2\EOT\219\r\EME\n\
    \\DLE\n\
    \\ACK\EOT\SI\ETX\NUL\b\NUL\DC2\ACK\222\r\EOT\131\SO\ENQ\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\b\NUL\SOH\DC2\EOT\222\r\n\
    \\SUB\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\b\NUL\STX\DC2\EOT\223\r\ACK(\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\NUL\b\NUL\STX\175\b\DC2\EOT\223\r\ACK(\n\
    \/\n\
    \\ACK\EOT\SI\ETX\NUL\STX\NUL\DC2\EOT\226\r\ACK'\SUB\US Rate limit on source cluster.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\NUL\ACK\DC2\EOT\226\r\ACK\DC3\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\NUL\SOH\DC2\EOT\226\r\DC4\"\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\NUL\ETX\DC2\EOT\226\r%&\n\
    \4\n\
    \\ACK\EOT\SI\ETX\NUL\STX\SOH\DC2\EOT\229\r\ACK1\SUB$ Rate limit on destination cluster.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\SOH\ACK\DC2\EOT\229\r\ACK\CAN\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\SOH\SOH\DC2\EOT\229\r\EM,\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\SOH\ETX\DC2\EOT\229\r/0\n\
    \0\n\
    \\ACK\EOT\SI\ETX\NUL\STX\STX\DC2\EOT\232\r\ACK)\SUB  Rate limit on request headers.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\STX\ACK\DC2\EOT\232\r\ACK\DC4\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\STX\SOH\DC2\EOT\232\r\NAK$\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\STX\ETX\DC2\EOT\232\r'(\n\
    \/\n\
    \\ACK\EOT\SI\ETX\NUL\STX\ETX\DC2\EOT\235\r\ACK'\SUB\US Rate limit on remote address.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ETX\ACK\DC2\EOT\235\r\ACK\DC3\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ETX\SOH\DC2\EOT\235\r\DC4\"\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ETX\ETX\DC2\EOT\235\r%&\n\
    \.\n\
    \\ACK\EOT\SI\ETX\NUL\STX\EOT\DC2\EOT\238\r\ACK!\SUB\RS Rate limit on a generic key.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\EOT\ACK\DC2\EOT\238\r\ACK\DLE\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\EOT\SOH\DC2\EOT\238\r\DC1\FS\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\EOT\ETX\DC2\EOT\238\r\US \n\
    \A\n\
    \\ACK\EOT\SI\ETX\NUL\STX\ENQ\DC2\EOT\241\r\ACK.\SUB1 Rate limit on the existence of request headers.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ENQ\ACK\DC2\EOT\241\r\ACK\SYN\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ENQ\SOH\DC2\EOT\241\r\ETB)\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ENQ\ETX\DC2\EOT\241\r,-\n\
    \\204\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\STX\ACK\DC2\ACK\247\r\ACK\251\r\b\SUB\185\SOH Rate limit on dynamic metadata.\n\
    \\n\
    \ .. attention::\n\
    \   This field has been deprecated in favor of the :ref:`metadata <envoy_v3_api_field_config.route.v3.RateLimit.Action.metadata>` field\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ACK\ACK\DC2\EOT\247\r\ACK\NAK\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ACK\SOH\DC2\EOT\247\r\SYN&\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\ACK\ETX\DC2\EOT\247\r)*\n\
    \\DC1\n\
    \\a\EOT\SI\ETX\NUL\STX\ACK\b\DC2\ACK\247\r+\251\r\a\n\
    \\DLE\n\
    \\b\EOT\SI\ETX\NUL\STX\ACK\b\ETX\DC2\EOT\248\r\b\EM\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\STX\ACK\b\242\232\128K\DC2\EOT\249\r\b?\n\
    \\DC3\n\
    \\v\EOT\SI\ETX\NUL\STX\ACK\b\231\173\174Z\DC2\EOT\250\r\b8\n\
    \)\n\
    \\ACK\EOT\SI\ETX\NUL\STX\a\DC2\EOT\254\r\ACK\FS\SUB\EM Rate limit on metadata.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\a\ACK\DC2\EOT\254\r\ACK\SO\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\a\SOH\DC2\EOT\254\r\SI\ETB\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\a\ETX\DC2\EOT\254\r\SUB\ESC\n\
    \\160\SOH\n\
    \\ACK\EOT\SI\ETX\NUL\STX\b\DC2\EOT\130\SO\ACK1\SUB\143\SOH Rate limit descriptor extension. See the rate limit descriptor extensions documentation.\n\
    \ [#extension-category: envoy.rate_limit_descriptors]\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\b\ACK\DC2\EOT\130\SO\ACK\"\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\b\SOH\DC2\EOT\130\SO#,\n\
    \\SI\n\
    \\a\EOT\SI\ETX\NUL\STX\b\ETX\DC2\EOT\130\SO/0\n\
    \\SO\n\
    \\EOT\EOT\SI\ETX\SOH\DC2\ACK\134\SO\STX\150\SO\ETX\n\
    \\r\n\
    \\ENQ\EOT\SI\ETX\SOH\SOH\DC2\EOT\134\SO\n\
    \\DC2\n\
    \C\n\
    \\ACK\EOT\SI\ETX\SOH\ETX\NUL\DC2\ACK\136\SO\EOT\142\SO\ENQ\SUB1 Fetches the override from the dynamic metadata.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\ETX\NUL\SOH\DC2\EOT\136\SO\f\ESC\n\
    \\165\STX\n\
    \\b\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\DC2\EOT\141\SO\ACKb\SUB\146\STX Metadata struct that defines the key and path to retrieve the struct value.\n\
    \ The value must be a struct containing an integer \"requests_per_unit\" property\n\
    \ and a \"unit\" property with a value parseable to :ref:`RateLimitUnit\n\
    \ enum <envoy_v3_api_enum_type.v3.RateLimitUnit>`\n\
    \\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\ACK\DC2\EOT\141\SO\ACK\"\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\SOH\DC2\EOT\141\SO#/\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\ETX\DC2\EOT\141\SO23\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\b\DC2\EOT\141\SO4a\n\
    \\DC4\n\
    \\f\EOT\SI\ETX\SOH\ETX\NUL\STX\NUL\b\175\b\DC1\DC2\EOT\141\SO5`\n\
    \\DLE\n\
    \\ACK\EOT\SI\ETX\SOH\b\NUL\DC2\ACK\144\SO\EOT\149\SO\ENQ\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\b\NUL\SOH\DC2\EOT\144\SO\n\
    \\FS\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\b\NUL\STX\DC2\EOT\145\SO\ACK(\n\
    \\DC1\n\
    \\t\EOT\SI\ETX\SOH\b\NUL\STX\175\b\DC2\EOT\145\SO\ACK(\n\
    \7\n\
    \\ACK\EOT\SI\ETX\SOH\STX\NUL\DC2\EOT\148\SO\ACK+\SUB' Limit override from dynamic metadata.\n\
    \\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\STX\NUL\ACK\DC2\EOT\148\SO\ACK\NAK\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\STX\NUL\SOH\DC2\EOT\148\SO\SYN&\n\
    \\SI\n\
    \\a\EOT\SI\ETX\SOH\STX\NUL\ETX\DC2\EOT\148\SO)*\n\
    \\254\SOH\n\
    \\EOT\EOT\SI\STX\NUL\DC2\EOT\159\SO\STXN\SUB\239\SOH Refers to the stage set in the filter. The rate limit configuration only\n\
    \ applies to filters with the same stage number. The default stage number is\n\
    \ 0.\n\
    \\n\
    \ .. note::\n\
    \\n\
    \   The filter supports a range of 0 - 10 inclusively for stage numbers.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\ACK\DC2\EOT\159\SO\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\SOH\DC2\EOT\159\SO\RS#\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\ETX\DC2\EOT\159\SO&'\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\NUL\b\DC2\EOT\159\SO(M\n\
    \\DLE\n\
    \\b\EOT\SI\STX\NUL\b\175\b\ENQ\DC2\EOT\159\SO)L\n\
    \V\n\
    \\EOT\EOT\SI\STX\SOH\DC2\EOT\162\SO\STX\EM\SUBH The key to be set in runtime to disable this rate limit configuration.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\ENQ\DC2\EOT\162\SO\STX\b\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\SOH\DC2\EOT\162\SO\t\DC4\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\SOH\ETX\DC2\EOT\162\SO\ETB\CAN\n\
    \\185\ETX\n\
    \\EOT\EOT\SI\STX\STX\DC2\EOT\170\SO\STXK\SUB\170\ETX A list of actions that are to be applied for this rate limit configuration.\n\
    \ Order matters as the actions are processed sequentially and the descriptor\n\
    \ is composed by appending descriptor entries in that sequence. If an action\n\
    \ cannot append a descriptor entry, no descriptor is generated for the\n\
    \ configuration. See :ref:`composing actions\n\
    \ <config_http_filters_rate_limit_composing_actions>` for additional documentation.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\STX\EOT\DC2\EOT\170\SO\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\STX\ACK\DC2\EOT\170\SO\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\STX\SOH\DC2\EOT\170\SO\DC2\EM\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\STX\ETX\DC2\EOT\170\SO\FS\GS\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\STX\b\DC2\EOT\170\SO\RSJ\n\
    \\DLE\n\
    \\b\EOT\SI\STX\STX\b\175\b\DC2\DC2\EOT\170\SO\USI\n\
    \\195\STX\n\
    \\EOT\EOT\SI\STX\ETX\DC2\EOT\176\SO\STX\NAK\SUB\180\STX An optional limit override to be appended to the descriptor produced by this\n\
    \ rate limit configuration. If the override value is invalid or cannot be resolved\n\
    \ from metadata, no override is provided. See :ref:`rate limit override\n\
    \ <config_http_filters_rate_limit_rate_limit_override>` for more information.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\ETX\ACK\DC2\EOT\176\SO\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\ETX\SOH\DC2\EOT\176\SO\v\DLE\n\
    \\r\n\
    \\ENQ\EOT\SI\STX\ETX\ETX\DC2\EOT\176\SO\DC3\DC4\n\
    \\139\a\n\
    \\STX\EOT\DLE\DC2\ACK\204\SO\NUL\147\SI\SOH\SUB\252\ACK .. attention::\n\
    \\n\
    \   Internally, Envoy always uses the HTTP/2 *:authority* header to represent the HTTP/1 *Host*\n\
    \   header. Thus, if attempting to match on *Host*, match on *:authority* instead.\n\
    \\n\
    \ .. attention::\n\
    \\n\
    \   To route on HTTP method, use the special HTTP/2 *:method* header. This works for both\n\
    \   HTTP/1 and HTTP/2 as Envoy normalizes headers. E.g.,\n\
    \\n\
    \   .. code-block:: json\n\
    \\n\
    \     {\n\
    \       \"name\": \":method\",\n\
    \       \"exact_match\": \"POST\"\n\
    \     }\n\
    \\n\
    \ .. attention::\n\
    \   In the absence of any header match specifier, match will default to :ref:`present_match\n\
    \   <envoy_v3_api_field_config.route.v3.HeaderMatcher.present_match>`. i.e, a request that has the :ref:`name\n\
    \   <envoy_v3_api_field_config.route.v3.HeaderMatcher.name>` header will match, regardless of the header's\n\
    \   value.\n\
    \\n\
    \  [#next-major-version: HeaderMatcher should be refactored to use StringMatcher.]\n\
    \ [#next-free-field: 13]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\DLE\SOH\DC2\EOT\204\SO\b\NAK\n\
    \\v\n\
    \\ETX\EOT\DLE\a\DC2\EOT\205\SO\STXb\n\
    \\DLE\n\
    \\b\EOT\DLE\a\211\136\225\ETX\SOH\DC2\EOT\205\SO\STXb\n\
    \\v\n\
    \\ETX\EOT\DLE\t\DC2\EOT\207\SO\STX\DC3\n\
    \\f\n\
    \\EOT\EOT\DLE\t\NUL\DC2\EOT\207\SO\v\f\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\NUL\SOH\DC2\EOT\207\SO\v\f\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\NUL\STX\DC2\EOT\207\SO\v\f\n\
    \\f\n\
    \\EOT\EOT\DLE\t\SOH\DC2\EOT\207\SO\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\SOH\SOH\DC2\EOT\207\SO\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\SOH\STX\DC2\EOT\207\SO\SO\SI\n\
    \\f\n\
    \\EOT\EOT\DLE\t\STX\DC2\EOT\207\SO\DC1\DC2\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\STX\SOH\DC2\EOT\207\SO\DC1\DC2\n\
    \\r\n\
    \\ENQ\EOT\DLE\t\STX\STX\DC2\EOT\207\SO\DC1\DC2\n\
    \\v\n\
    \\ETX\EOT\DLE\n\
    \\DC2\EOT\209\SO\STX\EM\n\
    \\f\n\
    \\EOT\EOT\DLE\n\
    \\NUL\DC2\EOT\209\SO\v\CAN\n\
    \B\n\
    \\EOT\EOT\DLE\STX\NUL\DC2\ACK\212\SO\STX\213\SO`\SUB2 Specifies the name of the header in the request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\ENQ\DC2\EOT\212\SO\STX\b\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\SOH\DC2\EOT\212\SO\t\r\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\ETX\DC2\EOT\212\SO\DLE\DC1\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\NUL\b\DC2\EOT\213\SO\ACK_\n\
    \\DLE\n\
    \\b\EOT\DLE\STX\NUL\b\175\b\SO\DC2\EOT\213\SO\a^\n\
    \X\n\
    \\EOT\EOT\DLE\b\NUL\DC2\ACK\216\SO\STX\138\SI\ETX\SUBH Specifies how the header match will be performed to route the request.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\b\NUL\SOH\DC2\EOT\216\SO\b\RS\n\
    \^\n\
    \\EOT\EOT\DLE\STX\SOH\DC2\EOT\218\SO\EOT\ESC\SUBP If specified, header match will be performed based on the value of the header.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\ENQ\DC2\EOT\218\SO\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\SOH\DC2\EOT\218\SO\v\SYN\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\SOH\ETX\DC2\EOT\218\SO\EM\SUB\n\
    \\240\SOH\n\
    \\EOT\EOT\DLE\STX\STX\DC2\EOT\223\SO\EOT7\SUB\225\SOH If specified, this regex string is a regular expression rule which implies the entire request\n\
    \ header value must match the regex. The rule will not match if only a subsequence of the\n\
    \ request header value matches the regex.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\ACK\DC2\EOT\223\SO\EOT \n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\SOH\DC2\EOT\223\SO!1\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\STX\ETX\DC2\EOT\223\SO46\n\
    \\244\EOT\n\
    \\EOT\EOT\DLE\STX\ETX\DC2\EOT\236\SO\EOT'\SUB\229\EOT If specified, header match will be performed based on range.\n\
    \ The rule will match if the request header value is within this range.\n\
    \ The entire request header value must represent an integer in base 10 notation: consisting of\n\
    \ an optional plus or minus sign followed by a sequence of digits. The rule will not match if\n\
    \ the header value does not represent an integer. Match will fail for empty values, floating\n\
    \ point numbers or if only a subsequence of the header value is an integer.\n\
    \\n\
    \ Examples:\n\
    \\n\
    \ * For range [-10,0), route will match for header value -1, but not for 0, \"somestring\", 10.9,\n\
    \   \"-1somestring\"\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\ACK\DC2\EOT\236\SO\EOT\SYN\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\SOH\DC2\EOT\236\SO\ETB\"\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ETX\ETX\DC2\EOT\236\SO%&\n\
    \\210\SOH\n\
    \\EOT\EOT\DLE\STX\EOT\DC2\EOT\240\SO\EOT\ESC\SUB\195\SOH If specified as true, header match will be performed based on whether the header is in the\n\
    \ request. If specified as false, header match will be performed based on whether the header is absent.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\ENQ\DC2\EOT\240\SO\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\SOH\DC2\EOT\240\SO\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\EOT\ETX\DC2\EOT\240\SO\EM\SUB\n\
    \\129\STX\n\
    \\EOT\EOT\DLE\STX\ENQ\DC2\EOT\248\SO\EOTE\SUB\242\SOH If specified, header match will be performed based on the prefix of the header value.\n\
    \ Note: empty prefix is not allowed, please use present_match instead.\n\
    \\n\
    \ Examples:\n\
    \\n\
    \ * The prefix *abcd* matches the value *abcdxyz*, but not for *abcxyz*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\ENQ\DC2\EOT\248\SO\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\SOH\DC2\EOT\248\SO\v\ETB\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\ETX\DC2\EOT\248\SO\SUB\ESC\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ENQ\b\DC2\EOT\248\SO\FSD\n\
    \\DLE\n\
    \\b\EOT\DLE\STX\ENQ\b\175\b\SO\DC2\EOT\248\SO\GSC\n\
    \\129\STX\n\
    \\EOT\EOT\DLE\STX\ACK\DC2\EOT\128\SI\EOTF\SUB\242\SOH If specified, header match will be performed based on the suffix of the header value.\n\
    \ Note: empty suffix is not allowed, please use present_match instead.\n\
    \\n\
    \ Examples:\n\
    \\n\
    \ * The suffix *abcd* matches the value *xyzabcd*, but not for *xyzbcd*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ACK\ENQ\DC2\EOT\128\SI\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ACK\SOH\DC2\EOT\128\SI\v\ETB\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ACK\ETX\DC2\EOT\128\SI\SUB\FS\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\ACK\b\DC2\EOT\128\SI\GSE\n\
    \\DLE\n\
    \\b\EOT\DLE\STX\ACK\b\175\b\SO\DC2\EOT\128\SI\RSD\n\
    \\169\STX\n\
    \\EOT\EOT\DLE\STX\a\DC2\EOT\137\SI\EOTH\SUB\154\STX If specified, header match will be performed based on whether the header value contains\n\
    \ the given value or not.\n\
    \ Note: empty contains match is not allowed, please use present_match instead.\n\
    \\n\
    \ Examples:\n\
    \\n\
    \ * The value *abcd* matches the value *xyzabcdpqr*, but not for *xyzbcdpqr*.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\a\ENQ\DC2\EOT\137\SI\EOT\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\a\SOH\DC2\EOT\137\SI\v\EM\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\a\ETX\DC2\EOT\137\SI\FS\RS\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\a\b\DC2\EOT\137\SI\USG\n\
    \\DLE\n\
    \\b\EOT\DLE\STX\a\b\175\b\SO\DC2\EOT\137\SI F\n\
    \\155\STX\n\
    \\EOT\EOT\DLE\STX\b\DC2\EOT\146\SI\STX\CAN\SUB\140\STX If specified, the match result will be inverted before checking. Defaults to false.\n\
    \\n\
    \ Examples:\n\
    \\n\
    \ * The regex ``\\d{3}`` does not match the value *1234*, so it will match when inverted.\n\
    \ * The range [-10,0) will match the value -1, so it will not match when inverted.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\b\ENQ\DC2\EOT\146\SI\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\b\SOH\DC2\EOT\146\SI\a\DC3\n\
    \\r\n\
    \\ENQ\EOT\DLE\STX\b\ETX\DC2\EOT\146\SI\SYN\ETB\n\
    \\183\SOH\n\
    \\STX\EOT\DC1\DC2\ACK\152\SI\NUL\171\SI\SOH\SUB\168\SOH Query parameter matching treats the query string of a request's :path header\n\
    \ as an ampersand-separated list of keys and/or key=value elements.\n\
    \ [#next-free-field: 7]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\DC1\SOH\DC2\EOT\152\SI\b\GS\n\
    \\r\n\
    \\ETX\EOT\DC1\a\DC2\ACK\153\SI\STX\154\SI1\n\
    \\DC2\n\
    \\b\EOT\DC1\a\211\136\225\ETX\SOH\DC2\ACK\153\SI\STX\154\SI1\n\
    \\v\n\
    \\ETX\EOT\DC1\t\DC2\EOT\156\SI\STX\DLE\n\
    \\f\n\
    \\EOT\EOT\DC1\t\NUL\DC2\EOT\156\SI\v\f\n\
    \\r\n\
    \\ENQ\EOT\DC1\t\NUL\SOH\DC2\EOT\156\SI\v\f\n\
    \\r\n\
    \\ENQ\EOT\DC1\t\NUL\STX\DC2\EOT\156\SI\v\f\n\
    \\f\n\
    \\EOT\EOT\DC1\t\SOH\DC2\EOT\156\SI\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\DC1\t\SOH\SOH\DC2\EOT\156\SI\SO\SI\n\
    \\r\n\
    \\ENQ\EOT\DC1\t\SOH\STX\DC2\EOT\156\SI\SO\SI\n\
    \\v\n\
    \\ETX\EOT\DC1\n\
    \\DC2\EOT\158\SI\STX\FS\n\
    \\f\n\
    \\EOT\EOT\DC1\n\
    \\NUL\DC2\EOT\158\SI\v\DC2\n\
    \\f\n\
    \\EOT\EOT\DC1\n\
    \\SOH\DC2\EOT\158\SI\DC4\ESC\n\
    \i\n\
    \\EOT\EOT\DC1\STX\NUL\DC2\EOT\162\SI\STXK\SUB[ Specifies the name of a key that must be present in the requested\n\
    \ *path*'s query string.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\ENQ\DC2\EOT\162\SI\STX\b\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\SOH\DC2\EOT\162\SI\t\r\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\ETX\DC2\EOT\162\SI\DLE\DC1\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\NUL\b\DC2\EOT\162\SI\DC2J\n\
    \\DLE\n\
    \\b\EOT\DC1\STX\NUL\b\175\b\SO\DC2\EOT\162\SI\DC3I\n\
    \\SO\n\
    \\EOT\EOT\DC1\b\NUL\DC2\ACK\164\SI\STX\170\SI\ETX\n\
    \\r\n\
    \\ENQ\EOT\DC1\b\NUL\SOH\DC2\EOT\164\SI\b'\n\
    \X\n\
    \\EOT\EOT\DC1\STX\SOH\DC2\EOT\166\SI\EOTa\SUBJ Specifies whether a query parameter value should match against a string.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\ACK\DC2\EOT\166\SI\EOT!\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\SOH\DC2\EOT\166\SI\".\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\ETX\DC2\EOT\166\SI12\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\SOH\b\DC2\EOT\166\SI3`\n\
    \\DLE\n\
    \\b\EOT\DC1\STX\SOH\b\175\b\DC1\DC2\EOT\166\SI4_\n\
    \F\n\
    \\EOT\EOT\DC1\STX\STX\DC2\EOT\169\SI\EOT\ESC\SUB8 Specifies whether a query parameter should be present.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\ENQ\DC2\EOT\169\SI\EOT\b\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\SOH\DC2\EOT\169\SI\t\SYN\n\
    \\r\n\
    \\ENQ\EOT\DC1\STX\STX\ETX\DC2\EOT\169\SI\EM\SUB\n\
    \g\n\
    \\STX\EOT\DC2\DC2\ACK\174\SI\NUL\199\SI\SOH\SUBY HTTP Internal Redirect :ref:`architecture overview <arch_overview_internal_redirects>`.\n\
    \\n\
    \\v\n\
    \\ETX\EOT\DC2\SOH\DC2\EOT\174\SI\b\RS\n\
    \\151\EOT\n\
    \\EOT\EOT\DC2\STX\NUL\DC2\EOT\183\SI\STX9\SUB\136\EOT An internal redirect is not handled, unless the number of previous internal redirects that a\n\
    \ downstream request has encountered is lower than this value.\n\
    \ In the case where a downstream request is bounced among multiple routes by internal redirect,\n\
    \ the first route that hits this threshold, or does not set :ref:`internal_redirect_policy\n\
    \ <envoy_v3_api_field_config.route.v3.RouteAction.internal_redirect_policy>`\n\
    \ will pass the redirect back to downstream.\n\
    \\n\
    \ If not specified, at most one redirect will be followed.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\ACK\DC2\EOT\183\SI\STX\GS\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\SOH\DC2\EOT\183\SI\RS4\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\NUL\ETX\DC2\EOT\183\SI78\n\
    \\243\SOH\n\
    \\EOT\EOT\DC2\STX\SOH\DC2\EOT\188\SI\STX[\SUB\228\SOH Defines what upstream response codes are allowed to trigger internal redirect. If unspecified,\n\
    \ only 302 will be treated as internal redirect.\n\
    \ Only 301, 302, 303, 307 and 308 are valid values. Any other codes will be ignored.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\EOT\DC2\EOT\188\SI\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\ENQ\DC2\EOT\188\SI\v\DC1\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\SOH\DC2\EOT\188\SI\DC2)\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\ETX\DC2\EOT\188\SI,-\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\SOH\b\DC2\EOT\188\SI.Z\n\
    \\DLE\n\
    \\b\EOT\DC2\STX\SOH\b\175\b\DC2\DC2\EOT\188\SI/Y\n\
    \\189\STX\n\
    \\EOT\EOT\DC2\STX\STX\DC2\EOT\194\SI\STX7\SUB\174\STX Specifies a list of predicates that are queried when an upstream response is deemed\n\
    \ to trigger an internal redirect by all other criteria. Any predicate in the list can reject\n\
    \ the redirect, causing the response to be proxied to downstream.\n\
    \ [#extension-category: envoy.internal_redirect_predicates]\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\EOT\DC2\EOT\194\SI\STX\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\ACK\DC2\EOT\194\SI\v'\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\SOH\DC2\EOT\194\SI(2\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\STX\ETX\DC2\EOT\194\SI56\n\
    \\147\SOH\n\
    \\EOT\EOT\DC2\STX\ETX\DC2\EOT\198\SI\STX'\SUB\132\SOH Allow internal redirect to follow a target URI with a different scheme than the value of\n\
    \ x-forwarded-proto. The default is false.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\ENQ\DC2\EOT\198\SI\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\SOH\DC2\EOT\198\SI\a\"\n\
    \\r\n\
    \\ENQ\EOT\DC2\STX\ETX\ETX\DC2\EOT\198\SI%&\n\
    \\182\EOT\n\
    \\STX\EOT\DC3\DC2\ACK\208\SI\NUL\216\SI\SOH\SUB\167\EOT A simple wrapper for an HTTP filter config. This is intended to be used as a wrapper for the\n\
    \ map value in\n\
    \ :ref:`VirtualHost.typed_per_filter_config<envoy_v3_api_field_config.route.v3.VirtualHost.typed_per_filter_config>`,\n\
    \ :ref:`Route.typed_per_filter_config<envoy_v3_api_field_config.route.v3.Route.typed_per_filter_config>`,\n\
    \ or :ref:`WeightedCluster.ClusterWeight.typed_per_filter_config<envoy_v3_api_field_config.route.v3.WeightedCluster.ClusterWeight.typed_per_filter_config>`\n\
    \ to add additional flags to the filter.\n\
    \ [#not-implemented-hide:]\n\
    \\n\
    \\v\n\
    \\ETX\EOT\DC3\SOH\DC2\EOT\208\SI\b\DC4\n\
    \\"\n\
    \\EOT\EOT\DC3\STX\NUL\DC2\EOT\210\SI\STX!\SUB\DC4 The filter config.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\ACK\DC2\EOT\210\SI\STX\NAK\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\SOH\DC2\EOT\210\SI\SYN\FS\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\NUL\ETX\DC2\EOT\210\SI\US \n\
    \\179\SOH\n\
    \\EOT\EOT\DC3\STX\SOH\DC2\EOT\215\SI\STX\ETB\SUB\164\SOH If true, the filter is optional, meaning that if the client does\n\
    \ not support the specified filter, it may ignore the map entry rather\n\
    \ than rejecting the config.\n\
    \\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\ENQ\DC2\EOT\215\SI\STX\ACK\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\SOH\DC2\EOT\215\SI\a\DC2\n\
    \\r\n\
    \\ENQ\EOT\DC3\STX\SOH\ETX\DC2\EOT\215\SI\NAK\SYNb\ACKproto3"